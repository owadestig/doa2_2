from .graph import Graph

data = [dict() for _ in range(42)]
# Graph consisting of 2 nodes
data[0]["graph"] = Graph(is_directed=False)
data[0]["graph"].add_edge("a", "b", 28)
data[0]["graph"].add_edge("a", "c", 1171)
data[0]["graph"].add_edge("b", "c", 1277)
data[0]["mst"] = Graph(is_directed=False)
data[0]["mst"].add_edge("a", "b", weight=28)
data[0]["mst"].add_edge("a", "c", weight=1171)
data[0]["solutions"] = [
    { "edge": ("b", "c"), "weight": 1278, "expected": [('a', 'b'), ('a', 'c')] },
    { "edge": ("b", "c"), "weight": 27, "expected": [('a', 'b'), ('b', 'c')] },
    { "edge": ("a", "b"), "weight": 27, "expected": [('a', 'b'), ('a', 'c')] },
    { "edge": ("a", "b"), "weight": 29, "expected": [('a', 'b'), ('a', 'c')] }
]
# Graph consisting of 3 nodes
data[1]["graph"] = Graph(is_directed=False)
data[1]["graph"].add_edge("a", "b", 726)
data[1]["graph"].add_edge("a", "c", 1266)
data[1]["graph"].add_edge("a", "d", 1176)
data[1]["graph"].add_edge("b", "c", 933)
data[1]["graph"].add_edge("b", "d", 798)
data[1]["graph"].add_edge("c", "d", 710)
data[1]["mst"] = Graph(is_directed=False)
data[1]["mst"].add_edge("a", "b", weight=726)
data[1]["mst"].add_edge("b", "d", weight=798)
data[1]["mst"].add_edge("c", "d", weight=710)
data[1]["solutions"] = [
    { "edge": ("a", "c"), "weight": 1267, "expected": [('a', 'b'), ('b', 'd'), ('c', 'd')] },
    { "edge": ("a", "d"), "weight": 709, "expected": [('a', 'd'), ('a', 'b'), ('c', 'd')] },
    { "edge": ("b", "d"), "weight": 797, "expected": [('a', 'b'), ('b', 'd'), ('c', 'd')] },
    { "edge": ("a", "b"), "weight": 727, "expected": [('a', 'b'), ('b', 'd'), ('c', 'd')] }
]
# Graph consisting of 4 nodes
data[2]["graph"] = Graph(is_directed=False)
data[2]["graph"].add_edge("a", "b", 930)
data[2]["graph"].add_edge("a", "c", 425)
data[2]["graph"].add_edge("a", "e", 297)
data[2]["graph"].add_edge("b", "c", 145)
data[2]["graph"].add_edge("b", "e", 905)
data[2]["graph"].add_edge("c", "d", 691)
data[2]["graph"].add_edge("e", "d", 46)
data[2]["mst"] = Graph(is_directed=False)
data[2]["mst"].add_edge("a", "c", weight=425)
data[2]["mst"].add_edge("a", "e", weight=297)
data[2]["mst"].add_edge("b", "c", weight=145)
data[2]["mst"].add_edge("e", "d", weight=46)
data[2]["solutions"] = [
    { "edge": ("b", "e"), "weight": 906, "expected": [('a', 'e'), ('a', 'c'), ('b', 'c'), ('e', 'd')] },
    { "edge": ("b", "e"), "weight": 144, "expected": [('a', 'e'), ('b', 'e'), ('b', 'c'), ('e', 'd')] },
    { "edge": ("a", "c"), "weight": 424, "expected": [('a', 'e'), ('a', 'c'), ('b', 'c'), ('e', 'd')] },
    { "edge": ("b", "c"), "weight": 146, "expected": [('a', 'e'), ('a', 'c'), ('b', 'c'), ('e', 'd')] }
]
# Graph consisting of 5 nodes
data[3]["graph"] = Graph(is_directed=False)
data[3]["graph"].add_edge("a", "c", 493)
data[3]["graph"].add_edge("a", "e", 224)
data[3]["graph"].add_edge("a", "f", 125)
data[3]["graph"].add_edge("b", "d", 1024)
data[3]["graph"].add_edge("c", "b", 377)
data[3]["graph"].add_edge("c", "f", 655)
data[3]["graph"].add_edge("e", "d", 504)
data[3]["graph"].add_edge("f", "b", 121)
data[3]["mst"] = Graph(is_directed=False)
data[3]["mst"].add_edge("a", "e", weight=224)
data[3]["mst"].add_edge("a", "f", weight=125)
data[3]["mst"].add_edge("c", "b", weight=377)
data[3]["mst"].add_edge("e", "d", weight=504)
data[3]["mst"].add_edge("f", "b", weight=121)
data[3]["solutions"] = [
    { "edge": ("c", "f"), "weight": 656, "expected": [('a', 'f'), ('a', 'e'), ('c', 'b'), ('e', 'd'), ('f', 'b')] },
    { "edge": ("c", "f"), "weight": 120, "expected": [('a', 'f'), ('a', 'e'), ('c', 'f'), ('e', 'd'), ('f', 'b')] },
    { "edge": ("c", "b"), "weight": 376, "expected": [('a', 'f'), ('a', 'e'), ('c', 'b'), ('e', 'd'), ('f', 'b')] },
    { "edge": ("a", "e"), "weight": 225, "expected": [('a', 'f'), ('a', 'e'), ('c', 'b'), ('e', 'd'), ('f', 'b')] }
]
# Graph consisting of 6 nodes
data[4]["graph"] = Graph(is_directed=False)
data[4]["graph"].add_edge("a", "b", 910)
data[4]["graph"].add_edge("a", "f", 186)
data[4]["graph"].add_edge("a", "g", 946)
data[4]["graph"].add_edge("b", "e", 1444)
data[4]["graph"].add_edge("b", "g", 1281)
data[4]["graph"].add_edge("c", "d", 631)
data[4]["graph"].add_edge("e", "c", 643)
data[4]["graph"].add_edge("e", "d", 144)
data[4]["graph"].add_edge("f", "c", 48)
data[4]["graph"].add_edge("g", "d", 1193)
data[4]["mst"] = Graph(is_directed=False)
data[4]["mst"].add_edge("a", "b", weight=910)
data[4]["mst"].add_edge("a", "f", weight=186)
data[4]["mst"].add_edge("a", "g", weight=946)
data[4]["mst"].add_edge("c", "d", weight=631)
data[4]["mst"].add_edge("e", "d", weight=144)
data[4]["mst"].add_edge("f", "c", weight=48)
data[4]["solutions"] = [
    { "edge": ("e", "c"), "weight": 644, "expected": [('a', 'f'), ('a', 'b'), ('a', 'g'), ('f', 'c'), ('e', 'd'), ('c', 'd')] },
    { "edge": ("g", "d"), "weight": 47, "expected": [('a', 'f'), ('a', 'b'), ('f', 'c'), ('g', 'd'), ('e', 'd'), ('c', 'd')] },
    { "edge": ("f", "c"), "weight": 47, "expected": [('a', 'f'), ('a', 'b'), ('a', 'g'), ('f', 'c'), ('e', 'd'), ('c', 'd')] },
    { "edge": ("a", "b"), "weight": 911, "expected": [('a', 'f'), ('a', 'b'), ('a', 'g'), ('f', 'c'), ('e', 'd'), ('c', 'd')] }
]
# Graph consisting of 7 nodes
data[5]["graph"] = Graph(is_directed=False)
data[5]["graph"].add_edge("a", "b", 1423)
data[5]["graph"].add_edge("a", "c", 1080)
data[5]["graph"].add_edge("a", "h", 1296)
data[5]["graph"].add_edge("b", "f", 492)
data[5]["graph"].add_edge("b", "g", 429)
data[5]["graph"].add_edge("c", "e", 1627)
data[5]["graph"].add_edge("c", "g", 101)
data[5]["graph"].add_edge("e", "d", 919)
data[5]["graph"].add_edge("f", "e", 1474)
data[5]["graph"].add_edge("g", "d", 361)
data[5]["graph"].add_edge("h", "d", 806)
data[5]["graph"].add_edge("h", "f", 378)
data[5]["mst"] = Graph(is_directed=False)
data[5]["mst"].add_edge("a", "c", weight=1080)
data[5]["mst"].add_edge("b", "f", weight=492)
data[5]["mst"].add_edge("b", "g", weight=429)
data[5]["mst"].add_edge("c", "g", weight=101)
data[5]["mst"].add_edge("e", "d", weight=919)
data[5]["mst"].add_edge("g", "d", weight=361)
data[5]["mst"].add_edge("h", "f", weight=378)
data[5]["solutions"] = [
    { "edge": ("c", "e"), "weight": 1628, "expected": [('a', 'c'), ('b', 'g'), ('b', 'f'), ('c', 'g'), ('h', 'f'), ('g', 'd'), ('e', 'd')] },
    { "edge": ("a", "b"), "weight": 918, "expected": [('a', 'b'), ('b', 'g'), ('b', 'f'), ('c', 'g'), ('h', 'f'), ('g', 'd'), ('e', 'd')] },
    { "edge": ("e", "d"), "weight": 918, "expected": [('a', 'c'), ('b', 'g'), ('b', 'f'), ('c', 'g'), ('h', 'f'), ('g', 'd'), ('e', 'd')] },
    { "edge": ("e", "d"), "weight": 920, "expected": [('a', 'c'), ('b', 'g'), ('b', 'f'), ('c', 'g'), ('h', 'f'), ('g', 'd'), ('e', 'd')] }
]
# Graph consisting of 8 nodes
data[6]["graph"] = Graph(is_directed=False)
data[6]["graph"].add_edge("a", "b", 807)
data[6]["graph"].add_edge("a", "g", 1537)
data[6]["graph"].add_edge("a", "i", 1232)
data[6]["graph"].add_edge("b", "c", 983)
data[6]["graph"].add_edge("b", "e", 9)
data[6]["graph"].add_edge("c", "e", 677)
data[6]["graph"].add_edge("c", "h", 1531)
data[6]["graph"].add_edge("e", "d", 878)
data[6]["graph"].add_edge("g", "d", 854)
data[6]["graph"].add_edge("g", "f", 534)
data[6]["graph"].add_edge("h", "d", 700)
data[6]["graph"].add_edge("h", "f", 524)
data[6]["graph"].add_edge("i", "f", 773)
data[6]["mst"] = Graph(is_directed=False)
data[6]["mst"].add_edge("a", "b", weight=807)
data[6]["mst"].add_edge("b", "e", weight=9)
data[6]["mst"].add_edge("c", "e", weight=677)
data[6]["mst"].add_edge("e", "d", weight=878)
data[6]["mst"].add_edge("g", "f", weight=534)
data[6]["mst"].add_edge("h", "d", weight=700)
data[6]["mst"].add_edge("h", "f", weight=524)
data[6]["mst"].add_edge("i", "f", weight=773)
data[6]["solutions"] = [
    { "edge": ("c", "h"), "weight": 1532, "expected": [('a', 'b'), ('i', 'f'), ('b', 'e'), ('g', 'f'), ('c', 'e'), ('e', 'd'), ('h', 'f'), ('h', 'd')] },
    { "edge": ("a", "g"), "weight": 8, "expected": [('a', 'g'), ('a', 'b'), ('i', 'f'), ('b', 'e'), ('g', 'f'), ('c', 'e'), ('h', 'f'), ('h', 'd')] },
    { "edge": ("e", "d"), "weight": 877, "expected": [('a', 'b'), ('i', 'f'), ('b', 'e'), ('g', 'f'), ('c', 'e'), ('e', 'd'), ('h', 'f'), ('h', 'd')] },
    { "edge": ("a", "b"), "weight": 808, "expected": [('a', 'b'), ('i', 'f'), ('b', 'e'), ('g', 'f'), ('c', 'e'), ('e', 'd'), ('h', 'f'), ('h', 'd')] }
]
# Graph consisting of 9 nodes
data[7]["graph"] = Graph(is_directed=False)
data[7]["graph"].add_edge("a", "c", 1649)
data[7]["graph"].add_edge("a", "f", 651)
data[7]["graph"].add_edge("a", "j", 902)
data[7]["graph"].add_edge("b", "e", 217)
data[7]["graph"].add_edge("b", "g", 370)
data[7]["graph"].add_edge("c", "b", 790)
data[7]["graph"].add_edge("c", "h", 1305)
data[7]["graph"].add_edge("e", "d", 1427)
data[7]["graph"].add_edge("e", "h", 102)
data[7]["graph"].add_edge("f", "d", 233)
data[7]["graph"].add_edge("g", "d", 626)
data[7]["graph"].add_edge("g", "h", 132)
data[7]["graph"].add_edge("j", "f", 383)
data[7]["graph"].add_edge("j", "i", 361)
data[7]["mst"] = Graph(is_directed=False)
data[7]["mst"].add_edge("a", "f", weight=651)
data[7]["mst"].add_edge("b", "e", weight=217)
data[7]["mst"].add_edge("c", "b", weight=790)
data[7]["mst"].add_edge("e", "h", weight=102)
data[7]["mst"].add_edge("f", "d", weight=233)
data[7]["mst"].add_edge("g", "d", weight=626)
data[7]["mst"].add_edge("g", "h", weight=132)
data[7]["mst"].add_edge("j", "f", weight=383)
data[7]["mst"].add_edge("j", "i", weight=361)
data[7]["solutions"] = [
    { "edge": ("e", "d"), "weight": 1428, "expected": [('a', 'f'), ('j', 'i'), ('j', 'f'), ('c', 'b'), ('f', 'd'), ('b', 'e'), ('e', 'h'), ('g', 'h'), ('g', 'd')] },
    { "edge": ("c", "h"), "weight": 382, "expected": [('a', 'f'), ('j', 'i'), ('j', 'f'), ('c', 'h'), ('f', 'd'), ('b', 'e'), ('e', 'h'), ('g', 'h'), ('g', 'd')] },
    { "edge": ("e", "h"), "weight": 101, "expected": [('a', 'f'), ('j', 'i'), ('j', 'f'), ('c', 'b'), ('f', 'd'), ('b', 'e'), ('e', 'h'), ('g', 'h'), ('g', 'd')] },
    { "edge": ("a", "f"), "weight": 652, "expected": [('a', 'f'), ('j', 'i'), ('j', 'f'), ('c', 'b'), ('f', 'd'), ('b', 'e'), ('e', 'h'), ('g', 'h'), ('g', 'd')] }
]
# Graph consisting of 10 nodes
data[8]["graph"] = Graph(is_directed=False)
data[8]["graph"].add_edge("a", "c", 645)
data[8]["graph"].add_edge("a", "e", 173)
data[8]["graph"].add_edge("a", "k", 887)
data[8]["graph"].add_edge("b", "g", 1044)
data[8]["graph"].add_edge("b", "h", 305)
data[8]["graph"].add_edge("b", "i", 632)
data[8]["graph"].add_edge("c", "d", 1367)
data[8]["graph"].add_edge("c", "e", 1086)
data[8]["graph"].add_edge("d", "f", 1529)
data[8]["graph"].add_edge("e", "f", 1654)
data[8]["graph"].add_edge("f", "j", 825)
data[8]["graph"].add_edge("g", "d", 1331)
data[8]["graph"].add_edge("g", "j", 988)
data[8]["graph"].add_edge("h", "j", 774)
data[8]["graph"].add_edge("i", "h", 1600)
data[8]["graph"].add_edge("k", "i", 1108)
data[8]["mst"] = Graph(is_directed=False)
data[8]["mst"].add_edge("a", "c", weight=645)
data[8]["mst"].add_edge("a", "e", weight=173)
data[8]["mst"].add_edge("a", "k", weight=887)
data[8]["mst"].add_edge("b", "h", weight=305)
data[8]["mst"].add_edge("b", "i", weight=632)
data[8]["mst"].add_edge("f", "j", weight=825)
data[8]["mst"].add_edge("g", "d", weight=1331)
data[8]["mst"].add_edge("g", "j", weight=988)
data[8]["mst"].add_edge("h", "j", weight=774)
data[8]["mst"].add_edge("k", "i", weight=1108)
data[8]["solutions"] = [
    { "edge": ("e", "f"), "weight": 1655, "expected": [('a', 'e'), ('a', 'c'), ('a', 'k'), ('k', 'i'), ('b', 'h'), ('b', 'i'), ('g', 'j'), ('g', 'd'), ('h', 'j'), ('f', 'j')] },
    { "edge": ("d", "f"), "weight": 644, "expected": [('a', 'e'), ('a', 'c'), ('a', 'k'), ('k', 'i'), ('b', 'h'), ('b', 'i'), ('g', 'j'), ('h', 'j'), ('d', 'f'), ('f', 'j')] },
    { "edge": ("g", "j"), "weight": 987, "expected": [('a', 'e'), ('a', 'c'), ('a', 'k'), ('k', 'i'), ('b', 'h'), ('b', 'i'), ('g', 'j'), ('g', 'd'), ('h', 'j'), ('f', 'j')] },
    { "edge": ("k", "i"), "weight": 1109, "expected": [('a', 'e'), ('a', 'c'), ('a', 'k'), ('k', 'i'), ('b', 'h'), ('b', 'i'), ('g', 'j'), ('g', 'd'), ('h', 'j'), ('f', 'j')] }
]
# Graph consisting of 11 nodes
data[9]["graph"] = Graph(is_directed=False)
data[9]["graph"].add_edge("a", "b", 979)
data[9]["graph"].add_edge("a", "g", 533)
data[9]["graph"].add_edge("a", "i", 371)
data[9]["graph"].add_edge("b", "j", 159)
data[9]["graph"].add_edge("b", "k", 426)
data[9]["graph"].add_edge("c", "d", 629)
data[9]["graph"].add_edge("c", "l", 62)
data[9]["graph"].add_edge("d", "e", 1658)
data[9]["graph"].add_edge("e", "f", 678)
data[9]["graph"].add_edge("e", "h", 302)
data[9]["graph"].add_edge("g", "c", 1384)
data[9]["graph"].add_edge("g", "h", 199)
data[9]["graph"].add_edge("i", "j", 1246)
data[9]["graph"].add_edge("i", "l", 569)
data[9]["graph"].add_edge("j", "f", 855)
data[9]["graph"].add_edge("k", "f", 938)
data[9]["graph"].add_edge("k", "h", 656)
data[9]["graph"].add_edge("l", "d", 1552)
data[9]["mst"] = Graph(is_directed=False)
data[9]["mst"].add_edge("a", "g", weight=533)
data[9]["mst"].add_edge("a", "i", weight=371)
data[9]["mst"].add_edge("b", "j", weight=159)
data[9]["mst"].add_edge("b", "k", weight=426)
data[9]["mst"].add_edge("c", "d", weight=629)
data[9]["mst"].add_edge("c", "l", weight=62)
data[9]["mst"].add_edge("e", "f", weight=678)
data[9]["mst"].add_edge("e", "h", weight=302)
data[9]["mst"].add_edge("g", "h", weight=199)
data[9]["mst"].add_edge("i", "l", weight=569)
data[9]["mst"].add_edge("k", "h", weight=656)
data[9]["solutions"] = [
    { "edge": ("i", "j"), "weight": 1247, "expected": [('a', 'i'), ('a', 'g'), ('i', 'l'), ('b', 'j'), ('b', 'k'), ('g', 'h'), ('k', 'h'), ('c', 'l'), ('c', 'd'), ('e', 'h'), ('e', 'f')] },
    { "edge": ("g", "c"), "weight": 568, "expected": [('a', 'i'), ('a', 'g'), ('b', 'j'), ('b', 'k'), ('g', 'h'), ('g', 'c'), ('k', 'h'), ('c', 'l'), ('c', 'd'), ('e', 'h'), ('e', 'f')] },
    { "edge": ("e", "f"), "weight": 677, "expected": [('a', 'i'), ('a', 'g'), ('i', 'l'), ('b', 'j'), ('b', 'k'), ('g', 'h'), ('k', 'h'), ('c', 'l'), ('c', 'd'), ('e', 'h'), ('e', 'f')] },
    { "edge": ("a", "i"), "weight": 372, "expected": [('a', 'i'), ('a', 'g'), ('i', 'l'), ('b', 'j'), ('b', 'k'), ('g', 'h'), ('k', 'h'), ('c', 'l'), ('c', 'd'), ('e', 'h'), ('e', 'f')] }
]
# Graph consisting of 12 nodes
data[10]["graph"] = Graph(is_directed=False)
data[10]["graph"].add_edge("a", "d", 1227)
data[10]["graph"].add_edge("a", "f", 890)
data[10]["graph"].add_edge("a", "k", 766)
data[10]["graph"].add_edge("b", "c", 755)
data[10]["graph"].add_edge("b", "j", 1618)
data[10]["graph"].add_edge("c", "l", 1005)
data[10]["graph"].add_edge("c", "m", 53)
data[10]["graph"].add_edge("d", "e", 251)
data[10]["graph"].add_edge("d", "j", 688)
data[10]["graph"].add_edge("e", "i", 668)
data[10]["graph"].add_edge("f", "b", 42)
data[10]["graph"].add_edge("f", "e", 505)
data[10]["graph"].add_edge("i", "h", 1220)
data[10]["graph"].add_edge("j", "g", 233)
data[10]["graph"].add_edge("k", "g", 1380)
data[10]["graph"].add_edge("k", "h", 496)
data[10]["graph"].add_edge("l", "g", 1193)
data[10]["graph"].add_edge("l", "i", 254)
data[10]["graph"].add_edge("m", "h", 677)
data[10]["mst"] = Graph(is_directed=False)
data[10]["mst"].add_edge("a", "k", weight=766)
data[10]["mst"].add_edge("b", "c", weight=755)
data[10]["mst"].add_edge("c", "m", weight=53)
data[10]["mst"].add_edge("d", "e", weight=251)
data[10]["mst"].add_edge("d", "j", weight=688)
data[10]["mst"].add_edge("e", "i", weight=668)
data[10]["mst"].add_edge("f", "b", weight=42)
data[10]["mst"].add_edge("f", "e", weight=505)
data[10]["mst"].add_edge("j", "g", weight=233)
data[10]["mst"].add_edge("k", "h", weight=496)
data[10]["mst"].add_edge("l", "i", weight=254)
data[10]["mst"].add_edge("m", "h", weight=677)
data[10]["solutions"] = [
    { "edge": ("l", "g"), "weight": 1194, "expected": [('a', 'k'), ('k', 'h'), ('d', 'e'), ('d', 'j'), ('f', 'b'), ('f', 'e'), ('b', 'c'), ('j', 'g'), ('c', 'm'), ('l', 'i'), ('m', 'h'), ('e', 'i')] },
    { "edge": ("a", "f"), "weight": 687, "expected": [('a', 'f'), ('k', 'h'), ('d', 'e'), ('d', 'j'), ('f', 'b'), ('f', 'e'), ('b', 'c'), ('j', 'g'), ('c', 'm'), ('l', 'i'), ('m', 'h'), ('e', 'i')] },
    { "edge": ("k", "h"), "weight": 495, "expected": [('a', 'k'), ('k', 'h'), ('d', 'e'), ('d', 'j'), ('f', 'b'), ('f', 'e'), ('b', 'c'), ('j', 'g'), ('c', 'm'), ('l', 'i'), ('m', 'h'), ('e', 'i')] },
    { "edge": ("m", "h"), "weight": 678, "expected": [('a', 'k'), ('k', 'h'), ('d', 'e'), ('d', 'j'), ('f', 'b'), ('f', 'e'), ('b', 'c'), ('j', 'g'), ('c', 'm'), ('l', 'i'), ('m', 'h'), ('e', 'i')] }
]
# Graph consisting of 13 nodes
data[11]["graph"] = Graph(is_directed=False)
data[11]["graph"].add_edge("a", "e", 1217)
data[11]["graph"].add_edge("a", "h", 710)
data[11]["graph"].add_edge("a", "l", 880)
data[11]["graph"].add_edge("b", "i", 206)
data[11]["graph"].add_edge("b", "n", 1626)
data[11]["graph"].add_edge("c", "f", 1672)
data[11]["graph"].add_edge("c", "g", 1387)
data[11]["graph"].add_edge("d", "m", 275)
data[11]["graph"].add_edge("e", "h", 506)
data[11]["graph"].add_edge("e", "k", 426)
data[11]["graph"].add_edge("f", "d", 1586)
data[11]["graph"].add_edge("f", "g", 962)
data[11]["graph"].add_edge("g", "d", 703)
data[11]["graph"].add_edge("i", "c", 213)
data[11]["graph"].add_edge("i", "m", 1269)
data[11]["graph"].add_edge("k", "j", 1372)
data[11]["graph"].add_edge("l", "b", 291)
data[11]["graph"].add_edge("l", "h", 162)
data[11]["graph"].add_edge("m", "j", 1509)
data[11]["graph"].add_edge("n", "j", 1582)
data[11]["graph"].add_edge("n", "k", 406)
data[11]["mst"] = Graph(is_directed=False)
data[11]["mst"].add_edge("a", "h", weight=710)
data[11]["mst"].add_edge("b", "i", weight=206)
data[11]["mst"].add_edge("d", "m", weight=275)
data[11]["mst"].add_edge("e", "h", weight=506)
data[11]["mst"].add_edge("e", "k", weight=426)
data[11]["mst"].add_edge("f", "g", weight=962)
data[11]["mst"].add_edge("g", "d", weight=703)
data[11]["mst"].add_edge("i", "c", weight=213)
data[11]["mst"].add_edge("i", "m", weight=1269)
data[11]["mst"].add_edge("k", "j", weight=1372)
data[11]["mst"].add_edge("l", "b", weight=291)
data[11]["mst"].add_edge("l", "h", weight=162)
data[11]["mst"].add_edge("n", "k", weight=406)
data[11]["solutions"] = [
    { "edge": ("a", "l"), "weight": 881, "expected": [('a', 'h'), ('l', 'h'), ('l', 'b'), ('e', 'k'), ('e', 'h'), ('b', 'i'), ('i', 'c'), ('i', 'm'), ('n', 'k'), ('f', 'g'), ('g', 'd'), ('d', 'm'), ('k', 'j')] },
    { "edge": ("c", "g"), "weight": 274, "expected": [('a', 'h'), ('l', 'h'), ('l', 'b'), ('e', 'k'), ('e', 'h'), ('b', 'i'), ('i', 'c'), ('n', 'k'), ('c', 'g'), ('f', 'g'), ('g', 'd'), ('d', 'm'), ('k', 'j')] },
    { "edge": ("a", "h"), "weight": 709, "expected": [('a', 'h'), ('l', 'h'), ('l', 'b'), ('e', 'k'), ('e', 'h'), ('b', 'i'), ('i', 'c'), ('i', 'm'), ('n', 'k'), ('f', 'g'), ('g', 'd'), ('d', 'm'), ('k', 'j')] },
    { "edge": ("k", "j"), "weight": 1373, "expected": [('a', 'h'), ('l', 'h'), ('l', 'b'), ('e', 'k'), ('e', 'h'), ('b', 'i'), ('i', 'c'), ('i', 'm'), ('n', 'k'), ('f', 'g'), ('g', 'd'), ('d', 'm'), ('k', 'j')] }
]
# Graph consisting of 14 nodes
data[12]["graph"] = Graph(is_directed=False)
data[12]["graph"].add_edge("a", "i", 1347)
data[12]["graph"].add_edge("a", "k", 1112)
data[12]["graph"].add_edge("a", "l", 366)
data[12]["graph"].add_edge("b", "e", 1561)
data[12]["graph"].add_edge("b", "j", 383)
data[12]["graph"].add_edge("b", "n", 221)
data[12]["graph"].add_edge("c", "m", 1366)
data[12]["graph"].add_edge("d", "f", 1350)
data[12]["graph"].add_edge("e", "c", 1525)
data[12]["graph"].add_edge("f", "h", 1407)
data[12]["graph"].add_edge("i", "d", 1168)
data[12]["graph"].add_edge("i", "j", 1535)
data[12]["graph"].add_edge("j", "g", 677)
data[12]["graph"].add_edge("k", "c", 839)
data[12]["graph"].add_edge("k", "e", 294)
data[12]["graph"].add_edge("l", "d", 1575)
data[12]["graph"].add_edge("l", "h", 880)
data[12]["graph"].add_edge("m", "f", 215)
data[12]["graph"].add_edge("m", "g", 332)
data[12]["graph"].add_edge("n", "g", 1404)
data[12]["graph"].add_edge("n", "h", 374)
data[12]["mst"] = Graph(is_directed=False)
data[12]["mst"].add_edge("a", "i", weight=1347)
data[12]["mst"].add_edge("a", "k", weight=1112)
data[12]["mst"].add_edge("a", "l", weight=366)
data[12]["mst"].add_edge("b", "j", weight=383)
data[12]["mst"].add_edge("b", "n", weight=221)
data[12]["mst"].add_edge("i", "d", weight=1168)
data[12]["mst"].add_edge("j", "g", weight=677)
data[12]["mst"].add_edge("k", "c", weight=839)
data[12]["mst"].add_edge("k", "e", weight=294)
data[12]["mst"].add_edge("l", "h", weight=880)
data[12]["mst"].add_edge("m", "f", weight=215)
data[12]["mst"].add_edge("m", "g", weight=332)
data[12]["mst"].add_edge("n", "h", weight=374)
data[12]["solutions"] = [
    { "edge": ("i", "j"), "weight": 1536, "expected": [('a', 'l'), ('a', 'k'), ('a', 'i'), ('i', 'd'), ('k', 'e'), ('k', 'c'), ('l', 'h'), ('b', 'n'), ('b', 'j'), ('j', 'g'), ('n', 'h'), ('m', 'f'), ('m', 'g')] },
    { "edge": ("l", "d"), "weight": 382, "expected": [('a', 'l'), ('a', 'k'), ('i', 'd'), ('k', 'e'), ('k', 'c'), ('l', 'd'), ('l', 'h'), ('b', 'n'), ('b', 'j'), ('j', 'g'), ('n', 'h'), ('m', 'f'), ('m', 'g')] },
    { "edge": ("l", "h"), "weight": 879, "expected": [('a', 'l'), ('a', 'k'), ('a', 'i'), ('i', 'd'), ('k', 'e'), ('k', 'c'), ('l', 'h'), ('b', 'n'), ('b', 'j'), ('j', 'g'), ('n', 'h'), ('m', 'f'), ('m', 'g')] },
    { "edge": ("k", "c"), "weight": 840, "expected": [('a', 'l'), ('a', 'k'), ('a', 'i'), ('i', 'd'), ('k', 'e'), ('k', 'c'), ('l', 'h'), ('b', 'n'), ('b', 'j'), ('j', 'g'), ('n', 'h'), ('m', 'f'), ('m', 'g')] }
]
# Graph consisting of 15 nodes
data[13]["graph"] = Graph(is_directed=False)
data[13]["graph"].add_edge("a", "b", 505)
data[13]["graph"].add_edge("a", "o", 544)
data[13]["graph"].add_edge("a", "p", 306)
data[13]["graph"].add_edge("b", "g", 540)
data[13]["graph"].add_edge("b", "n", 715)
data[13]["graph"].add_edge("c", "e", 194)
data[13]["graph"].add_edge("c", "i", 1105)
data[13]["graph"].add_edge("c", "l", 1268)
data[13]["graph"].add_edge("e", "f", 1223)
data[13]["graph"].add_edge("g", "d", 331)
data[13]["graph"].add_edge("g", "i", 669)
data[13]["graph"].add_edge("i", "h", 1342)
data[13]["graph"].add_edge("j", "k", 1675)
data[13]["graph"].add_edge("j", "m", 565)
data[13]["graph"].add_edge("k", "m", 1256)
data[13]["graph"].add_edge("l", "d", 693)
data[13]["graph"].add_edge("l", "e", 398)
data[13]["graph"].add_edge("n", "h", 266)
data[13]["graph"].add_edge("n", "j", 1674)
data[13]["graph"].add_edge("o", "f", 1080)
data[13]["graph"].add_edge("o", "h", 910)
data[13]["graph"].add_edge("p", "d", 340)
data[13]["graph"].add_edge("p", "f", 774)
data[13]["mst"] = Graph(is_directed=False)
data[13]["mst"].add_edge("a", "b", weight=505)
data[13]["mst"].add_edge("a", "o", weight=544)
data[13]["mst"].add_edge("a", "p", weight=306)
data[13]["mst"].add_edge("b", "n", weight=715)
data[13]["mst"].add_edge("c", "e", weight=194)
data[13]["mst"].add_edge("g", "d", weight=331)
data[13]["mst"].add_edge("g", "i", weight=669)
data[13]["mst"].add_edge("j", "m", weight=565)
data[13]["mst"].add_edge("k", "m", weight=1256)
data[13]["mst"].add_edge("l", "d", weight=693)
data[13]["mst"].add_edge("l", "e", weight=398)
data[13]["mst"].add_edge("n", "h", weight=266)
data[13]["mst"].add_edge("n", "j", weight=1674)
data[13]["mst"].add_edge("p", "d", weight=340)
data[13]["mst"].add_edge("p", "f", weight=774)
data[13]["solutions"] = [
    { "edge": ("b", "g"), "weight": 541, "expected": [('a', 'p'), ('a', 'b'), ('a', 'o'), ('b', 'n'), ('p', 'd'), ('p', 'f'), ('n', 'h'), ('n', 'j'), ('g', 'd'), ('g', 'i'), ('c', 'e'), ('l', 'e'), ('l', 'd'), ('j', 'm'), ('k', 'm')] },
    { "edge": ("j", "k"), "weight": 265, "expected": [('a', 'p'), ('a', 'b'), ('a', 'o'), ('b', 'n'), ('p', 'd'), ('p', 'f'), ('n', 'h'), ('n', 'j'), ('g', 'd'), ('g', 'i'), ('c', 'e'), ('l', 'e'), ('l', 'd'), ('j', 'k'), ('j', 'm')] },
    { "edge": ("c", "e"), "weight": 193, "expected": [('a', 'p'), ('a', 'b'), ('a', 'o'), ('b', 'n'), ('p', 'd'), ('p', 'f'), ('n', 'h'), ('n', 'j'), ('g', 'd'), ('g', 'i'), ('c', 'e'), ('l', 'e'), ('l', 'd'), ('j', 'm'), ('k', 'm')] },
    { "edge": ("b", "n"), "weight": 716, "expected": [('a', 'p'), ('a', 'b'), ('a', 'o'), ('b', 'n'), ('p', 'd'), ('p', 'f'), ('n', 'h'), ('n', 'j'), ('g', 'd'), ('g', 'i'), ('c', 'e'), ('l', 'e'), ('l', 'd'), ('j', 'm'), ('k', 'm')] }
]
# Graph consisting of 15 nodes
data[14]["graph"] = Graph(is_directed=False)
data[14]["graph"].add_edge("a", "f", 35)
data[14]["graph"].add_edge("a", "h", 34)
data[14]["graph"].add_edge("a", "i", 238)
data[14]["graph"].add_edge("b", "m", 203)
data[14]["graph"].add_edge("b", "n", 145)
data[14]["graph"].add_edge("c", "e", 5)
data[14]["graph"].add_edge("d", "g", 57)
data[14]["graph"].add_edge("d", "j", 127)
data[14]["graph"].add_edge("f", "e", 186)
data[14]["graph"].add_edge("f", "k", 213)
data[14]["graph"].add_edge("g", "o", 146)
data[14]["graph"].add_edge("h", "b", 19)
data[14]["graph"].add_edge("h", "e", 96)
data[14]["graph"].add_edge("i", "c", 150)
data[14]["graph"].add_edge("i", "l", 243)
data[14]["graph"].add_edge("j", "k", 108)
data[14]["graph"].add_edge("k", "p", 147)
data[14]["graph"].add_edge("l", "p", 140)
data[14]["graph"].add_edge("m", "d", 178)
data[14]["graph"].add_edge("m", "j", 26)
data[14]["graph"].add_edge("n", "c", 168)
data[14]["graph"].add_edge("n", "g", 177)
data[14]["graph"].add_edge("o", "l", 94)
data[14]["graph"].add_edge("o", "p", 157)
data[14]["mst"] = Graph(is_directed=False)
data[14]["mst"].add_edge("a", "f", weight=35)
data[14]["mst"].add_edge("a", "h", weight=34)
data[14]["mst"].add_edge("b", "n", weight=145)
data[14]["mst"].add_edge("c", "e", weight=5)
data[14]["mst"].add_edge("d", "g", weight=57)
data[14]["mst"].add_edge("d", "j", weight=127)
data[14]["mst"].add_edge("g", "o", weight=146)
data[14]["mst"].add_edge("h", "b", weight=19)
data[14]["mst"].add_edge("h", "e", weight=96)
data[14]["mst"].add_edge("i", "c", weight=150)
data[14]["mst"].add_edge("j", "k", weight=108)
data[14]["mst"].add_edge("l", "p", weight=140)
data[14]["mst"].add_edge("m", "j", weight=26)
data[14]["mst"].add_edge("n", "g", weight=177)
data[14]["mst"].add_edge("o", "l", weight=94)
data[14]["solutions"] = [
    { "edge": ("n", "c"), "weight": 169, "expected": [('a', 'h'), ('a', 'f'), ('i', 'c'), ('h', 'b'), ('h', 'e'), ('b', 'n'), ('m', 'j'), ('n', 'g'), ('c', 'e'), ('d', 'g'), ('d', 'j'), ('j', 'k'), ('g', 'o'), ('o', 'l'), ('l', 'p')] },
    { "edge": ("m", "d"), "weight": 25, "expected": [('a', 'h'), ('a', 'f'), ('i', 'c'), ('h', 'b'), ('h', 'e'), ('b', 'n'), ('m', 'd'), ('m', 'j'), ('n', 'g'), ('c', 'e'), ('d', 'g'), ('j', 'k'), ('g', 'o'), ('o', 'l'), ('l', 'p')] },
    { "edge": ("d", "g"), "weight": 56, "expected": [('a', 'h'), ('a', 'f'), ('i', 'c'), ('h', 'b'), ('h', 'e'), ('b', 'n'), ('m', 'j'), ('n', 'g'), ('c', 'e'), ('d', 'g'), ('d', 'j'), ('j', 'k'), ('g', 'o'), ('o', 'l'), ('l', 'p')] },
    { "edge": ("i", "c"), "weight": 151, "expected": [('a', 'h'), ('a', 'f'), ('i', 'c'), ('h', 'b'), ('h', 'e'), ('b', 'n'), ('m', 'j'), ('n', 'g'), ('c', 'e'), ('d', 'g'), ('d', 'j'), ('j', 'k'), ('g', 'o'), ('o', 'l'), ('l', 'p')] }
]
# Graph consisting of 16 nodes
data[15]["graph"] = Graph(is_directed=False)
data[15]["graph"].add_edge("a", "h", 1200)
data[15]["graph"].add_edge("a", "n", 575)
data[15]["graph"].add_edge("a", "o", 877)
data[15]["graph"].add_edge("b", "c", 386)
data[15]["graph"].add_edge("b", "f", 1126)
data[15]["graph"].add_edge("b", "j", 1634)
data[15]["graph"].add_edge("c", "l", 41)
data[15]["graph"].add_edge("e", "g", 1117)
data[15]["graph"].add_edge("e", "k", 845)
data[15]["graph"].add_edge("f", "d", 341)
data[15]["graph"].add_edge("f", "e", 293)
data[15]["graph"].add_edge("g", "p", 1452)
data[15]["graph"].add_edge("h", "d", 1583)
data[15]["graph"].add_edge("h", "j", 581)
data[15]["graph"].add_edge("j", "i", 226)
data[15]["graph"].add_edge("l", "d", 1108)
data[15]["graph"].add_edge("l", "k", 1290)
data[15]["graph"].add_edge("m", "q", 1247)
data[15]["graph"].add_edge("n", "c", 1475)
data[15]["graph"].add_edge("n", "g", 449)
data[15]["graph"].add_edge("o", "i", 1276)
data[15]["graph"].add_edge("o", "k", 228)
data[15]["graph"].add_edge("p", "i", 409)
data[15]["graph"].add_edge("p", "m", 369)
data[15]["mst"] = Graph(is_directed=False)
data[15]["mst"].add_edge("a", "h", weight=1200)
data[15]["mst"].add_edge("a", "n", weight=575)
data[15]["mst"].add_edge("a", "o", weight=877)
data[15]["mst"].add_edge("b", "c", weight=386)
data[15]["mst"].add_edge("c", "l", weight=41)
data[15]["mst"].add_edge("e", "k", weight=845)
data[15]["mst"].add_edge("f", "d", weight=341)
data[15]["mst"].add_edge("f", "e", weight=293)
data[15]["mst"].add_edge("h", "j", weight=581)
data[15]["mst"].add_edge("j", "i", weight=226)
data[15]["mst"].add_edge("l", "d", weight=1108)
data[15]["mst"].add_edge("m", "q", weight=1247)
data[15]["mst"].add_edge("n", "g", weight=449)
data[15]["mst"].add_edge("o", "k", weight=228)
data[15]["mst"].add_edge("p", "i", weight=409)
data[15]["mst"].add_edge("p", "m", weight=369)
data[15]["solutions"] = [
    { "edge": ("o", "i"), "weight": 1277, "expected": [('a', 'n'), ('a', 'o'), ('a', 'h'), ('n', 'g'), ('o', 'k'), ('h', 'j'), ('b', 'c'), ('j', 'i'), ('c', 'l'), ('f', 'e'), ('f', 'd'), ('l', 'd'), ('e', 'k'), ('p', 'm'), ('p', 'i'), ('m', 'q')] },
    { "edge": ("b", "j"), "weight": 40, "expected": [('a', 'n'), ('a', 'o'), ('n', 'g'), ('o', 'k'), ('h', 'j'), ('b', 'j'), ('b', 'c'), ('j', 'i'), ('c', 'l'), ('f', 'e'), ('f', 'd'), ('l', 'd'), ('e', 'k'), ('p', 'm'), ('p', 'i'), ('m', 'q')] },
    { "edge": ("c", "l"), "weight": 40, "expected": [('a', 'n'), ('a', 'o'), ('a', 'h'), ('n', 'g'), ('o', 'k'), ('h', 'j'), ('b', 'c'), ('j', 'i'), ('c', 'l'), ('f', 'e'), ('f', 'd'), ('l', 'd'), ('e', 'k'), ('p', 'm'), ('p', 'i'), ('m', 'q')] },
    { "edge": ("f", "d"), "weight": 342, "expected": [('a', 'n'), ('a', 'o'), ('a', 'h'), ('n', 'g'), ('o', 'k'), ('h', 'j'), ('b', 'c'), ('j', 'i'), ('c', 'l'), ('f', 'e'), ('f', 'd'), ('l', 'd'), ('e', 'k'), ('p', 'm'), ('p', 'i'), ('m', 'q')] }
]
# Graph consisting of 17 nodes
data[16]["graph"] = Graph(is_directed=False)
data[16]["graph"].add_edge("a", "f", 342)
data[16]["graph"].add_edge("a", "i", 140)
data[16]["graph"].add_edge("a", "j", 1455)
data[16]["graph"].add_edge("b", "c", 206)
data[16]["graph"].add_edge("b", "d", 1590)
data[16]["graph"].add_edge("b", "l", 1245)
data[16]["graph"].add_edge("c", "g", 1281)
data[16]["graph"].add_edge("c", "n", 108)
data[16]["graph"].add_edge("d", "n", 567)
data[16]["graph"].add_edge("e", "h", 1454)
data[16]["graph"].add_edge("e", "k", 723)
data[16]["graph"].add_edge("f", "g", 967)
data[16]["graph"].add_edge("f", "k", 377)
data[16]["graph"].add_edge("g", "e", 555)
data[16]["graph"].add_edge("h", "m", 313)
data[16]["graph"].add_edge("i", "k", 424)
data[16]["graph"].add_edge("i", "p", 676)
data[16]["graph"].add_edge("j", "d", 1271)
data[16]["graph"].add_edge("j", "h", 1635)
data[16]["graph"].add_edge("l", "p", 353)
data[16]["graph"].add_edge("l", "r", 150)
data[16]["graph"].add_edge("m", "q", 1605)
data[16]["graph"].add_edge("n", "m", 600)
data[16]["graph"].add_edge("p", "o", 1653)
data[16]["graph"].add_edge("q", "o", 17)
data[16]["graph"].add_edge("r", "o", 966)
data[16]["graph"].add_edge("r", "q", 1222)
data[16]["mst"] = Graph(is_directed=False)
data[16]["mst"].add_edge("a", "f", weight=342)
data[16]["mst"].add_edge("a", "i", weight=140)
data[16]["mst"].add_edge("b", "c", weight=206)
data[16]["mst"].add_edge("b", "l", weight=1245)
data[16]["mst"].add_edge("c", "n", weight=108)
data[16]["mst"].add_edge("d", "n", weight=567)
data[16]["mst"].add_edge("e", "k", weight=723)
data[16]["mst"].add_edge("f", "k", weight=377)
data[16]["mst"].add_edge("g", "e", weight=555)
data[16]["mst"].add_edge("h", "m", weight=313)
data[16]["mst"].add_edge("i", "p", weight=676)
data[16]["mst"].add_edge("j", "d", weight=1271)
data[16]["mst"].add_edge("l", "p", weight=353)
data[16]["mst"].add_edge("l", "r", weight=150)
data[16]["mst"].add_edge("n", "m", weight=600)
data[16]["mst"].add_edge("q", "o", weight=17)
data[16]["mst"].add_edge("r", "o", weight=966)
data[16]["solutions"] = [
    { "edge": ("r", "q"), "weight": 1223, "expected": [('a', 'i'), ('a', 'f'), ('i', 'p'), ('j', 'd'), ('f', 'k'), ('b', 'c'), ('b', 'l'), ('l', 'r'), ('l', 'p'), ('c', 'n'), ('d', 'n'), ('n', 'm'), ('g', 'e'), ('e', 'k'), ('h', 'm'), ('r', 'o'), ('q', 'o')] },
    { "edge": ("a", "j"), "weight": 341, "expected": [('a', 'i'), ('a', 'j'), ('a', 'f'), ('i', 'p'), ('f', 'k'), ('b', 'c'), ('b', 'l'), ('l', 'r'), ('l', 'p'), ('c', 'n'), ('d', 'n'), ('n', 'm'), ('g', 'e'), ('e', 'k'), ('h', 'm'), ('r', 'o'), ('q', 'o')] },
    { "edge": ("e", "k"), "weight": 722, "expected": [('a', 'i'), ('a', 'f'), ('i', 'p'), ('j', 'd'), ('f', 'k'), ('b', 'c'), ('b', 'l'), ('l', 'r'), ('l', 'p'), ('c', 'n'), ('d', 'n'), ('n', 'm'), ('g', 'e'), ('e', 'k'), ('h', 'm'), ('r', 'o'), ('q', 'o')] },
    { "edge": ("q", "o"), "weight": 18, "expected": [('a', 'i'), ('a', 'f'), ('i', 'p'), ('j', 'd'), ('f', 'k'), ('b', 'c'), ('b', 'l'), ('l', 'r'), ('l', 'p'), ('c', 'n'), ('d', 'n'), ('n', 'm'), ('g', 'e'), ('e', 'k'), ('h', 'm'), ('r', 'o'), ('q', 'o')] }
]
# Graph consisting of 18 nodes
data[17]["graph"] = Graph(is_directed=False)
data[17]["graph"].add_edge("a", "g", 666)
data[17]["graph"].add_edge("a", "l", 476)
data[17]["graph"].add_edge("a", "s", 1637)
data[17]["graph"].add_edge("b", "e", 1401)
data[17]["graph"].add_edge("b", "j", 1422)
data[17]["graph"].add_edge("b", "r", 463)
data[17]["graph"].add_edge("d", "i", 426)
data[17]["graph"].add_edge("d", "o", 1094)
data[17]["graph"].add_edge("e", "n", 384)
data[17]["graph"].add_edge("e", "o", 854)
data[17]["graph"].add_edge("f", "q", 1590)
data[17]["graph"].add_edge("g", "c", 1448)
data[17]["graph"].add_edge("h", "k", 1254)
data[17]["graph"].add_edge("i", "k", 611)
data[17]["graph"].add_edge("i", "n", 1184)
data[17]["graph"].add_edge("j", "c", 171)
data[17]["graph"].add_edge("j", "d", 1490)
data[17]["graph"].add_edge("l", "c", 1276)
data[17]["graph"].add_edge("l", "p", 617)
data[17]["graph"].add_edge("n", "h", 53)
data[17]["graph"].add_edge("o", "f", 1622)
data[17]["graph"].add_edge("p", "m", 1626)
data[17]["graph"].add_edge("q", "k", 1138)
data[17]["graph"].add_edge("q", "m", 1600)
data[17]["graph"].add_edge("r", "h", 1403)
data[17]["graph"].add_edge("r", "m", 606)
data[17]["graph"].add_edge("s", "f", 216)
data[17]["graph"].add_edge("s", "g", 137)
data[17]["mst"] = Graph(is_directed=False)
data[17]["mst"].add_edge("a", "g", weight=666)
data[17]["mst"].add_edge("a", "l", weight=476)
data[17]["mst"].add_edge("b", "e", weight=1401)
data[17]["mst"].add_edge("b", "j", weight=1422)
data[17]["mst"].add_edge("b", "r", weight=463)
data[17]["mst"].add_edge("d", "i", weight=426)
data[17]["mst"].add_edge("d", "o", weight=1094)
data[17]["mst"].add_edge("e", "n", weight=384)
data[17]["mst"].add_edge("e", "o", weight=854)
data[17]["mst"].add_edge("i", "k", weight=611)
data[17]["mst"].add_edge("j", "c", weight=171)
data[17]["mst"].add_edge("l", "c", weight=1276)
data[17]["mst"].add_edge("l", "p", weight=617)
data[17]["mst"].add_edge("n", "h", weight=53)
data[17]["mst"].add_edge("q", "k", weight=1138)
data[17]["mst"].add_edge("r", "m", weight=606)
data[17]["mst"].add_edge("s", "f", weight=216)
data[17]["mst"].add_edge("s", "g", weight=137)
data[17]["solutions"] = [
    { "edge": ("g", "c"), "weight": 1449, "expected": [('a', 'l'), ('a', 'g'), ('s', 'g'), ('s', 'f'), ('l', 'p'), ('l', 'c'), ('b', 'r'), ('b', 'e'), ('b', 'j'), ('j', 'c'), ('e', 'n'), ('e', 'o'), ('r', 'm'), ('d', 'i'), ('d', 'o'), ('i', 'k'), ('n', 'h'), ('q', 'k')] },
    { "edge": ("a", "s"), "weight": 616, "expected": [('a', 'l'), ('a', 's'), ('s', 'g'), ('s', 'f'), ('l', 'p'), ('l', 'c'), ('b', 'r'), ('b', 'e'), ('b', 'j'), ('j', 'c'), ('e', 'n'), ('e', 'o'), ('r', 'm'), ('d', 'i'), ('d', 'o'), ('i', 'k'), ('n', 'h'), ('q', 'k')] },
    { "edge": ("l", "c"), "weight": 1275, "expected": [('a', 'l'), ('a', 'g'), ('s', 'g'), ('s', 'f'), ('l', 'p'), ('l', 'c'), ('b', 'r'), ('b', 'e'), ('b', 'j'), ('j', 'c'), ('e', 'n'), ('e', 'o'), ('r', 'm'), ('d', 'i'), ('d', 'o'), ('i', 'k'), ('n', 'h'), ('q', 'k')] },
    { "edge": ("j", "c"), "weight": 172, "expected": [('a', 'l'), ('a', 'g'), ('s', 'g'), ('s', 'f'), ('l', 'p'), ('l', 'c'), ('b', 'r'), ('b', 'e'), ('b', 'j'), ('j', 'c'), ('e', 'n'), ('e', 'o'), ('r', 'm'), ('d', 'i'), ('d', 'o'), ('i', 'k'), ('n', 'h'), ('q', 'k')] }
]
# Graph consisting of 18 nodes
data[18]["graph"] = Graph(is_directed=False)
data[18]["graph"].add_edge("a", "b", 221)
data[18]["graph"].add_edge("a", "d", 287)
data[18]["graph"].add_edge("a", "o", 192)
data[18]["graph"].add_edge("b", "j", 207)
data[18]["graph"].add_edge("b", "l", 131)
data[18]["graph"].add_edge("c", "e", 286)
data[18]["graph"].add_edge("c", "m", 176)
data[18]["graph"].add_edge("d", "h", 213)
data[18]["graph"].add_edge("d", "s", 241)
data[18]["graph"].add_edge("e", "m", 183)
data[18]["graph"].add_edge("f", "k", 284)
data[18]["graph"].add_edge("f", "r", 306)
data[18]["graph"].add_edge("g", "i", 214)
data[18]["graph"].add_edge("g", "p", 329)
data[18]["graph"].add_edge("h", "p", 87)
data[18]["graph"].add_edge("i", "q", 269)
data[18]["graph"].add_edge("j", "i", 239)
data[18]["graph"].add_edge("j", "k", 292)
data[18]["graph"].add_edge("k", "g", 252)
data[18]["graph"].add_edge("l", "c", 160)
data[18]["graph"].add_edge("l", "n", 285)
data[18]["graph"].add_edge("m", "h", 93)
data[18]["graph"].add_edge("o", "e", 323)
data[18]["graph"].add_edge("o", "q", 16)
data[18]["graph"].add_edge("p", "q", 265)
data[18]["graph"].add_edge("r", "n", 268)
data[18]["graph"].add_edge("s", "f", 260)
data[18]["graph"].add_edge("s", "n", 217)
data[18]["mst"] = Graph(is_directed=False)
data[18]["mst"].add_edge("a", "b", weight=221)
data[18]["mst"].add_edge("a", "o", weight=192)
data[18]["mst"].add_edge("b", "j", weight=207)
data[18]["mst"].add_edge("b", "l", weight=131)
data[18]["mst"].add_edge("c", "m", weight=176)
data[18]["mst"].add_edge("d", "h", weight=213)
data[18]["mst"].add_edge("d", "s", weight=241)
data[18]["mst"].add_edge("e", "m", weight=183)
data[18]["mst"].add_edge("g", "i", weight=214)
data[18]["mst"].add_edge("h", "p", weight=87)
data[18]["mst"].add_edge("j", "i", weight=239)
data[18]["mst"].add_edge("k", "g", weight=252)
data[18]["mst"].add_edge("l", "c", weight=160)
data[18]["mst"].add_edge("m", "h", weight=93)
data[18]["mst"].add_edge("o", "q", weight=16)
data[18]["mst"].add_edge("r", "n", weight=268)
data[18]["mst"].add_edge("s", "f", weight=260)
data[18]["mst"].add_edge("s", "n", weight=217)
data[18]["solutions"] = [
    { "edge": ("i", "q"), "weight": 270, "expected": [('a', 'o'), ('a', 'b'), ('b', 'l'), ('b', 'j'), ('d', 'h'), ('d', 's'), ('o', 'q'), ('j', 'i'), ('l', 'c'), ('c', 'm'), ('e', 'm'), ('m', 'h'), ('s', 'n'), ('s', 'f'), ('h', 'p'), ('r', 'n'), ('k', 'g'), ('g', 'i')] },
    { "edge": ("f", "k"), "weight": 175, "expected": [('a', 'o'), ('a', 'b'), ('b', 'l'), ('b', 'j'), ('d', 'h'), ('d', 's'), ('o', 'q'), ('j', 'i'), ('l', 'c'), ('c', 'm'), ('e', 'm'), ('m', 'h'), ('s', 'n'), ('h', 'p'), ('f', 'k'), ('r', 'n'), ('k', 'g'), ('g', 'i')] },
    { "edge": ("e", "m"), "weight": 182, "expected": [('a', 'o'), ('a', 'b'), ('b', 'l'), ('b', 'j'), ('d', 'h'), ('d', 's'), ('o', 'q'), ('j', 'i'), ('l', 'c'), ('c', 'm'), ('e', 'm'), ('m', 'h'), ('s', 'n'), ('s', 'f'), ('h', 'p'), ('r', 'n'), ('k', 'g'), ('g', 'i')] },
    { "edge": ("s", "f"), "weight": 261, "expected": [('a', 'o'), ('a', 'b'), ('b', 'l'), ('b', 'j'), ('d', 'h'), ('d', 's'), ('o', 'q'), ('j', 'i'), ('l', 'c'), ('c', 'm'), ('e', 'm'), ('m', 'h'), ('s', 'n'), ('s', 'f'), ('h', 'p'), ('r', 'n'), ('k', 'g'), ('g', 'i')] }
]
# Graph consisting of 19 nodes
data[19]["graph"] = Graph(is_directed=False)
data[19]["graph"].add_edge("a", "h", 339)
data[19]["graph"].add_edge("a", "l", 722)
data[19]["graph"].add_edge("a", "t", 1029)
data[19]["graph"].add_edge("b", "c", 1481)
data[19]["graph"].add_edge("b", "f", 1031)
data[19]["graph"].add_edge("b", "m", 661)
data[19]["graph"].add_edge("c", "f", 294)
data[19]["graph"].add_edge("c", "q", 1103)
data[19]["graph"].add_edge("d", "r", 1208)
data[19]["graph"].add_edge("e", "j", 1605)
data[19]["graph"].add_edge("f", "d", 1256)
data[19]["graph"].add_edge("g", "o", 1406)
data[19]["graph"].add_edge("h", "e", 1403)
data[19]["graph"].add_edge("h", "k", 173)
data[19]["graph"].add_edge("i", "n", 1428)
data[19]["graph"].add_edge("i", "p", 431)
data[19]["graph"].add_edge("j", "p", 1015)
data[19]["graph"].add_edge("k", "i", 1526)
data[19]["graph"].add_edge("k", "p", 27)
data[19]["graph"].add_edge("l", "d", 952)
data[19]["graph"].add_edge("l", "g", 12)
data[19]["graph"].add_edge("m", "j", 130)
data[19]["graph"].add_edge("m", "q", 847)
data[19]["graph"].add_edge("n", "s", 499)
data[19]["graph"].add_edge("o", "s", 1669)
data[19]["graph"].add_edge("q", "o", 1396)
data[19]["graph"].add_edge("r", "e", 1452)
data[19]["graph"].add_edge("r", "g", 484)
data[19]["graph"].add_edge("t", "n", 753)
data[19]["graph"].add_edge("t", "s", 44)
data[19]["mst"] = Graph(is_directed=False)
data[19]["mst"].add_edge("a", "h", weight=339)
data[19]["mst"].add_edge("a", "l", weight=722)
data[19]["mst"].add_edge("a", "t", weight=1029)
data[19]["mst"].add_edge("b", "f", weight=1031)
data[19]["mst"].add_edge("b", "m", weight=661)
data[19]["mst"].add_edge("c", "f", weight=294)
data[19]["mst"].add_edge("h", "e", weight=1403)
data[19]["mst"].add_edge("h", "k", weight=173)
data[19]["mst"].add_edge("i", "p", weight=431)
data[19]["mst"].add_edge("j", "p", weight=1015)
data[19]["mst"].add_edge("k", "p", weight=27)
data[19]["mst"].add_edge("l", "d", weight=952)
data[19]["mst"].add_edge("l", "g", weight=12)
data[19]["mst"].add_edge("m", "j", weight=130)
data[19]["mst"].add_edge("m", "q", weight=847)
data[19]["mst"].add_edge("n", "s", weight=499)
data[19]["mst"].add_edge("q", "o", weight=1396)
data[19]["mst"].add_edge("r", "g", weight=484)
data[19]["mst"].add_edge("t", "s", weight=44)
data[19]["solutions"] = [
    { "edge": ("k", "i"), "weight": 1527, "expected": [('a', 'h'), ('a', 'l'), ('a', 't'), ('t', 's'), ('l', 'g'), ('l', 'd'), ('h', 'k'), ('h', 'e'), ('b', 'm'), ('b', 'f'), ('c', 'f'), ('m', 'j'), ('m', 'q'), ('q', 'o'), ('r', 'g'), ('j', 'p'), ('k', 'p'), ('i', 'p'), ('n', 's')] },
    { "edge": ("k", "i"), "weight": 172, "expected": [('a', 'h'), ('a', 'l'), ('a', 't'), ('t', 's'), ('l', 'g'), ('l', 'd'), ('h', 'k'), ('h', 'e'), ('b', 'm'), ('b', 'f'), ('c', 'f'), ('m', 'j'), ('m', 'q'), ('q', 'o'), ('r', 'g'), ('j', 'p'), ('k', 'p'), ('k', 'i'), ('n', 's')] },
    { "edge": ("t", "s"), "weight": 43, "expected": [('a', 'h'), ('a', 'l'), ('a', 't'), ('t', 's'), ('l', 'g'), ('l', 'd'), ('h', 'k'), ('h', 'e'), ('b', 'm'), ('b', 'f'), ('c', 'f'), ('m', 'j'), ('m', 'q'), ('q', 'o'), ('r', 'g'), ('j', 'p'), ('k', 'p'), ('i', 'p'), ('n', 's')] },
    { "edge": ("q", "o"), "weight": 1397, "expected": [('a', 'h'), ('a', 'l'), ('a', 't'), ('t', 's'), ('l', 'g'), ('l', 'd'), ('h', 'k'), ('h', 'e'), ('b', 'm'), ('b', 'f'), ('c', 'f'), ('m', 'j'), ('m', 'q'), ('q', 'o'), ('r', 'g'), ('j', 'p'), ('k', 'p'), ('i', 'p'), ('n', 's')] }
]
# Graph consisting of 20 nodes
data[20]["graph"] = Graph(is_directed=False)
data[20]["graph"].add_edge("a", "i", 828)
data[20]["graph"].add_edge("a", "l", 1223)
data[20]["graph"].add_edge("a", "s", 1515)
data[20]["graph"].add_edge("b", "g", 1173)
data[20]["graph"].add_edge("b", "o", 1573)
data[20]["graph"].add_edge("c", "n", 243)
data[20]["graph"].add_edge("c", "t", 491)
data[20]["graph"].add_edge("d", "f", 451)
data[20]["graph"].add_edge("d", "r", 124)
data[20]["graph"].add_edge("d", "u", 421)
data[20]["graph"].add_edge("e", "m", 1514)
data[20]["graph"].add_edge("g", "o", 1229)
data[20]["graph"].add_edge("g", "q", 1457)
data[20]["graph"].add_edge("h", "p", 1030)
data[20]["graph"].add_edge("i", "e", 896)
data[20]["graph"].add_edge("i", "f", 1164)
data[20]["graph"].add_edge("l", "h", 1303)
data[20]["graph"].add_edge("l", "j", 1017)
data[20]["graph"].add_edge("m", "p", 601)
data[20]["graph"].add_edge("n", "e", 1635)
data[20]["graph"].add_edge("n", "j", 395)
data[20]["graph"].add_edge("o", "c", 954)
data[20]["graph"].add_edge("p", "k", 1321)
data[20]["graph"].add_edge("r", "k", 323)
data[20]["graph"].add_edge("r", "q", 1118)
data[20]["graph"].add_edge("s", "b", 1505)
data[20]["graph"].add_edge("s", "f", 647)
data[20]["graph"].add_edge("t", "h", 827)
data[20]["graph"].add_edge("t", "m", 394)
data[20]["graph"].add_edge("u", "j", 128)
data[20]["graph"].add_edge("u", "k", 840)
data[20]["mst"] = Graph(is_directed=False)
data[20]["mst"].add_edge("a", "i", weight=828)
data[20]["mst"].add_edge("b", "g", weight=1173)
data[20]["mst"].add_edge("c", "n", weight=243)
data[20]["mst"].add_edge("c", "t", weight=491)
data[20]["mst"].add_edge("d", "f", weight=451)
data[20]["mst"].add_edge("d", "r", weight=124)
data[20]["mst"].add_edge("d", "u", weight=421)
data[20]["mst"].add_edge("g", "o", weight=1229)
data[20]["mst"].add_edge("i", "e", weight=896)
data[20]["mst"].add_edge("i", "f", weight=1164)
data[20]["mst"].add_edge("l", "j", weight=1017)
data[20]["mst"].add_edge("m", "p", weight=601)
data[20]["mst"].add_edge("n", "j", weight=395)
data[20]["mst"].add_edge("o", "c", weight=954)
data[20]["mst"].add_edge("r", "k", weight=323)
data[20]["mst"].add_edge("r", "q", weight=1118)
data[20]["mst"].add_edge("s", "f", weight=647)
data[20]["mst"].add_edge("t", "h", weight=827)
data[20]["mst"].add_edge("t", "m", weight=394)
data[20]["mst"].add_edge("u", "j", weight=128)
data[20]["solutions"] = [
    { "edge": ("e", "m"), "weight": 1516, "expected": [('a', 'i'), ('i', 'e'), ('i', 'f'), ('s', 'f'), ('l', 'j'), ('b', 'g'), ('g', 'o'), ('o', 'c'), ('c', 'n'), ('c', 't'), ('t', 'm'), ('t', 'h'), ('n', 'j'), ('d', 'r'), ('d', 'u'), ('d', 'f'), ('r', 'k'), ('r', 'q'), ('u', 'j'), ('m', 'p')] },
    { "edge": ("n", "e"), "weight": 1228, "expected": [('a', 'i'), ('i', 'e'), ('i', 'f'), ('s', 'f'), ('l', 'j'), ('b', 'g'), ('g', 'o'), ('o', 'c'), ('c', 'n'), ('c', 't'), ('t', 'm'), ('t', 'h'), ('n', 'j'), ('d', 'r'), ('d', 'u'), ('d', 'f'), ('r', 'k'), ('r', 'q'), ('u', 'j'), ('m', 'p')] },
    { "edge": ("u", "j"), "weight": 127, "expected": [('a', 'i'), ('i', 'e'), ('i', 'f'), ('s', 'f'), ('l', 'j'), ('b', 'g'), ('g', 'o'), ('o', 'c'), ('c', 'n'), ('c', 't'), ('t', 'm'), ('t', 'h'), ('n', 'j'), ('d', 'r'), ('d', 'u'), ('d', 'f'), ('r', 'k'), ('r', 'q'), ('u', 'j'), ('m', 'p')] },
    { "edge": ("r", "q"), "weight": 1119, "expected": [('a', 'i'), ('i', 'e'), ('i', 'f'), ('s', 'f'), ('l', 'j'), ('b', 'g'), ('g', 'o'), ('o', 'c'), ('c', 'n'), ('c', 't'), ('t', 'm'), ('t', 'h'), ('n', 'j'), ('d', 'r'), ('d', 'u'), ('d', 'f'), ('r', 'k'), ('r', 'q'), ('u', 'j'), ('m', 'p')] }
]
# Graph consisting of 20 nodes
data[21]["graph"] = Graph(is_directed=False)
data[21]["graph"].add_edge("a", "c", 250)
data[21]["graph"].add_edge("a", "e", 314)
data[21]["graph"].add_edge("a", "t", 50)
data[21]["graph"].add_edge("b", "n", 373)
data[21]["graph"].add_edge("b", "s", 195)
data[21]["graph"].add_edge("c", "k", 224)
data[21]["graph"].add_edge("c", "r", 246)
data[21]["graph"].add_edge("d", "m", 99)
data[21]["graph"].add_edge("d", "o", 296)
data[21]["graph"].add_edge("d", "p", 10)
data[21]["graph"].add_edge("e", "b", 414)
data[21]["graph"].add_edge("e", "f", 115)
data[21]["graph"].add_edge("f", "u", 307)
data[21]["graph"].add_edge("g", "j", 89)
data[21]["graph"].add_edge("i", "q", 68)
data[21]["graph"].add_edge("j", "l", 429)
data[21]["graph"].add_edge("k", "h", 111)
data[21]["graph"].add_edge("k", "i", 45)
data[21]["graph"].add_edge("m", "g", 192)
data[21]["graph"].add_edge("m", "l", 353)
data[21]["graph"].add_edge("n", "h", 379)
data[21]["graph"].add_edge("o", "j", 129)
data[21]["graph"].add_edge("o", "q", 366)
data[21]["graph"].add_edge("p", "q", 60)
data[21]["graph"].add_edge("p", "u", 27)
data[21]["graph"].add_edge("r", "i", 7)
data[21]["graph"].add_edge("s", "f", 24)
data[21]["graph"].add_edge("s", "g", 381)
data[21]["graph"].add_edge("t", "h", 116)
data[21]["graph"].add_edge("t", "n", 80)
data[21]["graph"].add_edge("u", "l", 410)
data[21]["mst"] = Graph(is_directed=False)
data[21]["mst"].add_edge("a", "t", weight=50)
data[21]["mst"].add_edge("b", "s", weight=195)
data[21]["mst"].add_edge("c", "k", weight=224)
data[21]["mst"].add_edge("d", "m", weight=99)
data[21]["mst"].add_edge("d", "p", weight=10)
data[21]["mst"].add_edge("e", "f", weight=115)
data[21]["mst"].add_edge("f", "u", weight=307)
data[21]["mst"].add_edge("g", "j", weight=89)
data[21]["mst"].add_edge("i", "q", weight=68)
data[21]["mst"].add_edge("k", "h", weight=111)
data[21]["mst"].add_edge("k", "i", weight=45)
data[21]["mst"].add_edge("m", "g", weight=192)
data[21]["mst"].add_edge("m", "l", weight=353)
data[21]["mst"].add_edge("o", "j", weight=129)
data[21]["mst"].add_edge("p", "q", weight=60)
data[21]["mst"].add_edge("p", "u", weight=27)
data[21]["mst"].add_edge("r", "i", weight=7)
data[21]["mst"].add_edge("s", "f", weight=24)
data[21]["mst"].add_edge("t", "h", weight=116)
data[21]["mst"].add_edge("t", "n", weight=80)
data[21]["solutions"] = [
    { "edge": ("a", "e"), "weight": 315, "expected": [('a', 't'), ('c', 'k'), ('t', 'n'), ('t', 'h'), ('e', 'f'), ('b', 's'), ('s', 'f'), ('r', 'i'), ('k', 'i'), ('k', 'h'), ('d', 'p'), ('d', 'm'), ('m', 'g'), ('m', 'l'), ('o', 'j'), ('p', 'u'), ('p', 'q'), ('f', 'u'), ('g', 'j'), ('i', 'q')] },
    { "edge": ("b", "n"), "weight": 114, "expected": [('a', 't'), ('c', 'k'), ('t', 'n'), ('t', 'h'), ('e', 'f'), ('b', 'n'), ('b', 's'), ('s', 'f'), ('r', 'i'), ('k', 'i'), ('k', 'h'), ('d', 'p'), ('d', 'm'), ('m', 'g'), ('m', 'l'), ('o', 'j'), ('p', 'u'), ('p', 'q'), ('g', 'j'), ('i', 'q')] },
    { "edge": ("t", "h"), "weight": 114, "expected": [('a', 't'), ('c', 'k'), ('t', 'n'), ('t', 'h'), ('e', 'f'), ('b', 's'), ('s', 'f'), ('r', 'i'), ('k', 'i'), ('k', 'h'), ('d', 'p'), ('d', 'm'), ('m', 'g'), ('m', 'l'), ('o', 'j'), ('p', 'u'), ('p', 'q'), ('f', 'u'), ('g', 'j'), ('i', 'q')] },
    { "edge": ("c", "k"), "weight": 225, "expected": [('a', 't'), ('c', 'k'), ('t', 'n'), ('t', 'h'), ('e', 'f'), ('b', 's'), ('s', 'f'), ('r', 'i'), ('k', 'i'), ('k', 'h'), ('d', 'p'), ('d', 'm'), ('m', 'g'), ('m', 'l'), ('o', 'j'), ('p', 'u'), ('p', 'q'), ('f', 'u'), ('g', 'j'), ('i', 'q')] }
]
# Graph consisting of 21 nodes
data[22]["graph"] = Graph(is_directed=False)
data[22]["graph"].add_edge("a", "m", 261)
data[22]["graph"].add_edge("a", "o", 1389)
data[22]["graph"].add_edge("a", "t", 1449)
data[22]["graph"].add_edge("b", "j", 1620)
data[22]["graph"].add_edge("b", "l", 1341)
data[22]["graph"].add_edge("b", "v", 92)
data[22]["graph"].add_edge("c", "q", 899)
data[22]["graph"].add_edge("c", "s", 1116)
data[22]["graph"].add_edge("c", "u", 251)
data[22]["graph"].add_edge("d", "f", 399)
data[22]["graph"].add_edge("e", "n", 963)
data[22]["graph"].add_edge("f", "i", 1356)
data[22]["graph"].add_edge("f", "k", 773)
data[22]["graph"].add_edge("i", "h", 341)
data[22]["graph"].add_edge("j", "k", 712)
data[22]["graph"].add_edge("k", "h", 969)
data[22]["graph"].add_edge("l", "e", 307)
data[22]["graph"].add_edge("l", "p", 225)
data[22]["graph"].add_edge("m", "d", 731)
data[22]["graph"].add_edge("m", "n", 928)
data[22]["graph"].add_edge("o", "g", 906)
data[22]["graph"].add_edge("o", "i", 369)
data[22]["graph"].add_edge("q", "n", 106)
data[22]["graph"].add_edge("q", "r", 54)
data[22]["graph"].add_edge("s", "g", 607)
data[22]["graph"].add_edge("s", "p", 1366)
data[22]["graph"].add_edge("t", "j", 485)
data[22]["graph"].add_edge("t", "p", 718)
data[22]["graph"].add_edge("u", "e", 305)
data[22]["graph"].add_edge("u", "h", 1335)
data[22]["graph"].add_edge("v", "d", 1145)
data[22]["graph"].add_edge("v", "g", 98)
data[22]["mst"] = Graph(is_directed=False)
data[22]["mst"].add_edge("a", "m", weight=261)
data[22]["mst"].add_edge("b", "v", weight=92)
data[22]["mst"].add_edge("c", "q", weight=899)
data[22]["mst"].add_edge("c", "u", weight=251)
data[22]["mst"].add_edge("d", "f", weight=399)
data[22]["mst"].add_edge("f", "k", weight=773)
data[22]["mst"].add_edge("i", "h", weight=341)
data[22]["mst"].add_edge("j", "k", weight=712)
data[22]["mst"].add_edge("k", "h", weight=969)
data[22]["mst"].add_edge("l", "e", weight=307)
data[22]["mst"].add_edge("l", "p", weight=225)
data[22]["mst"].add_edge("m", "d", weight=731)
data[22]["mst"].add_edge("o", "g", weight=906)
data[22]["mst"].add_edge("o", "i", weight=369)
data[22]["mst"].add_edge("q", "n", weight=106)
data[22]["mst"].add_edge("q", "r", weight=54)
data[22]["mst"].add_edge("s", "g", weight=607)
data[22]["mst"].add_edge("t", "j", weight=485)
data[22]["mst"].add_edge("t", "p", weight=718)
data[22]["mst"].add_edge("u", "e", weight=305)
data[22]["mst"].add_edge("v", "g", weight=98)
data[22]["solutions"] = [
    { "edge": ("u", "h"), "weight": 1336, "expected": [('a', 'm'), ('t', 'j'), ('t', 'p'), ('m', 'd'), ('o', 'i'), ('o', 'g'), ('b', 'v'), ('j', 'k'), ('l', 'p'), ('l', 'e'), ('v', 'g'), ('c', 'u'), ('c', 'q'), ('q', 'r'), ('q', 'n'), ('s', 'g'), ('u', 'e'), ('d', 'f'), ('f', 'k'), ('i', 'h'), ('k', 'h')] },
    { "edge": ("b", "l"), "weight": 398, "expected": [('a', 'm'), ('t', 'j'), ('t', 'p'), ('m', 'd'), ('o', 'i'), ('o', 'g'), ('b', 'v'), ('b', 'l'), ('j', 'k'), ('l', 'p'), ('l', 'e'), ('v', 'g'), ('c', 'u'), ('c', 'q'), ('q', 'r'), ('q', 'n'), ('s', 'g'), ('u', 'e'), ('d', 'f'), ('f', 'k'), ('i', 'h')] },
    { "edge": ("d", "f"), "weight": 398, "expected": [('a', 'm'), ('t', 'j'), ('t', 'p'), ('m', 'd'), ('o', 'i'), ('o', 'g'), ('b', 'v'), ('j', 'k'), ('l', 'p'), ('l', 'e'), ('v', 'g'), ('c', 'u'), ('c', 'q'), ('q', 'r'), ('q', 'n'), ('s', 'g'), ('u', 'e'), ('d', 'f'), ('f', 'k'), ('i', 'h'), ('k', 'h')] },
    { "edge": ("j", "k"), "weight": 713, "expected": [('a', 'm'), ('t', 'j'), ('t', 'p'), ('m', 'd'), ('o', 'i'), ('o', 'g'), ('b', 'v'), ('j', 'k'), ('l', 'p'), ('l', 'e'), ('v', 'g'), ('c', 'u'), ('c', 'q'), ('q', 'r'), ('q', 'n'), ('s', 'g'), ('u', 'e'), ('d', 'f'), ('f', 'k'), ('i', 'h'), ('k', 'h')] }
]
# Graph consisting of 22 nodes
data[23]["graph"] = Graph(is_directed=False)
data[23]["graph"].add_edge("a", "d", 728)
data[23]["graph"].add_edge("a", "i", 1009)
data[23]["graph"].add_edge("a", "p", 72)
data[23]["graph"].add_edge("b", "e", 725)
data[23]["graph"].add_edge("b", "g", 682)
data[23]["graph"].add_edge("b", "v", 572)
data[23]["graph"].add_edge("c", "k", 619)
data[23]["graph"].add_edge("c", "q", 1336)
data[23]["graph"].add_edge("c", "s", 123)
data[23]["graph"].add_edge("d", "m", 389)
data[23]["graph"].add_edge("d", "w", 990)
data[23]["graph"].add_edge("e", "j", 390)
data[23]["graph"].add_edge("f", "n", 227)
data[23]["graph"].add_edge("g", "t", 793)
data[23]["graph"].add_edge("h", "u", 1630)
data[23]["graph"].add_edge("i", "g", 1252)
data[23]["graph"].add_edge("i", "j", 530)
data[23]["graph"].add_edge("k", "w", 1098)
data[23]["graph"].add_edge("l", "o", 1058)
data[23]["graph"].add_edge("m", "j", 908)
data[23]["graph"].add_edge("m", "r", 488)
data[23]["graph"].add_edge("n", "h", 1599)
data[23]["graph"].add_edge("n", "r", 1154)
data[23]["graph"].add_edge("o", "r", 625)
data[23]["graph"].add_edge("p", "e", 1244)
data[23]["graph"].add_edge("p", "f", 1504)
data[23]["graph"].add_edge("q", "f", 763)
data[23]["graph"].add_edge("q", "h", 602)
data[23]["graph"].add_edge("s", "l", 81)
data[23]["graph"].add_edge("s", "u", 1400)
data[23]["graph"].add_edge("u", "l", 1131)
data[23]["graph"].add_edge("v", "k", 129)
data[23]["graph"].add_edge("v", "t", 1486)
data[23]["graph"].add_edge("w", "o", 501)
data[23]["mst"] = Graph(is_directed=False)
data[23]["mst"].add_edge("a", "d", weight=728)
data[23]["mst"].add_edge("a", "p", weight=72)
data[23]["mst"].add_edge("b", "e", weight=725)
data[23]["mst"].add_edge("b", "g", weight=682)
data[23]["mst"].add_edge("b", "v", weight=572)
data[23]["mst"].add_edge("c", "k", weight=619)
data[23]["mst"].add_edge("c", "s", weight=123)
data[23]["mst"].add_edge("d", "m", weight=389)
data[23]["mst"].add_edge("e", "j", weight=390)
data[23]["mst"].add_edge("f", "n", weight=227)
data[23]["mst"].add_edge("g", "t", weight=793)
data[23]["mst"].add_edge("i", "j", weight=530)
data[23]["mst"].add_edge("m", "j", weight=908)
data[23]["mst"].add_edge("m", "r", weight=488)
data[23]["mst"].add_edge("n", "r", weight=1154)
data[23]["mst"].add_edge("o", "r", weight=625)
data[23]["mst"].add_edge("q", "f", weight=763)
data[23]["mst"].add_edge("q", "h", weight=602)
data[23]["mst"].add_edge("s", "l", weight=81)
data[23]["mst"].add_edge("u", "l", weight=1131)
data[23]["mst"].add_edge("v", "k", weight=129)
data[23]["mst"].add_edge("w", "o", weight=501)
data[23]["solutions"] = [
    { "edge": ("d", "w"), "weight": 991, "expected": [('a', 'p'), ('a', 'd'), ('i', 'j'), ('d', 'm'), ('b', 'v'), ('b', 'g'), ('b', 'e'), ('e', 'j'), ('v', 'k'), ('g', 't'), ('c', 's'), ('c', 'k'), ('q', 'h'), ('q', 'f'), ('s', 'l'), ('m', 'r'), ('m', 'j'), ('w', 'o'), ('f', 'n'), ('n', 'r'), ('u', 'l'), ('o', 'r')] },
    { "edge": ("i", "g"), "weight": 907, "expected": [('a', 'p'), ('a', 'd'), ('i', 'j'), ('d', 'm'), ('b', 'v'), ('b', 'g'), ('b', 'e'), ('e', 'j'), ('v', 'k'), ('g', 't'), ('c', 's'), ('c', 'k'), ('q', 'h'), ('q', 'f'), ('s', 'l'), ('m', 'r'), ('m', 'j'), ('w', 'o'), ('f', 'n'), ('n', 'r'), ('u', 'l'), ('o', 'r')] },
    { "edge": ("q", "f"), "weight": 762, "expected": [('a', 'p'), ('a', 'd'), ('i', 'j'), ('d', 'm'), ('b', 'v'), ('b', 'g'), ('b', 'e'), ('e', 'j'), ('v', 'k'), ('g', 't'), ('c', 's'), ('c', 'k'), ('q', 'h'), ('q', 'f'), ('s', 'l'), ('m', 'r'), ('m', 'j'), ('w', 'o'), ('f', 'n'), ('n', 'r'), ('u', 'l'), ('o', 'r')] },
    { "edge": ("v", "k"), "weight": 130, "expected": [('a', 'p'), ('a', 'd'), ('i', 'j'), ('d', 'm'), ('b', 'v'), ('b', 'g'), ('b', 'e'), ('e', 'j'), ('v', 'k'), ('g', 't'), ('c', 's'), ('c', 'k'), ('q', 'h'), ('q', 'f'), ('s', 'l'), ('m', 'r'), ('m', 'j'), ('w', 'o'), ('f', 'n'), ('n', 'r'), ('u', 'l'), ('o', 'r')] }
]
# Graph consisting of 23 nodes
data[24]["graph"] = Graph(is_directed=False)
data[24]["graph"].add_edge("a", "d", 539)
data[24]["graph"].add_edge("a", "h", 563)
data[24]["graph"].add_edge("a", "m", 228)
data[24]["graph"].add_edge("b", "l", 827)
data[24]["graph"].add_edge("b", "r", 1091)
data[24]["graph"].add_edge("c", "p", 664)
data[24]["graph"].add_edge("d", "f", 1265)
data[24]["graph"].add_edge("d", "v", 366)
data[24]["graph"].add_edge("e", "o", 50)
data[24]["graph"].add_edge("e", "t", 1600)
data[24]["graph"].add_edge("f", "i", 837)
data[24]["graph"].add_edge("f", "s", 268)
data[24]["graph"].add_edge("g", "w", 591)
data[24]["graph"].add_edge("h", "c", 338)
data[24]["graph"].add_edge("h", "w", 1428)
data[24]["graph"].add_edge("i", "k", 1130)
data[24]["graph"].add_edge("i", "q", 1590)
data[24]["graph"].add_edge("k", "n", 748)
data[24]["graph"].add_edge("l", "c", 527)
data[24]["graph"].add_edge("l", "j", 1097)
data[24]["graph"].add_edge("m", "b", 1505)
data[24]["graph"].add_edge("m", "e", 1399)
data[24]["graph"].add_edge("n", "u", 467)
data[24]["graph"].add_edge("o", "g", 12)
data[24]["graph"].add_edge("o", "k", 917)
data[24]["graph"].add_edge("p", "n", 1034)
data[24]["graph"].add_edge("p", "t", 986)
data[24]["graph"].add_edge("r", "j", 70)
data[24]["graph"].add_edge("r", "u", 668)
data[24]["graph"].add_edge("s", "u", 1324)
data[24]["graph"].add_edge("s", "x", 702)
data[24]["graph"].add_edge("t", "q", 704)
data[24]["graph"].add_edge("v", "g", 391)
data[24]["graph"].add_edge("v", "q", 1463)
data[24]["graph"].add_edge("w", "j", 299)
data[24]["mst"] = Graph(is_directed=False)
data[24]["mst"].add_edge("a", "d", weight=539)
data[24]["mst"].add_edge("a", "h", weight=563)
data[24]["mst"].add_edge("a", "m", weight=228)
data[24]["mst"].add_edge("b", "l", weight=827)
data[24]["mst"].add_edge("c", "p", weight=664)
data[24]["mst"].add_edge("d", "v", weight=366)
data[24]["mst"].add_edge("e", "o", weight=50)
data[24]["mst"].add_edge("f", "i", weight=837)
data[24]["mst"].add_edge("f", "s", weight=268)
data[24]["mst"].add_edge("g", "w", weight=591)
data[24]["mst"].add_edge("h", "c", weight=338)
data[24]["mst"].add_edge("i", "k", weight=1130)
data[24]["mst"].add_edge("k", "n", weight=748)
data[24]["mst"].add_edge("l", "c", weight=527)
data[24]["mst"].add_edge("n", "u", weight=467)
data[24]["mst"].add_edge("o", "g", weight=12)
data[24]["mst"].add_edge("p", "t", weight=986)
data[24]["mst"].add_edge("r", "j", weight=70)
data[24]["mst"].add_edge("r", "u", weight=668)
data[24]["mst"].add_edge("s", "x", weight=702)
data[24]["mst"].add_edge("t", "q", weight=704)
data[24]["mst"].add_edge("v", "g", weight=391)
data[24]["mst"].add_edge("w", "j", weight=299)
data[24]["solutions"] = [
    { "edge": ("o", "k"), "weight": 918, "expected": [('a', 'm'), ('a', 'd'), ('a', 'h'), ('d', 'v'), ('h', 'c'), ('b', 'l'), ('r', 'j'), ('r', 'u'), ('l', 'c'), ('c', 'p'), ('p', 't'), ('v', 'g'), ('f', 's'), ('f', 'i'), ('e', 'o'), ('t', 'q'), ('o', 'g'), ('i', 'k'), ('s', 'x'), ('g', 'w'), ('w', 'j'), ('k', 'n'), ('n', 'u')] },
    { "edge": ("d", "f"), "weight": 1129, "expected": [('a', 'm'), ('a', 'd'), ('a', 'h'), ('d', 'v'), ('d', 'f'), ('h', 'c'), ('b', 'l'), ('r', 'j'), ('r', 'u'), ('l', 'c'), ('c', 'p'), ('p', 't'), ('v', 'g'), ('f', 's'), ('f', 'i'), ('e', 'o'), ('t', 'q'), ('o', 'g'), ('s', 'x'), ('g', 'w'), ('w', 'j'), ('k', 'n'), ('n', 'u')] },
    { "edge": ("a", "d"), "weight": 538, "expected": [('a', 'm'), ('a', 'd'), ('a', 'h'), ('d', 'v'), ('h', 'c'), ('b', 'l'), ('r', 'j'), ('r', 'u'), ('l', 'c'), ('c', 'p'), ('p', 't'), ('v', 'g'), ('f', 's'), ('f', 'i'), ('e', 'o'), ('t', 'q'), ('o', 'g'), ('i', 'k'), ('s', 'x'), ('g', 'w'), ('w', 'j'), ('k', 'n'), ('n', 'u')] },
    { "edge": ("a", "h"), "weight": 564, "expected": [('a', 'm'), ('a', 'd'), ('a', 'h'), ('d', 'v'), ('h', 'c'), ('b', 'l'), ('r', 'j'), ('r', 'u'), ('l', 'c'), ('c', 'p'), ('p', 't'), ('v', 'g'), ('f', 's'), ('f', 'i'), ('e', 'o'), ('t', 'q'), ('o', 'g'), ('i', 'k'), ('s', 'x'), ('g', 'w'), ('w', 'j'), ('k', 'n'), ('n', 'u')] }
]
# Graph consisting of 24 nodes
data[25]["graph"] = Graph(is_directed=False)
data[25]["graph"].add_edge("a", "m", 1558)
data[25]["graph"].add_edge("a", "q", 1472)
data[25]["graph"].add_edge("a", "x", 603)
data[25]["graph"].add_edge("b", "k", 1196)
data[25]["graph"].add_edge("b", "s", 635)
data[25]["graph"].add_edge("b", "v", 1206)
data[25]["graph"].add_edge("c", "j", 809)
data[25]["graph"].add_edge("c", "o", 439)
data[25]["graph"].add_edge("c", "u", 1431)
data[25]["graph"].add_edge("d", "h", 165)
data[25]["graph"].add_edge("e", "r", 393)
data[25]["graph"].add_edge("e", "t", 1333)
data[25]["graph"].add_edge("f", "g", 406)
data[25]["graph"].add_edge("h", "i", 461)
data[25]["graph"].add_edge("h", "n", 1102)
data[25]["graph"].add_edge("j", "o", 1486)
data[25]["graph"].add_edge("j", "r", 378)
data[25]["graph"].add_edge("k", "d", 301)
data[25]["graph"].add_edge("k", "w", 1438)
data[25]["graph"].add_edge("m", "v", 944)
data[25]["graph"].add_edge("m", "y", 870)
data[25]["graph"].add_edge("n", "l", 486)
data[25]["graph"].add_edge("n", "p", 533)
data[25]["graph"].add_edge("o", "d", 740)
data[25]["graph"].add_edge("q", "w", 1561)
data[25]["graph"].add_edge("q", "y", 381)
data[25]["graph"].add_edge("r", "g", 572)
data[25]["graph"].add_edge("s", "f", 242)
data[25]["graph"].add_edge("s", "i", 1227)
data[25]["graph"].add_edge("t", "f", 1272)
data[25]["graph"].add_edge("t", "i", 1340)
data[25]["graph"].add_edge("u", "e", 554)
data[25]["graph"].add_edge("u", "g", 1557)
data[25]["graph"].add_edge("v", "l", 1305)
data[25]["graph"].add_edge("x", "l", 771)
data[25]["graph"].add_edge("x", "p", 1216)
data[25]["graph"].add_edge("y", "p", 398)
data[25]["mst"] = Graph(is_directed=False)
data[25]["mst"].add_edge("a", "x", weight=603)
data[25]["mst"].add_edge("b", "s", weight=635)
data[25]["mst"].add_edge("c", "j", weight=809)
data[25]["mst"].add_edge("c", "o", weight=439)
data[25]["mst"].add_edge("d", "h", weight=165)
data[25]["mst"].add_edge("e", "r", weight=393)
data[25]["mst"].add_edge("f", "g", weight=406)
data[25]["mst"].add_edge("h", "i", weight=461)
data[25]["mst"].add_edge("h", "n", weight=1102)
data[25]["mst"].add_edge("j", "r", weight=378)
data[25]["mst"].add_edge("k", "d", weight=301)
data[25]["mst"].add_edge("k", "w", weight=1438)
data[25]["mst"].add_edge("m", "v", weight=944)
data[25]["mst"].add_edge("m", "y", weight=870)
data[25]["mst"].add_edge("n", "l", weight=486)
data[25]["mst"].add_edge("n", "p", weight=533)
data[25]["mst"].add_edge("o", "d", weight=740)
data[25]["mst"].add_edge("q", "y", weight=381)
data[25]["mst"].add_edge("r", "g", weight=572)
data[25]["mst"].add_edge("s", "f", weight=242)
data[25]["mst"].add_edge("t", "f", weight=1272)
data[25]["mst"].add_edge("u", "e", weight=554)
data[25]["mst"].add_edge("x", "l", weight=771)
data[25]["mst"].add_edge("y", "p", weight=398)
data[25]["solutions"] = [
    { "edge": ("b", "k"), "weight": 1197, "expected": [('a', 'x'), ('q', 'y'), ('m', 'y'), ('m', 'v'), ('x', 'l'), ('b', 's'), ('k', 'd'), ('k', 'w'), ('s', 'f'), ('c', 'o'), ('c', 'j'), ('j', 'r'), ('u', 'e'), ('o', 'd'), ('d', 'h'), ('h', 'i'), ('h', 'n'), ('e', 'r'), ('r', 'g'), ('t', 'f'), ('f', 'g'), ('n', 'l'), ('n', 'p'), ('y', 'p')] },
    { "edge": ("u", "g"), "weight": 164, "expected": [('a', 'x'), ('q', 'y'), ('m', 'y'), ('m', 'v'), ('x', 'l'), ('b', 's'), ('k', 'd'), ('k', 'w'), ('s', 'f'), ('c', 'o'), ('c', 'j'), ('j', 'r'), ('u', 'g'), ('u', 'e'), ('o', 'd'), ('d', 'h'), ('h', 'i'), ('h', 'n'), ('e', 'r'), ('t', 'f'), ('f', 'g'), ('n', 'l'), ('n', 'p'), ('y', 'p')] },
    { "edge": ("h", "i"), "weight": 460, "expected": [('a', 'x'), ('q', 'y'), ('m', 'y'), ('m', 'v'), ('x', 'l'), ('b', 's'), ('k', 'd'), ('k', 'w'), ('s', 'f'), ('c', 'o'), ('c', 'j'), ('j', 'r'), ('u', 'e'), ('o', 'd'), ('d', 'h'), ('h', 'i'), ('h', 'n'), ('e', 'r'), ('r', 'g'), ('t', 'f'), ('f', 'g'), ('n', 'l'), ('n', 'p'), ('y', 'p')] },
    { "edge": ("b", "s"), "weight": 636, "expected": [('a', 'x'), ('q', 'y'), ('m', 'y'), ('m', 'v'), ('x', 'l'), ('b', 's'), ('k', 'd'), ('k', 'w'), ('s', 'f'), ('c', 'o'), ('c', 'j'), ('j', 'r'), ('u', 'e'), ('o', 'd'), ('d', 'h'), ('h', 'i'), ('h', 'n'), ('e', 'r'), ('r', 'g'), ('t', 'f'), ('f', 'g'), ('n', 'l'), ('n', 'p'), ('y', 'p')] }
]
# Graph consisting of 25 nodes
data[26]["graph"] = Graph(is_directed=False)
data[26]["graph"].add_edge("a", "m", 129)
data[26]["graph"].add_edge("a", "o", 63)
data[26]["graph"].add_edge("a", "x", 659)
data[26]["graph"].add_edge("b", "j", 194)
data[26]["graph"].add_edge("b", "r", 827)
data[26]["graph"].add_edge("b", "y", 369)
data[26]["graph"].add_edge("c", "d", 379)
data[26]["graph"].add_edge("c", "z", 608)
data[26]["graph"].add_edge("d", "u", 650)
data[26]["graph"].add_edge("d", "v", 95)
data[26]["graph"].add_edge("e", "f", 1153)
data[26]["graph"].add_edge("e", "p", 1041)
data[26]["graph"].add_edge("f", "i", 273)
data[26]["graph"].add_edge("h", "s", 946)
data[26]["graph"].add_edge("i", "q", 925)
data[26]["graph"].add_edge("j", "k", 167)
data[26]["graph"].add_edge("j", "r", 1318)
data[26]["graph"].add_edge("l", "n", 453)
data[26]["graph"].add_edge("l", "w", 839)
data[26]["graph"].add_edge("m", "c", 1405)
data[26]["graph"].add_edge("m", "h", 5)
data[26]["graph"].add_edge("o", "q", 654)
data[26]["graph"].add_edge("o", "w", 490)
data[26]["graph"].add_edge("p", "q", 230)
data[26]["graph"].add_edge("p", "t", 1562)
data[26]["graph"].add_edge("r", "e", 117)
data[26]["graph"].add_edge("s", "l", 198)
data[26]["graph"].add_edge("s", "t", 1402)
data[26]["graph"].add_edge("u", "g", 1673)
data[26]["graph"].add_edge("u", "i", 871)
data[26]["graph"].add_edge("v", "f", 941)
data[26]["graph"].add_edge("v", "n", 516)
data[26]["graph"].add_edge("w", "t", 1357)
data[26]["graph"].add_edge("x", "h", 436)
data[26]["graph"].add_edge("x", "n", 1111)
data[26]["graph"].add_edge("y", "g", 1160)
data[26]["graph"].add_edge("y", "k", 324)
data[26]["graph"].add_edge("z", "g", 1182)
data[26]["graph"].add_edge("z", "k", 637)
data[26]["mst"] = Graph(is_directed=False)
data[26]["mst"].add_edge("a", "m", weight=129)
data[26]["mst"].add_edge("a", "o", weight=63)
data[26]["mst"].add_edge("b", "j", weight=194)
data[26]["mst"].add_edge("b", "r", weight=827)
data[26]["mst"].add_edge("c", "d", weight=379)
data[26]["mst"].add_edge("c", "z", weight=608)
data[26]["mst"].add_edge("d", "u", weight=650)
data[26]["mst"].add_edge("d", "v", weight=95)
data[26]["mst"].add_edge("f", "i", weight=273)
data[26]["mst"].add_edge("j", "k", weight=167)
data[26]["mst"].add_edge("l", "n", weight=453)
data[26]["mst"].add_edge("l", "w", weight=839)
data[26]["mst"].add_edge("m", "h", weight=5)
data[26]["mst"].add_edge("o", "q", weight=654)
data[26]["mst"].add_edge("o", "w", weight=490)
data[26]["mst"].add_edge("p", "q", weight=230)
data[26]["mst"].add_edge("r", "e", weight=117)
data[26]["mst"].add_edge("s", "l", weight=198)
data[26]["mst"].add_edge("u", "i", weight=871)
data[26]["mst"].add_edge("v", "n", weight=516)
data[26]["mst"].add_edge("w", "t", weight=1357)
data[26]["mst"].add_edge("x", "h", weight=436)
data[26]["mst"].add_edge("y", "g", weight=1160)
data[26]["mst"].add_edge("y", "k", weight=324)
data[26]["mst"].add_edge("z", "k", weight=637)
data[26]["solutions"] = [
    { "edge": ("e", "f"), "weight": 1154, "expected": [('a', 'o'), ('a', 'm'), ('m', 'h'), ('o', 'w'), ('o', 'q'), ('x', 'h'), ('b', 'j'), ('b', 'r'), ('y', 'k'), ('y', 'g'), ('j', 'k'), ('r', 'e'), ('c', 'd'), ('c', 'z'), ('z', 'k'), ('d', 'v'), ('d', 'u'), ('u', 'i'), ('v', 'n'), ('f', 'i'), ('p', 'q'), ('s', 'l'), ('l', 'n'), ('l', 'w'), ('w', 't')] },
    { "edge": ("s", "t"), "weight": 1159, "expected": [('a', 'o'), ('a', 'm'), ('m', 'h'), ('o', 'w'), ('o', 'q'), ('x', 'h'), ('b', 'j'), ('b', 'r'), ('y', 'k'), ('y', 'g'), ('j', 'k'), ('r', 'e'), ('c', 'd'), ('c', 'z'), ('z', 'k'), ('d', 'v'), ('d', 'u'), ('u', 'i'), ('v', 'n'), ('f', 'i'), ('p', 'q'), ('s', 'l'), ('s', 't'), ('l', 'n'), ('l', 'w')] },
    { "edge": ("p", "q"), "weight": 229, "expected": [('a', 'o'), ('a', 'm'), ('m', 'h'), ('o', 'w'), ('o', 'q'), ('x', 'h'), ('b', 'j'), ('b', 'r'), ('y', 'k'), ('y', 'g'), ('j', 'k'), ('r', 'e'), ('c', 'd'), ('c', 'z'), ('z', 'k'), ('d', 'v'), ('d', 'u'), ('u', 'i'), ('v', 'n'), ('f', 'i'), ('p', 'q'), ('s', 'l'), ('l', 'n'), ('l', 'w'), ('w', 't')] },
    { "edge": ("r", "e"), "weight": 118, "expected": [('a', 'o'), ('a', 'm'), ('m', 'h'), ('o', 'w'), ('o', 'q'), ('x', 'h'), ('b', 'j'), ('b', 'r'), ('y', 'k'), ('y', 'g'), ('j', 'k'), ('r', 'e'), ('c', 'd'), ('c', 'z'), ('z', 'k'), ('d', 'v'), ('d', 'u'), ('u', 'i'), ('v', 'n'), ('f', 'i'), ('p', 'q'), ('s', 'l'), ('l', 'n'), ('l', 'w'), ('w', 't')] }
]
# Graph consisting of 26 nodes
data[27]["graph"] = Graph(is_directed=False)
data[27]["graph"].add_edge("A", "q", 1077)
data[27]["graph"].add_edge("A", "u", 1602)
data[27]["graph"].add_edge("a", "e", 956)
data[27]["graph"].add_edge("a", "p", 370)
data[27]["graph"].add_edge("a", "v", 610)
data[27]["graph"].add_edge("b", "f", 407)
data[27]["graph"].add_edge("b", "j", 718)
data[27]["graph"].add_edge("b", "r", 129)
data[27]["graph"].add_edge("c", "A", 614)
data[27]["graph"].add_edge("c", "o", 743)
data[27]["graph"].add_edge("d", "y", 594)
data[27]["graph"].add_edge("d", "z", 291)
data[27]["graph"].add_edge("e", "c", 67)
data[27]["graph"].add_edge("e", "f", 1132)
data[27]["graph"].add_edge("f", "m", 828)
data[27]["graph"].add_edge("g", "s", 504)
data[27]["graph"].add_edge("g", "x", 640)
data[27]["graph"].add_edge("h", "i", 1632)
data[27]["graph"].add_edge("j", "g", 570)
data[27]["graph"].add_edge("j", "o", 710)
data[27]["graph"].add_edge("k", "n", 1243)
data[27]["graph"].add_edge("k", "w", 410)
data[27]["graph"].add_edge("l", "q", 155)
data[27]["graph"].add_edge("m", "k", 630)
data[27]["graph"].add_edge("m", "u", 884)
data[27]["graph"].add_edge("n", "t", 1189)
data[27]["graph"].add_edge("o", "i", 330)
data[27]["graph"].add_edge("p", "d", 436)
data[27]["graph"].add_edge("p", "i", 1460)
data[27]["graph"].add_edge("r", "l", 361)
data[27]["graph"].add_edge("r", "q", 952)
data[27]["graph"].add_edge("s", "l", 469)
data[27]["graph"].add_edge("s", "u", 612)
data[27]["graph"].add_edge("v", "w", 531)
data[27]["graph"].add_edge("v", "z", 810)
data[27]["graph"].add_edge("x", "h", 1098)
data[27]["graph"].add_edge("x", "t", 1681)
data[27]["graph"].add_edge("y", "h", 695)
data[27]["graph"].add_edge("y", "n", 1174)
data[27]["graph"].add_edge("z", "t", 1177)
data[27]["mst"] = Graph(is_directed=False)
data[27]["mst"].add_edge("a", "p", weight=370)
data[27]["mst"].add_edge("a", "v", weight=610)
data[27]["mst"].add_edge("b", "f", weight=407)
data[27]["mst"].add_edge("b", "r", weight=129)
data[27]["mst"].add_edge("c", "A", weight=614)
data[27]["mst"].add_edge("c", "o", weight=743)
data[27]["mst"].add_edge("d", "y", weight=594)
data[27]["mst"].add_edge("d", "z", weight=291)
data[27]["mst"].add_edge("e", "c", weight=67)
data[27]["mst"].add_edge("f", "m", weight=828)
data[27]["mst"].add_edge("g", "s", weight=504)
data[27]["mst"].add_edge("g", "x", weight=640)
data[27]["mst"].add_edge("j", "g", weight=570)
data[27]["mst"].add_edge("j", "o", weight=710)
data[27]["mst"].add_edge("k", "w", weight=410)
data[27]["mst"].add_edge("l", "q", weight=155)
data[27]["mst"].add_edge("m", "k", weight=630)
data[27]["mst"].add_edge("o", "i", weight=330)
data[27]["mst"].add_edge("p", "d", weight=436)
data[27]["mst"].add_edge("r", "l", weight=361)
data[27]["mst"].add_edge("s", "l", weight=469)
data[27]["mst"].add_edge("s", "u", weight=612)
data[27]["mst"].add_edge("v", "w", weight=531)
data[27]["mst"].add_edge("y", "h", weight=695)
data[27]["mst"].add_edge("y", "n", weight=1174)
data[27]["mst"].add_edge("z", "t", weight=1177)
data[27]["solutions"] = [
    { "edge": ("A", "u"), "weight": 1603, "expected": [('a', 'p'), ('a', 'v'), ('e', 'c'), ('v', 'w'), ('p', 'd'), ('b', 'r'), ('b', 'f'), ('j', 'g'), ('j', 'o'), ('f', 'm'), ('r', 'l'), ('c', 'A'), ('c', 'o'), ('o', 'i'), ('d', 'z'), ('d', 'y'), ('y', 'h'), ('y', 'n'), ('z', 't'), ('m', 'k'), ('g', 's'), ('g', 'x'), ('s', 'l'), ('s', 'u'), ('k', 'w'), ('l', 'q')] },
    { "edge": ("h", "i"), "weight": 1176, "expected": [('a', 'p'), ('a', 'v'), ('e', 'c'), ('v', 'w'), ('p', 'd'), ('b', 'r'), ('b', 'f'), ('j', 'g'), ('j', 'o'), ('f', 'm'), ('r', 'l'), ('c', 'A'), ('c', 'o'), ('o', 'i'), ('d', 'z'), ('d', 'y'), ('y', 'h'), ('y', 'n'), ('z', 't'), ('m', 'k'), ('g', 's'), ('g', 'x'), ('s', 'l'), ('s', 'u'), ('k', 'w'), ('l', 'q')] },
    { "edge": ("a", "p"), "weight": 369, "expected": [('a', 'p'), ('a', 'v'), ('e', 'c'), ('v', 'w'), ('p', 'd'), ('b', 'r'), ('b', 'f'), ('j', 'g'), ('j', 'o'), ('f', 'm'), ('r', 'l'), ('c', 'A'), ('c', 'o'), ('o', 'i'), ('d', 'z'), ('d', 'y'), ('y', 'h'), ('y', 'n'), ('z', 't'), ('m', 'k'), ('g', 's'), ('g', 'x'), ('s', 'l'), ('s', 'u'), ('k', 'w'), ('l', 'q')] },
    { "edge": ("c", "A"), "weight": 615, "expected": [('a', 'p'), ('a', 'v'), ('e', 'c'), ('v', 'w'), ('p', 'd'), ('b', 'r'), ('b', 'f'), ('j', 'g'), ('j', 'o'), ('f', 'm'), ('r', 'l'), ('c', 'A'), ('c', 'o'), ('o', 'i'), ('d', 'z'), ('d', 'y'), ('y', 'h'), ('y', 'n'), ('z', 't'), ('m', 'k'), ('g', 's'), ('g', 'x'), ('s', 'l'), ('s', 'u'), ('k', 'w'), ('l', 'q')] }
]
# Graph consisting of 27 nodes
data[28]["graph"] = Graph(is_directed=False)
data[28]["graph"].add_edge("A", "u", 599)
data[28]["graph"].add_edge("B", "i", 1075)
data[28]["graph"].add_edge("B", "u", 1525)
data[28]["graph"].add_edge("a", "b", 926)
data[28]["graph"].add_edge("a", "k", 1)
data[28]["graph"].add_edge("a", "r", 105)
data[28]["graph"].add_edge("b", "c", 1548)
data[28]["graph"].add_edge("b", "l", 1311)
data[28]["graph"].add_edge("c", "m", 871)
data[28]["graph"].add_edge("c", "q", 168)
data[28]["graph"].add_edge("d", "e", 277)
data[28]["graph"].add_edge("d", "o", 409)
data[28]["graph"].add_edge("e", "A", 762)
data[28]["graph"].add_edge("e", "p", 666)
data[28]["graph"].add_edge("f", "B", 1114)
data[28]["graph"].add_edge("f", "n", 1001)
data[28]["graph"].add_edge("f", "w", 1667)
data[28]["graph"].add_edge("g", "x", 480)
data[28]["graph"].add_edge("h", "i", 1476)
data[28]["graph"].add_edge("i", "y", 691)
data[28]["graph"].add_edge("j", "s", 1322)
data[28]["graph"].add_edge("j", "z", 279)
data[28]["graph"].add_edge("k", "d", 1294)
data[28]["graph"].add_edge("k", "h", 322)
data[28]["graph"].add_edge("l", "t", 380)
data[28]["graph"].add_edge("m", "n", 1621)
data[28]["graph"].add_edge("o", "A", 43)
data[28]["graph"].add_edge("o", "g", 733)
data[28]["graph"].add_edge("p", "t", 1141)
data[28]["graph"].add_edge("p", "w", 913)
data[28]["graph"].add_edge("q", "g", 1242)
data[28]["graph"].add_edge("q", "m", 1428)
data[28]["graph"].add_edge("r", "l", 192)
data[28]["graph"].add_edge("r", "n", 1153)
data[28]["graph"].add_edge("s", "u", 1163)
data[28]["graph"].add_edge("w", "s", 350)
data[28]["graph"].add_edge("x", "h", 1576)
data[28]["graph"].add_edge("x", "j", 199)
data[28]["graph"].add_edge("y", "v", 1583)
data[28]["graph"].add_edge("z", "t", 1062)
data[28]["graph"].add_edge("z", "v", 537)
data[28]["mst"] = Graph(is_directed=False)
data[28]["mst"].add_edge("A", "u", weight=599)
data[28]["mst"].add_edge("B", "i", weight=1075)
data[28]["mst"].add_edge("a", "b", weight=926)
data[28]["mst"].add_edge("a", "k", weight=1)
data[28]["mst"].add_edge("a", "r", weight=105)
data[28]["mst"].add_edge("c", "m", weight=871)
data[28]["mst"].add_edge("c", "q", weight=168)
data[28]["mst"].add_edge("d", "e", weight=277)
data[28]["mst"].add_edge("d", "o", weight=409)
data[28]["mst"].add_edge("e", "p", weight=666)
data[28]["mst"].add_edge("f", "B", weight=1114)
data[28]["mst"].add_edge("f", "n", weight=1001)
data[28]["mst"].add_edge("g", "x", weight=480)
data[28]["mst"].add_edge("i", "y", weight=691)
data[28]["mst"].add_edge("j", "z", weight=279)
data[28]["mst"].add_edge("k", "h", weight=322)
data[28]["mst"].add_edge("l", "t", weight=380)
data[28]["mst"].add_edge("o", "A", weight=43)
data[28]["mst"].add_edge("o", "g", weight=733)
data[28]["mst"].add_edge("p", "w", weight=913)
data[28]["mst"].add_edge("q", "g", weight=1242)
data[28]["mst"].add_edge("r", "l", weight=192)
data[28]["mst"].add_edge("r", "n", weight=1153)
data[28]["mst"].add_edge("w", "s", weight=350)
data[28]["mst"].add_edge("x", "j", weight=199)
data[28]["mst"].add_edge("z", "t", weight=1062)
data[28]["mst"].add_edge("z", "v", weight=537)
data[28]["solutions"] = [
    { "edge": ("f", "w"), "weight": 1668, "expected": [('a', 'k'), ('a', 'r'), ('a', 'b'), ('k', 'h'), ('r', 'l'), ('r', 'n'), ('c', 'q'), ('c', 'm'), ('l', 't'), ('q', 'g'), ('d', 'e'), ('d', 'o'), ('e', 'p'), ('o', 'A'), ('o', 'g'), ('A', 'u'), ('p', 'w'), ('f', 'n'), ('f', 'B'), ('B', 'i'), ('w', 's'), ('g', 'x'), ('x', 'j'), ('i', 'y'), ('j', 'z'), ('z', 'v'), ('z', 't')] },
    { "edge": ("y", "v"), "weight": 104, "expected": [('a', 'k'), ('a', 'r'), ('a', 'b'), ('k', 'h'), ('r', 'l'), ('c', 'q'), ('c', 'm'), ('l', 't'), ('q', 'g'), ('d', 'e'), ('d', 'o'), ('e', 'p'), ('o', 'A'), ('o', 'g'), ('A', 'u'), ('p', 'w'), ('f', 'n'), ('f', 'B'), ('B', 'i'), ('w', 's'), ('g', 'x'), ('x', 'j'), ('i', 'y'), ('y', 'v'), ('j', 'z'), ('z', 'v'), ('z', 't')] },
    { "edge": ("d", "o"), "weight": 408, "expected": [('a', 'k'), ('a', 'r'), ('a', 'b'), ('k', 'h'), ('r', 'l'), ('r', 'n'), ('c', 'q'), ('c', 'm'), ('l', 't'), ('q', 'g'), ('d', 'e'), ('d', 'o'), ('e', 'p'), ('o', 'A'), ('o', 'g'), ('A', 'u'), ('p', 'w'), ('f', 'n'), ('f', 'B'), ('B', 'i'), ('w', 's'), ('g', 'x'), ('x', 'j'), ('i', 'y'), ('j', 'z'), ('z', 'v'), ('z', 't')] },
    { "edge": ("z", "t"), "weight": 1063, "expected": [('a', 'k'), ('a', 'r'), ('a', 'b'), ('k', 'h'), ('r', 'l'), ('r', 'n'), ('c', 'q'), ('c', 'm'), ('l', 't'), ('q', 'g'), ('d', 'e'), ('d', 'o'), ('e', 'p'), ('o', 'A'), ('o', 'g'), ('A', 'u'), ('p', 'w'), ('f', 'n'), ('f', 'B'), ('B', 'i'), ('w', 's'), ('g', 'x'), ('x', 'j'), ('i', 'y'), ('j', 'z'), ('z', 'v'), ('z', 't')] }
]
# Graph consisting of 28 nodes
data[29]["graph"] = Graph(is_directed=False)
data[29]["graph"].add_edge("A", "d", 35)
data[29]["graph"].add_edge("A", "v", 29)
data[29]["graph"].add_edge("B", "l", 793)
data[29]["graph"].add_edge("B", "n", 1177)
data[29]["graph"].add_edge("C", "v", 1259)
data[29]["graph"].add_edge("a", "i", 16)
data[29]["graph"].add_edge("a", "q", 38)
data[29]["graph"].add_edge("a", "t", 583)
data[29]["graph"].add_edge("b", "A", 700)
data[29]["graph"].add_edge("b", "B", 1505)
data[29]["graph"].add_edge("b", "x", 1242)
data[29]["graph"].add_edge("c", "d", 1111)
data[29]["graph"].add_edge("c", "u", 803)
data[29]["graph"].add_edge("d", "s", 1404)
data[29]["graph"].add_edge("e", "j", 1584)
data[29]["graph"].add_edge("e", "l", 337)
data[29]["graph"].add_edge("f", "k", 778)
data[29]["graph"].add_edge("f", "o", 434)
data[29]["graph"].add_edge("g", "h", 55)
data[29]["graph"].add_edge("g", "z", 163)
data[29]["graph"].add_edge("i", "e", 607)
data[29]["graph"].add_edge("i", "j", 31)
data[29]["graph"].add_edge("j", "w", 32)
data[29]["graph"].add_edge("k", "o", 28)
data[29]["graph"].add_edge("l", "m", 49)
data[29]["graph"].add_edge("m", "y", 611)
data[29]["graph"].add_edge("o", "y", 1125)
data[29]["graph"].add_edge("p", "r", 697)
data[29]["graph"].add_edge("q", "g", 863)
data[29]["graph"].add_edge("q", "n", 1553)
data[29]["graph"].add_edge("r", "C", 1270)
data[29]["graph"].add_edge("s", "h", 482)
data[29]["graph"].add_edge("s", "n", 899)
data[29]["graph"].add_edge("t", "c", 1055)
data[29]["graph"].add_edge("t", "f", 1490)
data[29]["graph"].add_edge("u", "h", 392)
data[29]["graph"].add_edge("u", "k", 722)
data[29]["graph"].add_edge("w", "C", 890)
data[29]["graph"].add_edge("x", "r", 70)
data[29]["graph"].add_edge("x", "v", 1445)
data[29]["graph"].add_edge("y", "p", 996)
data[29]["graph"].add_edge("z", "m", 235)
data[29]["graph"].add_edge("z", "p", 1499)
data[29]["mst"] = Graph(is_directed=False)
data[29]["mst"].add_edge("A", "d", weight=35)
data[29]["mst"].add_edge("A", "v", weight=29)
data[29]["mst"].add_edge("B", "l", weight=793)
data[29]["mst"].add_edge("a", "i", weight=16)
data[29]["mst"].add_edge("a", "q", weight=38)
data[29]["mst"].add_edge("a", "t", weight=583)
data[29]["mst"].add_edge("b", "A", weight=700)
data[29]["mst"].add_edge("c", "d", weight=1111)
data[29]["mst"].add_edge("c", "u", weight=803)
data[29]["mst"].add_edge("e", "l", weight=337)
data[29]["mst"].add_edge("f", "o", weight=434)
data[29]["mst"].add_edge("g", "h", weight=55)
data[29]["mst"].add_edge("g", "z", weight=163)
data[29]["mst"].add_edge("i", "e", weight=607)
data[29]["mst"].add_edge("i", "j", weight=31)
data[29]["mst"].add_edge("j", "w", weight=32)
data[29]["mst"].add_edge("k", "o", weight=28)
data[29]["mst"].add_edge("l", "m", weight=49)
data[29]["mst"].add_edge("m", "y", weight=611)
data[29]["mst"].add_edge("p", "r", weight=697)
data[29]["mst"].add_edge("s", "h", weight=482)
data[29]["mst"].add_edge("s", "n", weight=899)
data[29]["mst"].add_edge("u", "h", weight=392)
data[29]["mst"].add_edge("u", "k", weight=722)
data[29]["mst"].add_edge("w", "C", weight=890)
data[29]["mst"].add_edge("x", "r", weight=70)
data[29]["mst"].add_edge("y", "p", weight=996)
data[29]["mst"].add_edge("z", "m", weight=235)
data[29]["solutions"] = [
    { "edge": ("r", "C"), "weight": 1271, "expected": [('a', 'i'), ('a', 'q'), ('a', 't'), ('i', 'j'), ('i', 'e'), ('b', 'A'), ('A', 'v'), ('A', 'd'), ('B', 'l'), ('x', 'r'), ('c', 'u'), ('c', 'd'), ('u', 'h'), ('u', 'k'), ('s', 'h'), ('s', 'n'), ('e', 'l'), ('j', 'w'), ('l', 'm'), ('f', 'o'), ('k', 'o'), ('g', 'h'), ('g', 'z'), ('z', 'm'), ('w', 'C'), ('m', 'y'), ('y', 'p'), ('p', 'r')] },
    { "edge": ("o", "y"), "weight": 610, "expected": [('a', 'i'), ('a', 'q'), ('a', 't'), ('i', 'j'), ('i', 'e'), ('b', 'A'), ('A', 'v'), ('A', 'd'), ('B', 'l'), ('x', 'r'), ('c', 'u'), ('c', 'd'), ('u', 'h'), ('s', 'h'), ('s', 'n'), ('e', 'l'), ('j', 'w'), ('l', 'm'), ('f', 'o'), ('k', 'o'), ('o', 'y'), ('g', 'h'), ('g', 'z'), ('z', 'm'), ('w', 'C'), ('m', 'y'), ('y', 'p'), ('p', 'r')] },
    { "edge": ("u", "k"), "weight": 721, "expected": [('a', 'i'), ('a', 'q'), ('a', 't'), ('i', 'j'), ('i', 'e'), ('b', 'A'), ('A', 'v'), ('A', 'd'), ('B', 'l'), ('x', 'r'), ('c', 'u'), ('c', 'd'), ('u', 'h'), ('u', 'k'), ('s', 'h'), ('s', 'n'), ('e', 'l'), ('j', 'w'), ('l', 'm'), ('f', 'o'), ('k', 'o'), ('g', 'h'), ('g', 'z'), ('z', 'm'), ('w', 'C'), ('m', 'y'), ('y', 'p'), ('p', 'r')] },
    { "edge": ("p", "r"), "weight": 698, "expected": [('a', 'i'), ('a', 'q'), ('a', 't'), ('i', 'j'), ('i', 'e'), ('b', 'A'), ('A', 'v'), ('A', 'd'), ('B', 'l'), ('x', 'r'), ('c', 'u'), ('c', 'd'), ('u', 'h'), ('u', 'k'), ('s', 'h'), ('s', 'n'), ('e', 'l'), ('j', 'w'), ('l', 'm'), ('f', 'o'), ('k', 'o'), ('g', 'h'), ('g', 'z'), ('z', 'm'), ('w', 'C'), ('m', 'y'), ('y', 'p'), ('p', 'r')] }
]
# Graph consisting of 29 nodes
data[30]["graph"] = Graph(is_directed=False)
data[30]["graph"].add_edge("A", "o", 381)
data[30]["graph"].add_edge("A", "r", 733)
data[30]["graph"].add_edge("B", "y", 1296)
data[30]["graph"].add_edge("C", "j", 1110)
data[30]["graph"].add_edge("C", "s", 97)
data[30]["graph"].add_edge("D", "n", 952)
data[30]["graph"].add_edge("D", "o", 910)
data[30]["graph"].add_edge("a", "f", 683)
data[30]["graph"].add_edge("a", "t", 40)
data[30]["graph"].add_edge("a", "x", 837)
data[30]["graph"].add_edge("b", "C", 18)
data[30]["graph"].add_edge("b", "h", 209)
data[30]["graph"].add_edge("b", "q", 182)
data[30]["graph"].add_edge("c", "D", 1351)
data[30]["graph"].add_edge("c", "j", 364)
data[30]["graph"].add_edge("c", "z", 193)
data[30]["graph"].add_edge("d", "l", 1648)
data[30]["graph"].add_edge("d", "m", 521)
data[30]["graph"].add_edge("e", "i", 492)
data[30]["graph"].add_edge("e", "u", 406)
data[30]["graph"].add_edge("f", "g", 1165)
data[30]["graph"].add_edge("f", "m", 613)
data[30]["graph"].add_edge("g", "w", 391)
data[30]["graph"].add_edge("h", "u", 175)
data[30]["graph"].add_edge("h", "v", 1049)
data[30]["graph"].add_edge("i", "A", 1358)
data[30]["graph"].add_edge("j", "k", 316)
data[30]["graph"].add_edge("l", "n", 465)
data[30]["graph"].add_edge("m", "g", 241)
data[30]["graph"].add_edge("o", "r", 267)
data[30]["graph"].add_edge("p", "s", 821)
data[30]["graph"].add_edge("q", "n", 763)
data[30]["graph"].add_edge("q", "p", 1483)
data[30]["graph"].add_edge("s", "B", 592)
data[30]["graph"].add_edge("t", "i", 748)
data[30]["graph"].add_edge("t", "p", 362)
data[30]["graph"].add_edge("u", "k", 1303)
data[30]["graph"].add_edge("v", "k", 1230)
data[30]["graph"].add_edge("w", "r", 972)
data[30]["graph"].add_edge("w", "v", 278)
data[30]["graph"].add_edge("x", "d", 131)
data[30]["graph"].add_edge("x", "e", 62)
data[30]["graph"].add_edge("z", "l", 1207)
data[30]["graph"].add_edge("z", "y", 83)
data[30]["mst"] = Graph(is_directed=False)
data[30]["mst"].add_edge("A", "o", weight=381)
data[30]["mst"].add_edge("C", "j", weight=1110)
data[30]["mst"].add_edge("C", "s", weight=97)
data[30]["mst"].add_edge("D", "n", weight=952)
data[30]["mst"].add_edge("D", "o", weight=910)
data[30]["mst"].add_edge("a", "f", weight=683)
data[30]["mst"].add_edge("a", "t", weight=40)
data[30]["mst"].add_edge("b", "C", weight=18)
data[30]["mst"].add_edge("b", "h", weight=209)
data[30]["mst"].add_edge("b", "q", weight=182)
data[30]["mst"].add_edge("c", "j", weight=364)
data[30]["mst"].add_edge("c", "z", weight=193)
data[30]["mst"].add_edge("d", "m", weight=521)
data[30]["mst"].add_edge("e", "i", weight=492)
data[30]["mst"].add_edge("e", "u", weight=406)
data[30]["mst"].add_edge("f", "m", weight=613)
data[30]["mst"].add_edge("g", "w", weight=391)
data[30]["mst"].add_edge("h", "u", weight=175)
data[30]["mst"].add_edge("j", "k", weight=316)
data[30]["mst"].add_edge("l", "n", weight=465)
data[30]["mst"].add_edge("m", "g", weight=241)
data[30]["mst"].add_edge("o", "r", weight=267)
data[30]["mst"].add_edge("q", "n", weight=763)
data[30]["mst"].add_edge("s", "B", weight=592)
data[30]["mst"].add_edge("t", "p", weight=362)
data[30]["mst"].add_edge("w", "v", weight=278)
data[30]["mst"].add_edge("x", "d", weight=131)
data[30]["mst"].add_edge("x", "e", weight=62)
data[30]["mst"].add_edge("z", "y", weight=83)
data[30]["solutions"] = [
    { "edge": ("i", "A"), "weight": 1359, "expected": [('a', 't'), ('a', 'f'), ('t', 'p'), ('f', 'm'), ('x', 'e'), ('x', 'd'), ('b', 'C'), ('b', 'q'), ('b', 'h'), ('q', 'n'), ('C', 's'), ('C', 'j'), ('h', 'u'), ('c', 'z'), ('c', 'j'), ('j', 'k'), ('D', 'o'), ('D', 'n'), ('z', 'y'), ('d', 'm'), ('l', 'n'), ('m', 'g'), ('e', 'u'), ('e', 'i'), ('g', 'w'), ('w', 'v'), ('A', 'o'), ('o', 'r'), ('s', 'B')] },
    { "edge": ("q", "p"), "weight": 591, "expected": [('a', 't'), ('t', 'p'), ('f', 'm'), ('x', 'e'), ('x', 'd'), ('b', 'C'), ('b', 'q'), ('b', 'h'), ('q', 'p'), ('q', 'n'), ('C', 's'), ('C', 'j'), ('h', 'u'), ('c', 'z'), ('c', 'j'), ('j', 'k'), ('D', 'o'), ('D', 'n'), ('z', 'y'), ('d', 'm'), ('l', 'n'), ('m', 'g'), ('e', 'u'), ('e', 'i'), ('g', 'w'), ('w', 'v'), ('A', 'o'), ('o', 'r'), ('s', 'B')] },
    { "edge": ("s", "B"), "weight": 591, "expected": [('a', 't'), ('a', 'f'), ('t', 'p'), ('f', 'm'), ('x', 'e'), ('x', 'd'), ('b', 'C'), ('b', 'q'), ('b', 'h'), ('q', 'n'), ('C', 's'), ('C', 'j'), ('h', 'u'), ('c', 'z'), ('c', 'j'), ('j', 'k'), ('D', 'o'), ('D', 'n'), ('z', 'y'), ('d', 'm'), ('l', 'n'), ('m', 'g'), ('e', 'u'), ('e', 'i'), ('g', 'w'), ('w', 'v'), ('A', 'o'), ('o', 'r'), ('s', 'B')] },
    { "edge": ("b", "C"), "weight": 19, "expected": [('a', 't'), ('a', 'f'), ('t', 'p'), ('f', 'm'), ('x', 'e'), ('x', 'd'), ('b', 'C'), ('b', 'q'), ('b', 'h'), ('q', 'n'), ('C', 's'), ('C', 'j'), ('h', 'u'), ('c', 'z'), ('c', 'j'), ('j', 'k'), ('D', 'o'), ('D', 'n'), ('z', 'y'), ('d', 'm'), ('l', 'n'), ('m', 'g'), ('e', 'u'), ('e', 'i'), ('g', 'w'), ('w', 'v'), ('A', 'o'), ('o', 'r'), ('s', 'B')] }
]
# Graph consisting of 30 nodes
data[31]["graph"] = Graph(is_directed=False)
data[31]["graph"].add_edge("A", "w", 817)
data[31]["graph"].add_edge("B", "m", 1541)
data[31]["graph"].add_edge("D", "r", 741)
data[31]["graph"].add_edge("E", "q", 689)
data[31]["graph"].add_edge("E", "w", 174)
data[31]["graph"].add_edge("a", "E", 690)
data[31]["graph"].add_edge("a", "p", 188)
data[31]["graph"].add_edge("a", "s", 259)
data[31]["graph"].add_edge("b", "D", 417)
data[31]["graph"].add_edge("b", "d", 169)
data[31]["graph"].add_edge("b", "k", 1119)
data[31]["graph"].add_edge("c", "l", 1116)
data[31]["graph"].add_edge("c", "t", 459)
data[31]["graph"].add_edge("c", "y", 483)
data[31]["graph"].add_edge("d", "i", 141)
data[31]["graph"].add_edge("d", "u", 497)
data[31]["graph"].add_edge("e", "g", 1061)
data[31]["graph"].add_edge("e", "v", 1396)
data[31]["graph"].add_edge("e", "z", 1159)
data[31]["graph"].add_edge("f", "A", 289)
data[31]["graph"].add_edge("f", "h", 7)
data[31]["graph"].add_edge("g", "A", 1414)
data[31]["graph"].add_edge("h", "o", 915)
data[31]["graph"].add_edge("j", "B", 28)
data[31]["graph"].add_edge("j", "r", 558)
data[31]["graph"].add_edge("k", "i", 572)
data[31]["graph"].add_edge("k", "u", 25)
data[31]["graph"].add_edge("l", "z", 1185)
data[31]["graph"].add_edge("n", "w", 752)
data[31]["graph"].add_edge("n", "x", 1075)
data[31]["graph"].add_edge("o", "m", 298)
data[31]["graph"].add_edge("o", "q", 1145)
data[31]["graph"].add_edge("p", "D", 1055)
data[31]["graph"].add_edge("p", "l", 46)
data[31]["graph"].add_edge("q", "C", 804)
data[31]["graph"].add_edge("r", "x", 376)
data[31]["graph"].add_edge("s", "f", 1204)
data[31]["graph"].add_edge("s", "h", 819)
data[31]["graph"].add_edge("t", "i", 437)
data[31]["graph"].add_edge("t", "m", 223)
data[31]["graph"].add_edge("u", "n", 508)
data[31]["graph"].add_edge("v", "j", 323)
data[31]["graph"].add_edge("x", "C", 1303)
data[31]["graph"].add_edge("y", "B", 165)
data[31]["graph"].add_edge("y", "g", 59)
data[31]["graph"].add_edge("z", "v", 537)
data[31]["mst"] = Graph(is_directed=False)
data[31]["mst"].add_edge("A", "w", weight=817)
data[31]["mst"].add_edge("E", "q", weight=689)
data[31]["mst"].add_edge("E", "w", weight=174)
data[31]["mst"].add_edge("a", "E", weight=690)
data[31]["mst"].add_edge("a", "p", weight=188)
data[31]["mst"].add_edge("a", "s", weight=259)
data[31]["mst"].add_edge("b", "D", weight=417)
data[31]["mst"].add_edge("b", "d", weight=169)
data[31]["mst"].add_edge("c", "t", weight=459)
data[31]["mst"].add_edge("c", "y", weight=483)
data[31]["mst"].add_edge("d", "i", weight=141)
data[31]["mst"].add_edge("d", "u", weight=497)
data[31]["mst"].add_edge("e", "g", weight=1061)
data[31]["mst"].add_edge("f", "A", weight=289)
data[31]["mst"].add_edge("f", "h", weight=7)
data[31]["mst"].add_edge("j", "B", weight=28)
data[31]["mst"].add_edge("j", "r", weight=558)
data[31]["mst"].add_edge("k", "u", weight=25)
data[31]["mst"].add_edge("n", "w", weight=752)
data[31]["mst"].add_edge("o", "m", weight=298)
data[31]["mst"].add_edge("p", "l", weight=46)
data[31]["mst"].add_edge("q", "C", weight=804)
data[31]["mst"].add_edge("r", "x", weight=376)
data[31]["mst"].add_edge("t", "i", weight=437)
data[31]["mst"].add_edge("t", "m", weight=223)
data[31]["mst"].add_edge("u", "n", weight=508)
data[31]["mst"].add_edge("v", "j", weight=323)
data[31]["mst"].add_edge("y", "B", weight=165)
data[31]["mst"].add_edge("y", "g", weight=59)
data[31]["mst"].add_edge("z", "v", weight=537)
data[31]["solutions"] = [
    { "edge": ("h", "o"), "weight": 916, "expected": [('a', 'p'), ('a', 's'), ('a', 'E'), ('E', 'w'), ('E', 'q'), ('p', 'l'), ('b', 'd'), ('b', 'D'), ('k', 'u'), ('d', 'i'), ('d', 'u'), ('c', 't'), ('c', 'y'), ('t', 'm'), ('t', 'i'), ('y', 'g'), ('y', 'B'), ('u', 'n'), ('e', 'g'), ('z', 'v'), ('v', 'j'), ('f', 'h'), ('f', 'A'), ('A', 'w'), ('o', 'm'), ('j', 'B'), ('j', 'r'), ('r', 'x'), ('n', 'w'), ('q', 'C')] },
    { "edge": ("B", "m"), "weight": 6, "expected": [('a', 'p'), ('a', 's'), ('a', 'E'), ('E', 'w'), ('E', 'q'), ('p', 'l'), ('b', 'd'), ('b', 'D'), ('k', 'u'), ('d', 'i'), ('d', 'u'), ('c', 't'), ('t', 'm'), ('t', 'i'), ('y', 'g'), ('y', 'B'), ('u', 'n'), ('e', 'g'), ('z', 'v'), ('v', 'j'), ('f', 'h'), ('f', 'A'), ('A', 'w'), ('o', 'm'), ('j', 'B'), ('j', 'r'), ('r', 'x'), ('B', 'm'), ('n', 'w'), ('q', 'C')] },
    { "edge": ("f", "h"), "weight": 6, "expected": [('a', 'p'), ('a', 's'), ('a', 'E'), ('E', 'w'), ('E', 'q'), ('p', 'l'), ('b', 'd'), ('b', 'D'), ('k', 'u'), ('d', 'i'), ('d', 'u'), ('c', 't'), ('c', 'y'), ('t', 'm'), ('t', 'i'), ('y', 'g'), ('y', 'B'), ('u', 'n'), ('e', 'g'), ('z', 'v'), ('v', 'j'), ('f', 'h'), ('f', 'A'), ('A', 'w'), ('o', 'm'), ('j', 'B'), ('j', 'r'), ('r', 'x'), ('n', 'w'), ('q', 'C')] },
    { "edge": ("y", "B"), "weight": 166, "expected": [('a', 'p'), ('a', 's'), ('a', 'E'), ('E', 'w'), ('E', 'q'), ('p', 'l'), ('b', 'd'), ('b', 'D'), ('k', 'u'), ('d', 'i'), ('d', 'u'), ('c', 't'), ('c', 'y'), ('t', 'm'), ('t', 'i'), ('y', 'g'), ('y', 'B'), ('u', 'n'), ('e', 'g'), ('z', 'v'), ('v', 'j'), ('f', 'h'), ('f', 'A'), ('A', 'w'), ('o', 'm'), ('j', 'B'), ('j', 'r'), ('r', 'x'), ('n', 'w'), ('q', 'C')] }
]
# Graph consisting of 31 nodes
data[32]["graph"] = Graph(is_directed=False)
data[32]["graph"].add_edge("A", "t", 1491)
data[32]["graph"].add_edge("B", "E", 449)
data[32]["graph"].add_edge("C", "s", 1281)
data[32]["graph"].add_edge("C", "t", 792)
data[32]["graph"].add_edge("D", "f", 172)
data[32]["graph"].add_edge("D", "n", 1308)
data[32]["graph"].add_edge("F", "e", 1507)
data[32]["graph"].add_edge("F", "i", 422)
data[32]["graph"].add_edge("a", "F", 68)
data[32]["graph"].add_edge("a", "d", 689)
data[32]["graph"].add_edge("a", "q", 741)
data[32]["graph"].add_edge("b", "i", 1458)
data[32]["graph"].add_edge("b", "m", 848)
data[32]["graph"].add_edge("b", "x", 779)
data[32]["graph"].add_edge("c", "D", 1493)
data[32]["graph"].add_edge("c", "l", 955)
data[32]["graph"].add_edge("d", "k", 650)
data[32]["graph"].add_edge("d", "r", 1118)
data[32]["graph"].add_edge("e", "p", 1407)
data[32]["graph"].add_edge("e", "u", 1201)
data[32]["graph"].add_edge("f", "z", 690)
data[32]["graph"].add_edge("g", "h", 267)
data[32]["graph"].add_edge("g", "j", 382)
data[32]["graph"].add_edge("g", "v", 853)
data[32]["graph"].add_edge("i", "j", 844)
data[32]["graph"].add_edge("j", "h", 4)
data[32]["graph"].add_edge("k", "h", 1316)
data[32]["graph"].add_edge("k", "n", 442)
data[32]["graph"].add_edge("l", "o", 147)
data[32]["graph"].add_edge("l", "r", 384)
data[32]["graph"].add_edge("m", "C", 510)
data[32]["graph"].add_edge("m", "f", 1103)
data[32]["graph"].add_edge("o", "w", 840)
data[32]["graph"].add_edge("p", "o", 588)
data[32]["graph"].add_edge("q", "A", 1028)
data[32]["graph"].add_edge("q", "w", 185)
data[32]["graph"].add_edge("r", "p", 769)
data[32]["graph"].add_edge("s", "y", 255)
data[32]["graph"].add_edge("u", "B", 39)
data[32]["graph"].add_edge("u", "s", 104)
data[32]["graph"].add_edge("v", "A", 1649)
data[32]["graph"].add_edge("v", "w", 1639)
data[32]["graph"].add_edge("x", "E", 521)
data[32]["graph"].add_edge("x", "c", 339)
data[32]["graph"].add_edge("y", "B", 1115)
data[32]["graph"].add_edge("y", "E", 1000)
data[32]["graph"].add_edge("z", "n", 458)
data[32]["graph"].add_edge("z", "t", 532)
data[32]["mst"] = Graph(is_directed=False)
data[32]["mst"].add_edge("B", "E", weight=449)
data[32]["mst"].add_edge("C", "t", weight=792)
data[32]["mst"].add_edge("D", "f", weight=172)
data[32]["mst"].add_edge("F", "i", weight=422)
data[32]["mst"].add_edge("a", "F", weight=68)
data[32]["mst"].add_edge("a", "d", weight=689)
data[32]["mst"].add_edge("a", "q", weight=741)
data[32]["mst"].add_edge("b", "m", weight=848)
data[32]["mst"].add_edge("b", "x", weight=779)
data[32]["mst"].add_edge("d", "k", weight=650)
data[32]["mst"].add_edge("e", "u", weight=1201)
data[32]["mst"].add_edge("f", "z", weight=690)
data[32]["mst"].add_edge("g", "h", weight=267)
data[32]["mst"].add_edge("g", "v", weight=853)
data[32]["mst"].add_edge("i", "j", weight=844)
data[32]["mst"].add_edge("j", "h", weight=4)
data[32]["mst"].add_edge("k", "n", weight=442)
data[32]["mst"].add_edge("l", "o", weight=147)
data[32]["mst"].add_edge("l", "r", weight=384)
data[32]["mst"].add_edge("m", "C", weight=510)
data[32]["mst"].add_edge("o", "w", weight=840)
data[32]["mst"].add_edge("p", "o", weight=588)
data[32]["mst"].add_edge("q", "A", weight=1028)
data[32]["mst"].add_edge("q", "w", weight=185)
data[32]["mst"].add_edge("s", "y", weight=255)
data[32]["mst"].add_edge("u", "B", weight=39)
data[32]["mst"].add_edge("u", "s", weight=104)
data[32]["mst"].add_edge("x", "E", weight=521)
data[32]["mst"].add_edge("x", "c", weight=339)
data[32]["mst"].add_edge("z", "n", weight=458)
data[32]["mst"].add_edge("z", "t", weight=532)
data[32]["solutions"] = [
    { "edge": ("g", "j"), "weight": 383, "expected": [('a', 'F'), ('a', 'd'), ('a', 'q'), ('q', 'w'), ('q', 'A'), ('d', 'k'), ('F', 'i'), ('b', 'x'), ('b', 'm'), ('i', 'j'), ('m', 'C'), ('x', 'c'), ('x', 'E'), ('l', 'o'), ('l', 'r'), ('D', 'f'), ('k', 'n'), ('e', 'u'), ('u', 'B'), ('u', 's'), ('p', 'o'), ('f', 'z'), ('z', 'n'), ('z', 't'), ('g', 'h'), ('g', 'v'), ('j', 'h'), ('o', 'w'), ('C', 't'), ('s', 'y'), ('B', 'E')] },
    { "edge": ("v", "A"), "weight": 847, "expected": [('a', 'F'), ('a', 'd'), ('a', 'q'), ('q', 'w'), ('d', 'k'), ('F', 'i'), ('b', 'x'), ('b', 'm'), ('i', 'j'), ('m', 'C'), ('x', 'c'), ('x', 'E'), ('l', 'o'), ('l', 'r'), ('D', 'f'), ('k', 'n'), ('e', 'u'), ('u', 'B'), ('u', 's'), ('p', 'o'), ('f', 'z'), ('z', 'n'), ('z', 't'), ('g', 'h'), ('g', 'v'), ('j', 'h'), ('v', 'A'), ('o', 'w'), ('C', 't'), ('s', 'y'), ('B', 'E')] },
    { "edge": ("q", "w"), "weight": 184, "expected": [('a', 'F'), ('a', 'd'), ('a', 'q'), ('q', 'w'), ('q', 'A'), ('d', 'k'), ('F', 'i'), ('b', 'x'), ('b', 'm'), ('i', 'j'), ('m', 'C'), ('x', 'c'), ('x', 'E'), ('l', 'o'), ('l', 'r'), ('D', 'f'), ('k', 'n'), ('e', 'u'), ('u', 'B'), ('u', 's'), ('p', 'o'), ('f', 'z'), ('z', 'n'), ('z', 't'), ('g', 'h'), ('g', 'v'), ('j', 'h'), ('o', 'w'), ('C', 't'), ('s', 'y'), ('B', 'E')] },
    { "edge": ("l", "r"), "weight": 385, "expected": [('a', 'F'), ('a', 'd'), ('a', 'q'), ('q', 'w'), ('q', 'A'), ('d', 'k'), ('F', 'i'), ('b', 'x'), ('b', 'm'), ('i', 'j'), ('m', 'C'), ('x', 'c'), ('x', 'E'), ('l', 'o'), ('l', 'r'), ('D', 'f'), ('k', 'n'), ('e', 'u'), ('u', 'B'), ('u', 's'), ('p', 'o'), ('f', 'z'), ('z', 'n'), ('z', 't'), ('g', 'h'), ('g', 'v'), ('j', 'h'), ('o', 'w'), ('C', 't'), ('s', 'y'), ('B', 'E')] }
]
# Graph consisting of 32 nodes
data[33]["graph"] = Graph(is_directed=False)
data[33]["graph"].add_edge("A", "q", 1005)
data[33]["graph"].add_edge("B", "F", 236)
data[33]["graph"].add_edge("C", "l", 1329)
data[33]["graph"].add_edge("C", "n", 412)
data[33]["graph"].add_edge("D", "A", 569)
data[33]["graph"].add_edge("D", "i", 1282)
data[33]["graph"].add_edge("G", "F", 899)
data[33]["graph"].add_edge("a", "h", 1396)
data[33]["graph"].add_edge("a", "m", 655)
data[33]["graph"].add_edge("a", "s", 376)
data[33]["graph"].add_edge("b", "G", 917)
data[33]["graph"].add_edge("b", "r", 1354)
data[33]["graph"].add_edge("c", "f", 30)
data[33]["graph"].add_edge("c", "p", 152)
data[33]["graph"].add_edge("c", "u", 883)
data[33]["graph"].add_edge("d", "D", 1364)
data[33]["graph"].add_edge("d", "t", 1109)
data[33]["graph"].add_edge("d", "z", 1335)
data[33]["graph"].add_edge("e", "A", 311)
data[33]["graph"].add_edge("f", "t", 1093)
data[33]["graph"].add_edge("f", "x", 976)
data[33]["graph"].add_edge("g", "C", 296)
data[33]["graph"].add_edge("h", "b", 423)
data[33]["graph"].add_edge("h", "o", 1176)
data[33]["graph"].add_edge("i", "E", 1346)
data[33]["graph"].add_edge("i", "w", 437)
data[33]["graph"].add_edge("j", "B", 171)
data[33]["graph"].add_edge("k", "v", 1525)
data[33]["graph"].add_edge("l", "y", 264)
data[33]["graph"].add_edge("m", "E", 1067)
data[33]["graph"].add_edge("m", "e", 1304)
data[33]["graph"].add_edge("n", "F", 49)
data[33]["graph"].add_edge("o", "E", 62)
data[33]["graph"].add_edge("p", "e", 1395)
data[33]["graph"].add_edge("p", "n", 1)
data[33]["graph"].add_edge("r", "o", 313)
data[33]["graph"].add_edge("r", "v", 748)
data[33]["graph"].add_edge("s", "g", 535)
data[33]["graph"].add_edge("s", "k", 35)
data[33]["graph"].add_edge("t", "j", 332)
data[33]["graph"].add_edge("u", "g", 673)
data[33]["graph"].add_edge("u", "k", 320)
data[33]["graph"].add_edge("v", "y", 853)
data[33]["graph"].add_edge("w", "j", 1515)
data[33]["graph"].add_edge("w", "q", 733)
data[33]["graph"].add_edge("x", "B", 528)
data[33]["graph"].add_edge("x", "y", 315)
data[33]["graph"].add_edge("z", "l", 683)
data[33]["graph"].add_edge("z", "q", 206)
data[33]["mst"] = Graph(is_directed=False)
data[33]["mst"].add_edge("A", "q", weight=1005)
data[33]["mst"].add_edge("B", "F", weight=236)
data[33]["mst"].add_edge("C", "n", weight=412)
data[33]["mst"].add_edge("D", "A", weight=569)
data[33]["mst"].add_edge("G", "F", weight=899)
data[33]["mst"].add_edge("a", "m", weight=655)
data[33]["mst"].add_edge("a", "s", weight=376)
data[33]["mst"].add_edge("b", "G", weight=917)
data[33]["mst"].add_edge("c", "f", weight=30)
data[33]["mst"].add_edge("c", "p", weight=152)
data[33]["mst"].add_edge("d", "t", weight=1109)
data[33]["mst"].add_edge("e", "A", weight=311)
data[33]["mst"].add_edge("g", "C", weight=296)
data[33]["mst"].add_edge("h", "b", weight=423)
data[33]["mst"].add_edge("i", "w", weight=437)
data[33]["mst"].add_edge("j", "B", weight=171)
data[33]["mst"].add_edge("l", "y", weight=264)
data[33]["mst"].add_edge("n", "F", weight=49)
data[33]["mst"].add_edge("o", "E", weight=62)
data[33]["mst"].add_edge("p", "n", weight=1)
data[33]["mst"].add_edge("r", "o", weight=313)
data[33]["mst"].add_edge("r", "v", weight=748)
data[33]["mst"].add_edge("s", "g", weight=535)
data[33]["mst"].add_edge("s", "k", weight=35)
data[33]["mst"].add_edge("t", "j", weight=332)
data[33]["mst"].add_edge("u", "k", weight=320)
data[33]["mst"].add_edge("v", "y", weight=853)
data[33]["mst"].add_edge("w", "q", weight=733)
data[33]["mst"].add_edge("x", "B", weight=528)
data[33]["mst"].add_edge("x", "y", weight=315)
data[33]["mst"].add_edge("z", "l", weight=683)
data[33]["mst"].add_edge("z", "q", weight=206)
data[33]["solutions"] = [
    { "edge": ("u", "g"), "weight": 674, "expected": [('a', 's'), ('a', 'm'), ('s', 'k'), ('s', 'g'), ('h', 'b'), ('b', 'G'), ('G', 'F'), ('r', 'o'), ('r', 'v'), ('c', 'f'), ('c', 'p'), ('u', 'k'), ('p', 'n'), ('d', 't'), ('z', 'q'), ('z', 'l'), ('t', 'j'), ('D', 'A'), ('e', 'A'), ('A', 'q'), ('x', 'y'), ('x', 'B'), ('g', 'C'), ('C', 'n'), ('o', 'E'), ('i', 'w'), ('w', 'q'), ('j', 'B'), ('B', 'F'), ('v', 'y'), ('l', 'y'), ('n', 'F')] },
    { "edge": ("a", "h"), "weight": 411, "expected": [('a', 's'), ('a', 'h'), ('a', 'm'), ('s', 'k'), ('s', 'g'), ('h', 'b'), ('G', 'F'), ('r', 'o'), ('r', 'v'), ('c', 'f'), ('c', 'p'), ('u', 'k'), ('p', 'n'), ('d', 't'), ('z', 'q'), ('z', 'l'), ('t', 'j'), ('D', 'A'), ('e', 'A'), ('A', 'q'), ('x', 'y'), ('x', 'B'), ('g', 'C'), ('C', 'n'), ('o', 'E'), ('i', 'w'), ('w', 'q'), ('j', 'B'), ('B', 'F'), ('v', 'y'), ('l', 'y'), ('n', 'F')] },
    { "edge": ("d", "t"), "weight": 1108, "expected": [('a', 's'), ('a', 'm'), ('s', 'k'), ('s', 'g'), ('h', 'b'), ('b', 'G'), ('G', 'F'), ('r', 'o'), ('r', 'v'), ('c', 'f'), ('c', 'p'), ('u', 'k'), ('p', 'n'), ('d', 't'), ('z', 'q'), ('z', 'l'), ('t', 'j'), ('D', 'A'), ('e', 'A'), ('A', 'q'), ('x', 'y'), ('x', 'B'), ('g', 'C'), ('C', 'n'), ('o', 'E'), ('i', 'w'), ('w', 'q'), ('j', 'B'), ('B', 'F'), ('v', 'y'), ('l', 'y'), ('n', 'F')] },
    { "edge": ("G", "F"), "weight": 900, "expected": [('a', 's'), ('a', 'm'), ('s', 'k'), ('s', 'g'), ('h', 'b'), ('b', 'G'), ('G', 'F'), ('r', 'o'), ('r', 'v'), ('c', 'f'), ('c', 'p'), ('u', 'k'), ('p', 'n'), ('d', 't'), ('z', 'q'), ('z', 'l'), ('t', 'j'), ('D', 'A'), ('e', 'A'), ('A', 'q'), ('x', 'y'), ('x', 'B'), ('g', 'C'), ('C', 'n'), ('o', 'E'), ('i', 'w'), ('w', 'q'), ('j', 'B'), ('B', 'F'), ('v', 'y'), ('l', 'y'), ('n', 'F')] }
]
# Graph consisting of 33 nodes
data[34]["graph"] = Graph(is_directed=False)
data[34]["graph"].add_edge("A", "x", 1601)
data[34]["graph"].add_edge("B", "d", 509)
data[34]["graph"].add_edge("B", "j", 1600)
data[34]["graph"].add_edge("E", "m", 1077)
data[34]["graph"].add_edge("F", "r", 490)
data[34]["graph"].add_edge("G", "D", 201)
data[34]["graph"].add_edge("G", "c", 1155)
data[34]["graph"].add_edge("H", "A", 480)
data[34]["graph"].add_edge("a", "G", 188)
data[34]["graph"].add_edge("a", "p", 931)
data[34]["graph"].add_edge("a", "z", 603)
data[34]["graph"].add_edge("b", "B", 698)
data[34]["graph"].add_edge("b", "g", 826)
data[34]["graph"].add_edge("b", "w", 1131)
data[34]["graph"].add_edge("c", "v", 1277)
data[34]["graph"].add_edge("d", "n", 30)
data[34]["graph"].add_edge("e", "k", 416)
data[34]["graph"].add_edge("e", "o", 1432)
data[34]["graph"].add_edge("e", "q", 1069)
data[34]["graph"].add_edge("f", "H", 950)
data[34]["graph"].add_edge("f", "h", 1196)
data[34]["graph"].add_edge("g", "k", 145)
data[34]["graph"].add_edge("g", "t", 223)
data[34]["graph"].add_edge("h", "C", 561)
data[34]["graph"].add_edge("h", "s", 909)
data[34]["graph"].add_edge("i", "E", 922)
data[34]["graph"].add_edge("j", "F", 861)
data[34]["graph"].add_edge("k", "i", 1540)
data[34]["graph"].add_edge("l", "D", 1073)
data[34]["graph"].add_edge("l", "r", 158)
data[34]["graph"].add_edge("m", "u", 196)
data[34]["graph"].add_edge("m", "y", 471)
data[34]["graph"].add_edge("n", "f", 1015)
data[34]["graph"].add_edge("n", "j", 1628)
data[34]["graph"].add_edge("o", "u", 1256)
data[34]["graph"].add_edge("p", "c", 1406)
data[34]["graph"].add_edge("p", "l", 800)
data[34]["graph"].add_edge("q", "E", 1089)
data[34]["graph"].add_edge("q", "y", 1261)
data[34]["graph"].add_edge("r", "A", 1331)
data[34]["graph"].add_edge("s", "C", 162)
data[34]["graph"].add_edge("s", "i", 819)
data[34]["graph"].add_edge("t", "C", 651)
data[34]["graph"].add_edge("t", "F", 215)
data[34]["graph"].add_edge("v", "D", 1373)
data[34]["graph"].add_edge("v", "H", 693)
data[34]["graph"].add_edge("w", "d", 464)
data[34]["graph"].add_edge("w", "x", 726)
data[34]["graph"].add_edge("y", "u", 1420)
data[34]["graph"].add_edge("z", "o", 405)
data[34]["graph"].add_edge("z", "x", 150)
data[34]["mst"] = Graph(is_directed=False)
data[34]["mst"].add_edge("B", "d", weight=509)
data[34]["mst"].add_edge("E", "m", weight=1077)
data[34]["mst"].add_edge("F", "r", weight=490)
data[34]["mst"].add_edge("G", "D", weight=201)
data[34]["mst"].add_edge("G", "c", weight=1155)
data[34]["mst"].add_edge("H", "A", weight=480)
data[34]["mst"].add_edge("a", "G", weight=188)
data[34]["mst"].add_edge("a", "z", weight=603)
data[34]["mst"].add_edge("b", "B", weight=698)
data[34]["mst"].add_edge("b", "g", weight=826)
data[34]["mst"].add_edge("d", "n", weight=30)
data[34]["mst"].add_edge("e", "k", weight=416)
data[34]["mst"].add_edge("e", "q", weight=1069)
data[34]["mst"].add_edge("f", "H", weight=950)
data[34]["mst"].add_edge("g", "k", weight=145)
data[34]["mst"].add_edge("g", "t", weight=223)
data[34]["mst"].add_edge("h", "C", weight=561)
data[34]["mst"].add_edge("i", "E", weight=922)
data[34]["mst"].add_edge("j", "F", weight=861)
data[34]["mst"].add_edge("l", "r", weight=158)
data[34]["mst"].add_edge("m", "u", weight=196)
data[34]["mst"].add_edge("m", "y", weight=471)
data[34]["mst"].add_edge("n", "f", weight=1015)
data[34]["mst"].add_edge("p", "l", weight=800)
data[34]["mst"].add_edge("s", "C", weight=162)
data[34]["mst"].add_edge("s", "i", weight=819)
data[34]["mst"].add_edge("t", "C", weight=651)
data[34]["mst"].add_edge("t", "F", weight=215)
data[34]["mst"].add_edge("v", "H", weight=693)
data[34]["mst"].add_edge("w", "d", weight=464)
data[34]["mst"].add_edge("w", "x", weight=726)
data[34]["mst"].add_edge("z", "o", weight=405)
data[34]["mst"].add_edge("z", "x", weight=150)
data[34]["solutions"] = [
    { "edge": ("q", "E"), "weight": 1090, "expected": [('a', 'G'), ('a', 'z'), ('G', 'D'), ('G', 'c'), ('z', 'x'), ('z', 'o'), ('p', 'l'), ('b', 'B'), ('b', 'g'), ('B', 'd'), ('g', 'k'), ('g', 't'), ('w', 'd'), ('w', 'x'), ('v', 'H'), ('d', 'n'), ('n', 'f'), ('e', 'k'), ('e', 'q'), ('f', 'H'), ('H', 'A'), ('h', 'C'), ('t', 'F'), ('t', 'C'), ('s', 'C'), ('s', 'i'), ('i', 'E'), ('E', 'm'), ('j', 'F'), ('F', 'r'), ('l', 'r'), ('m', 'u'), ('m', 'y')] },
    { "edge": ("v", "D"), "weight": 560, "expected": [('a', 'G'), ('a', 'z'), ('G', 'D'), ('G', 'c'), ('z', 'x'), ('z', 'o'), ('p', 'l'), ('b', 'B'), ('b', 'g'), ('B', 'd'), ('g', 'k'), ('g', 't'), ('w', 'd'), ('w', 'x'), ('v', 'D'), ('v', 'H'), ('d', 'n'), ('e', 'k'), ('e', 'q'), ('f', 'H'), ('H', 'A'), ('h', 'C'), ('t', 'F'), ('t', 'C'), ('s', 'C'), ('s', 'i'), ('i', 'E'), ('E', 'm'), ('j', 'F'), ('F', 'r'), ('l', 'r'), ('m', 'u'), ('m', 'y')] },
    { "edge": ("E", "m"), "weight": 1076, "expected": [('a', 'G'), ('a', 'z'), ('G', 'D'), ('G', 'c'), ('z', 'x'), ('z', 'o'), ('p', 'l'), ('b', 'B'), ('b', 'g'), ('B', 'd'), ('g', 'k'), ('g', 't'), ('w', 'd'), ('w', 'x'), ('v', 'H'), ('d', 'n'), ('n', 'f'), ('e', 'k'), ('e', 'q'), ('f', 'H'), ('H', 'A'), ('h', 'C'), ('t', 'F'), ('t', 'C'), ('s', 'C'), ('s', 'i'), ('i', 'E'), ('E', 'm'), ('j', 'F'), ('F', 'r'), ('l', 'r'), ('m', 'u'), ('m', 'y')] },
    { "edge": ("f", "H"), "weight": 951, "expected": [('a', 'G'), ('a', 'z'), ('G', 'D'), ('G', 'c'), ('z', 'x'), ('z', 'o'), ('p', 'l'), ('b', 'B'), ('b', 'g'), ('B', 'd'), ('g', 'k'), ('g', 't'), ('w', 'd'), ('w', 'x'), ('v', 'H'), ('d', 'n'), ('n', 'f'), ('e', 'k'), ('e', 'q'), ('f', 'H'), ('H', 'A'), ('h', 'C'), ('t', 'F'), ('t', 'C'), ('s', 'C'), ('s', 'i'), ('i', 'E'), ('E', 'm'), ('j', 'F'), ('F', 'r'), ('l', 'r'), ('m', 'u'), ('m', 'y')] }
]
# Graph consisting of 34 nodes
data[35]["graph"] = Graph(is_directed=False)
data[35]["graph"].add_edge("A", "u", 1598)
data[35]["graph"].add_edge("A", "y", 937)
data[35]["graph"].add_edge("C", "l", 1256)
data[35]["graph"].add_edge("C", "r", 376)
data[35]["graph"].add_edge("D", "B", 802)
data[35]["graph"].add_edge("D", "r", 1575)
data[35]["graph"].add_edge("F", "i", 72)
data[35]["graph"].add_edge("F", "m", 62)
data[35]["graph"].add_edge("H", "B", 1196)
data[35]["graph"].add_edge("H", "q", 1056)
data[35]["graph"].add_edge("I", "s", 1419)
data[35]["graph"].add_edge("I", "v", 722)
data[35]["graph"].add_edge("a", "D", 1120)
data[35]["graph"].add_edge("a", "j", 18)
data[35]["graph"].add_edge("a", "t", 1455)
data[35]["graph"].add_edge("b", "p", 1637)
data[35]["graph"].add_edge("b", "x", 570)
data[35]["graph"].add_edge("b", "z", 401)
data[35]["graph"].add_edge("c", "E", 388)
data[35]["graph"].add_edge("c", "H", 492)
data[35]["graph"].add_edge("c", "k", 320)
data[35]["graph"].add_edge("d", "F", 1482)
data[35]["graph"].add_edge("d", "o", 666)
data[35]["graph"].add_edge("e", "m", 1240)
data[35]["graph"].add_edge("e", "n", 1321)
data[35]["graph"].add_edge("f", "C", 643)
data[35]["graph"].add_edge("f", "I", 536)
data[35]["graph"].add_edge("f", "q", 1089)
data[35]["graph"].add_edge("g", "B", 548)
data[35]["graph"].add_edge("h", "A", 1113)
data[35]["graph"].add_edge("h", "w", 274)
data[35]["graph"].add_edge("j", "o", 1230)
data[35]["graph"].add_edge("j", "u", 1532)
data[35]["graph"].add_edge("k", "E", 1147)
data[35]["graph"].add_edge("k", "l", 581)
data[35]["graph"].add_edge("l", "y", 813)
data[35]["graph"].add_edge("m", "i", 1432)
data[35]["graph"].add_edge("n", "g", 557)
data[35]["graph"].add_edge("n", "w", 207)
data[35]["graph"].add_edge("o", "v", 944)
data[35]["graph"].add_edge("p", "d", 1)
data[35]["graph"].add_edge("p", "g", 1344)
data[35]["graph"].add_edge("s", "G", 861)
data[35]["graph"].add_edge("t", "e", 864)
data[35]["graph"].add_edge("t", "h", 916)
data[35]["graph"].add_edge("v", "s", 1005)
data[35]["graph"].add_edge("w", "G", 357)
data[35]["graph"].add_edge("x", "q", 1314)
data[35]["graph"].add_edge("x", "u", 733)
data[35]["graph"].add_edge("y", "G", 877)
data[35]["graph"].add_edge("z", "i", 1362)
data[35]["graph"].add_edge("z", "r", 796)
data[35]["mst"] = Graph(is_directed=False)
data[35]["mst"].add_edge("A", "y", weight=937)
data[35]["mst"].add_edge("C", "r", weight=376)
data[35]["mst"].add_edge("D", "B", weight=802)
data[35]["mst"].add_edge("F", "i", weight=72)
data[35]["mst"].add_edge("F", "m", weight=62)
data[35]["mst"].add_edge("H", "q", weight=1056)
data[35]["mst"].add_edge("I", "v", weight=722)
data[35]["mst"].add_edge("a", "D", weight=1120)
data[35]["mst"].add_edge("a", "j", weight=18)
data[35]["mst"].add_edge("b", "x", weight=570)
data[35]["mst"].add_edge("b", "z", weight=401)
data[35]["mst"].add_edge("c", "E", weight=388)
data[35]["mst"].add_edge("c", "H", weight=492)
data[35]["mst"].add_edge("c", "k", weight=320)
data[35]["mst"].add_edge("d", "o", weight=666)
data[35]["mst"].add_edge("e", "m", weight=1240)
data[35]["mst"].add_edge("f", "C", weight=643)
data[35]["mst"].add_edge("f", "I", weight=536)
data[35]["mst"].add_edge("g", "B", weight=548)
data[35]["mst"].add_edge("h", "w", weight=274)
data[35]["mst"].add_edge("k", "l", weight=581)
data[35]["mst"].add_edge("l", "y", weight=813)
data[35]["mst"].add_edge("n", "g", weight=557)
data[35]["mst"].add_edge("n", "w", weight=207)
data[35]["mst"].add_edge("o", "v", weight=944)
data[35]["mst"].add_edge("p", "d", weight=1)
data[35]["mst"].add_edge("s", "G", weight=861)
data[35]["mst"].add_edge("t", "e", weight=864)
data[35]["mst"].add_edge("t", "h", weight=916)
data[35]["mst"].add_edge("v", "s", weight=1005)
data[35]["mst"].add_edge("w", "G", weight=357)
data[35]["mst"].add_edge("x", "u", weight=733)
data[35]["mst"].add_edge("y", "G", weight=877)
data[35]["mst"].add_edge("z", "r", weight=796)
data[35]["solutions"] = [
    { "edge": ("I", "s"), "weight": 1420, "expected": [('a', 'j'), ('a', 'D'), ('t', 'e'), ('t', 'h'), ('D', 'B'), ('b', 'z'), ('b', 'x'), ('z', 'r'), ('x', 'u'), ('p', 'd'), ('c', 'k'), ('c', 'E'), ('c', 'H'), ('H', 'q'), ('k', 'l'), ('d', 'o'), ('F', 'm'), ('F', 'i'), ('o', 'v'), ('e', 'm'), ('n', 'w'), ('n', 'g'), ('f', 'I'), ('f', 'C'), ('I', 'v'), ('C', 'r'), ('g', 'B'), ('h', 'w'), ('A', 'y'), ('w', 'G'), ('l', 'y'), ('y', 'G'), ('v', 's'), ('s', 'G')] },
    { "edge": ("j", "u"), "weight": 863, "expected": [('a', 'j'), ('j', 'u'), ('t', 'e'), ('t', 'h'), ('D', 'B'), ('b', 'z'), ('b', 'x'), ('z', 'r'), ('x', 'u'), ('p', 'd'), ('c', 'k'), ('c', 'E'), ('c', 'H'), ('H', 'q'), ('k', 'l'), ('d', 'o'), ('F', 'm'), ('F', 'i'), ('o', 'v'), ('e', 'm'), ('n', 'w'), ('n', 'g'), ('f', 'I'), ('f', 'C'), ('I', 'v'), ('C', 'r'), ('g', 'B'), ('h', 'w'), ('A', 'y'), ('w', 'G'), ('l', 'y'), ('y', 'G'), ('v', 's'), ('s', 'G')] },
    { "edge": ("F", "m"), "weight": 61, "expected": [('a', 'j'), ('a', 'D'), ('t', 'e'), ('t', 'h'), ('D', 'B'), ('b', 'z'), ('b', 'x'), ('z', 'r'), ('x', 'u'), ('p', 'd'), ('c', 'k'), ('c', 'E'), ('c', 'H'), ('H', 'q'), ('k', 'l'), ('d', 'o'), ('F', 'm'), ('F', 'i'), ('o', 'v'), ('e', 'm'), ('n', 'w'), ('n', 'g'), ('f', 'I'), ('f', 'C'), ('I', 'v'), ('C', 'r'), ('g', 'B'), ('h', 'w'), ('A', 'y'), ('w', 'G'), ('l', 'y'), ('y', 'G'), ('v', 's'), ('s', 'G')] },
    { "edge": ("t", "e"), "weight": 865, "expected": [('a', 'j'), ('a', 'D'), ('t', 'e'), ('t', 'h'), ('D', 'B'), ('b', 'z'), ('b', 'x'), ('z', 'r'), ('x', 'u'), ('p', 'd'), ('c', 'k'), ('c', 'E'), ('c', 'H'), ('H', 'q'), ('k', 'l'), ('d', 'o'), ('F', 'm'), ('F', 'i'), ('o', 'v'), ('e', 'm'), ('n', 'w'), ('n', 'g'), ('f', 'I'), ('f', 'C'), ('I', 'v'), ('C', 'r'), ('g', 'B'), ('h', 'w'), ('A', 'y'), ('w', 'G'), ('l', 'y'), ('y', 'G'), ('v', 's'), ('s', 'G')] }
]
# Graph consisting of 35 nodes
data[36]["graph"] = Graph(is_directed=False)
data[36]["graph"].add_edge("A", "d", 1607)
data[36]["graph"].add_edge("A", "q", 911)
data[36]["graph"].add_edge("B", "m", 1137)
data[36]["graph"].add_edge("B", "x", 657)
data[36]["graph"].add_edge("D", "z", 796)
data[36]["graph"].add_edge("E", "l", 1394)
data[36]["graph"].add_edge("E", "r", 548)
data[36]["graph"].add_edge("F", "j", 72)
data[36]["graph"].add_edge("F", "r", 561)
data[36]["graph"].add_edge("H", "C", 417)
data[36]["graph"].add_edge("H", "e", 370)
data[36]["graph"].add_edge("I", "C", 694)
data[36]["graph"].add_edge("I", "G", 1412)
data[36]["graph"].add_edge("J", "C", 751)
data[36]["graph"].add_edge("J", "y", 999)
data[36]["graph"].add_edge("a", "E", 1407)
data[36]["graph"].add_edge("a", "H", 494)
data[36]["graph"].add_edge("a", "p", 830)
data[36]["graph"].add_edge("b", "F", 1408)
data[36]["graph"].add_edge("b", "k", 1086)
data[36]["graph"].add_edge("c", "A", 375)
data[36]["graph"].add_edge("c", "J", 909)
data[36]["graph"].add_edge("c", "h", 1380)
data[36]["graph"].add_edge("d", "g", 1126)
data[36]["graph"].add_edge("d", "u", 1265)
data[36]["graph"].add_edge("e", "B", 221)
data[36]["graph"].add_edge("e", "f", 1313)
data[36]["graph"].add_edge("f", "q", 1059)
data[36]["graph"].add_edge("f", "w", 894)
data[36]["graph"].add_edge("g", "o", 1324)
data[36]["graph"].add_edge("g", "x", 233)
data[36]["graph"].add_edge("h", "i", 1315)
data[36]["graph"].add_edge("h", "n", 722)
data[36]["graph"].add_edge("i", "r", 596)
data[36]["graph"].add_edge("j", "v", 930)
data[36]["graph"].add_edge("k", "s", 28)
data[36]["graph"].add_edge("k", "t", 388)
data[36]["graph"].add_edge("l", "y", 718)
data[36]["graph"].add_edge("n", "j", 1650)
data[36]["graph"].add_edge("n", "m", 287)
data[36]["graph"].add_edge("o", "D", 510)
data[36]["graph"].add_edge("o", "I", 784)
data[36]["graph"].add_edge("p", "b", 1505)
data[36]["graph"].add_edge("p", "l", 1631)
data[36]["graph"].add_edge("q", "w", 336)
data[36]["graph"].add_edge("s", "y", 38)
data[36]["graph"].add_edge("t", "z", 752)
data[36]["graph"].add_edge("u", "i", 842)
data[36]["graph"].add_edge("u", "s", 408)
data[36]["graph"].add_edge("v", "m", 1294)
data[36]["graph"].add_edge("v", "t", 323)
data[36]["graph"].add_edge("w", "D", 391)
data[36]["graph"].add_edge("x", "z", 1169)
data[36]["mst"] = Graph(is_directed=False)
data[36]["mst"].add_edge("B", "m", weight=1137)
data[36]["mst"].add_edge("B", "x", weight=657)
data[36]["mst"].add_edge("D", "z", weight=796)
data[36]["mst"].add_edge("E", "r", weight=548)
data[36]["mst"].add_edge("F", "j", weight=72)
data[36]["mst"].add_edge("F", "r", weight=561)
data[36]["mst"].add_edge("H", "C", weight=417)
data[36]["mst"].add_edge("H", "e", weight=370)
data[36]["mst"].add_edge("I", "C", weight=694)
data[36]["mst"].add_edge("I", "G", weight=1412)
data[36]["mst"].add_edge("J", "C", weight=751)
data[36]["mst"].add_edge("a", "H", weight=494)
data[36]["mst"].add_edge("a", "p", weight=830)
data[36]["mst"].add_edge("b", "k", weight=1086)
data[36]["mst"].add_edge("c", "A", weight=375)
data[36]["mst"].add_edge("c", "J", weight=909)
data[36]["mst"].add_edge("d", "g", weight=1126)
data[36]["mst"].add_edge("e", "B", weight=221)
data[36]["mst"].add_edge("f", "w", weight=894)
data[36]["mst"].add_edge("g", "x", weight=233)
data[36]["mst"].add_edge("h", "n", weight=722)
data[36]["mst"].add_edge("i", "r", weight=596)
data[36]["mst"].add_edge("k", "s", weight=28)
data[36]["mst"].add_edge("k", "t", weight=388)
data[36]["mst"].add_edge("l", "y", weight=718)
data[36]["mst"].add_edge("n", "m", weight=287)
data[36]["mst"].add_edge("o", "D", weight=510)
data[36]["mst"].add_edge("o", "I", weight=784)
data[36]["mst"].add_edge("q", "w", weight=336)
data[36]["mst"].add_edge("s", "y", weight=38)
data[36]["mst"].add_edge("t", "z", weight=752)
data[36]["mst"].add_edge("u", "i", weight=842)
data[36]["mst"].add_edge("u", "s", weight=408)
data[36]["mst"].add_edge("v", "t", weight=323)
data[36]["mst"].add_edge("w", "D", weight=391)
data[36]["solutions"] = [
    { "edge": ("h", "i"), "weight": 1316, "expected": [('a', 'H'), ('a', 'p'), ('H', 'e'), ('H', 'C'), ('E', 'r'), ('b', 'k'), ('k', 's'), ('k', 't'), ('F', 'j'), ('F', 'r'), ('c', 'A'), ('c', 'J'), ('J', 'C'), ('h', 'n'), ('d', 'g'), ('u', 's'), ('u', 'i'), ('g', 'x'), ('e', 'B'), ('B', 'x'), ('B', 'm'), ('f', 'w'), ('q', 'w'), ('w', 'D'), ('o', 'D'), ('o', 'I'), ('i', 'r'), ('n', 'm'), ('v', 't'), ('s', 'y'), ('t', 'z'), ('l', 'y'), ('I', 'C'), ('I', 'G'), ('D', 'z')] },
    { "edge": ("p", "l"), "weight": 721, "expected": [('a', 'H'), ('H', 'e'), ('H', 'C'), ('E', 'r'), ('p', 'l'), ('b', 'k'), ('k', 's'), ('k', 't'), ('F', 'j'), ('F', 'r'), ('c', 'A'), ('c', 'J'), ('J', 'C'), ('h', 'n'), ('d', 'g'), ('u', 's'), ('u', 'i'), ('g', 'x'), ('e', 'B'), ('B', 'x'), ('B', 'm'), ('f', 'w'), ('q', 'w'), ('w', 'D'), ('o', 'D'), ('o', 'I'), ('i', 'r'), ('n', 'm'), ('v', 't'), ('s', 'y'), ('t', 'z'), ('l', 'y'), ('I', 'C'), ('I', 'G'), ('D', 'z')] },
    { "edge": ("t", "z"), "weight": 750, "expected": [('a', 'H'), ('a', 'p'), ('H', 'e'), ('H', 'C'), ('E', 'r'), ('b', 'k'), ('k', 's'), ('k', 't'), ('F', 'j'), ('F', 'r'), ('c', 'A'), ('c', 'J'), ('J', 'C'), ('h', 'n'), ('d', 'g'), ('u', 's'), ('u', 'i'), ('g', 'x'), ('e', 'B'), ('B', 'x'), ('B', 'm'), ('f', 'w'), ('q', 'w'), ('w', 'D'), ('o', 'D'), ('o', 'I'), ('i', 'r'), ('n', 'm'), ('v', 't'), ('s', 'y'), ('t', 'z'), ('l', 'y'), ('I', 'C'), ('I', 'G'), ('D', 'z')] },
    { "edge": ("J", "C"), "weight": 753, "expected": [('a', 'H'), ('a', 'p'), ('H', 'e'), ('H', 'C'), ('E', 'r'), ('b', 'k'), ('k', 's'), ('k', 't'), ('F', 'j'), ('F', 'r'), ('c', 'A'), ('c', 'J'), ('J', 'C'), ('h', 'n'), ('d', 'g'), ('u', 's'), ('u', 'i'), ('g', 'x'), ('e', 'B'), ('B', 'x'), ('B', 'm'), ('f', 'w'), ('q', 'w'), ('w', 'D'), ('o', 'D'), ('o', 'I'), ('i', 'r'), ('n', 'm'), ('v', 't'), ('s', 'y'), ('t', 'z'), ('l', 'y'), ('I', 'C'), ('I', 'G'), ('D', 'z')] }
]
# Graph consisting of 36 nodes
data[37]["graph"] = Graph(is_directed=False)
data[37]["graph"].add_edge("A", "w", 678)
data[37]["graph"].add_edge("A", "y", 1234)
data[37]["graph"].add_edge("B", "J", 891)
data[37]["graph"].add_edge("C", "d", 824)
data[37]["graph"].add_edge("C", "u", 364)
data[37]["graph"].add_edge("E", "v", 1448)
data[37]["graph"].add_edge("E", "x", 699)
data[37]["graph"].add_edge("F", "l", 1131)
data[37]["graph"].add_edge("F", "p", 797)
data[37]["graph"].add_edge("G", "f", 1110)
data[37]["graph"].add_edge("G", "i", 881)
data[37]["graph"].add_edge("H", "i", 908)
data[37]["graph"].add_edge("H", "v", 1606)
data[37]["graph"].add_edge("I", "z", 1248)
data[37]["graph"].add_edge("K", "j", 1361)
data[37]["graph"].add_edge("a", "F", 86)
data[37]["graph"].add_edge("a", "G", 1334)
data[37]["graph"].add_edge("a", "e", 1372)
data[37]["graph"].add_edge("b", "C", 1586)
data[37]["graph"].add_edge("b", "n", 70)
data[37]["graph"].add_edge("b", "o", 1079)
data[37]["graph"].add_edge("c", "k", 854)
data[37]["graph"].add_edge("c", "q", 611)
data[37]["graph"].add_edge("d", "I", 1222)
data[37]["graph"].add_edge("d", "r", 1195)
data[37]["graph"].add_edge("e", "A", 300)
data[37]["graph"].add_edge("e", "H", 236)
data[37]["graph"].add_edge("f", "h", 4)
data[37]["graph"].add_edge("f", "z", 1575)
data[37]["graph"].add_edge("g", "K", 1300)
data[37]["graph"].add_edge("g", "p", 1659)
data[37]["graph"].add_edge("h", "K", 204)
data[37]["graph"].add_edge("h", "m", 2)
data[37]["graph"].add_edge("i", "s", 1371)
data[37]["graph"].add_edge("l", "B", 646)
data[37]["graph"].add_edge("l", "D", 7)
data[37]["graph"].add_edge("m", "J", 374)
data[37]["graph"].add_edge("m", "u", 629)
data[37]["graph"].add_edge("n", "c", 127)
data[37]["graph"].add_edge("n", "j", 1299)
data[37]["graph"].add_edge("o", "k", 1677)
data[37]["graph"].add_edge("o", "s", 768)
data[37]["graph"].add_edge("p", "J", 832)
data[37]["graph"].add_edge("q", "j", 656)
data[37]["graph"].add_edge("q", "k", 1352)
data[37]["graph"].add_edge("r", "D", 515)
data[37]["graph"].add_edge("r", "g", 1308)
data[37]["graph"].add_edge("s", "D", 531)
data[37]["graph"].add_edge("t", "E", 181)
data[37]["graph"].add_edge("t", "x", 48)
data[37]["graph"].add_edge("t", "y", 524)
data[37]["graph"].add_edge("u", "w", 157)
data[37]["graph"].add_edge("w", "v", 1357)
data[37]["graph"].add_edge("y", "x", 645)
data[37]["graph"].add_edge("z", "B", 1418)
data[37]["mst"] = Graph(is_directed=False)
data[37]["mst"].add_edge("A", "w", weight=678)
data[37]["mst"].add_edge("A", "y", weight=1234)
data[37]["mst"].add_edge("B", "J", weight=891)
data[37]["mst"].add_edge("C", "d", weight=824)
data[37]["mst"].add_edge("C", "u", weight=364)
data[37]["mst"].add_edge("F", "p", weight=797)
data[37]["mst"].add_edge("G", "i", weight=881)
data[37]["mst"].add_edge("H", "i", weight=908)
data[37]["mst"].add_edge("I", "z", weight=1248)
data[37]["mst"].add_edge("a", "F", weight=86)
data[37]["mst"].add_edge("b", "n", weight=70)
data[37]["mst"].add_edge("b", "o", weight=1079)
data[37]["mst"].add_edge("c", "k", weight=854)
data[37]["mst"].add_edge("c", "q", weight=611)
data[37]["mst"].add_edge("d", "I", weight=1222)
data[37]["mst"].add_edge("e", "A", weight=300)
data[37]["mst"].add_edge("e", "H", weight=236)
data[37]["mst"].add_edge("f", "h", weight=4)
data[37]["mst"].add_edge("g", "K", weight=1300)
data[37]["mst"].add_edge("h", "K", weight=204)
data[37]["mst"].add_edge("h", "m", weight=2)
data[37]["mst"].add_edge("l", "B", weight=646)
data[37]["mst"].add_edge("l", "D", weight=7)
data[37]["mst"].add_edge("m", "J", weight=374)
data[37]["mst"].add_edge("m", "u", weight=629)
data[37]["mst"].add_edge("n", "c", weight=127)
data[37]["mst"].add_edge("o", "s", weight=768)
data[37]["mst"].add_edge("p", "J", weight=832)
data[37]["mst"].add_edge("q", "j", weight=656)
data[37]["mst"].add_edge("r", "D", weight=515)
data[37]["mst"].add_edge("s", "D", weight=531)
data[37]["mst"].add_edge("t", "E", weight=181)
data[37]["mst"].add_edge("t", "x", weight=48)
data[37]["mst"].add_edge("t", "y", weight=524)
data[37]["mst"].add_edge("u", "w", weight=157)
data[37]["mst"].add_edge("w", "v", weight=1357)
data[37]["solutions"] = [
    { "edge": ("H", "v"), "weight": 1607, "expected": [('a', 'F'), ('G', 'i'), ('e', 'H'), ('e', 'A'), ('F', 'p'), ('b', 'n'), ('b', 'o'), ('C', 'u'), ('C', 'd'), ('n', 'c'), ('o', 's'), ('c', 'q'), ('c', 'k'), ('q', 'j'), ('d', 'I'), ('r', 'D'), ('I', 'z'), ('H', 'i'), ('A', 'w'), ('A', 'y'), ('f', 'h'), ('h', 'm'), ('h', 'K'), ('g', 'K'), ('p', 'J'), ('m', 'J'), ('m', 'u'), ('s', 'D'), ('l', 'D'), ('l', 'B'), ('B', 'J'), ('u', 'w'), ('t', 'x'), ('t', 'E'), ('t', 'y'), ('w', 'v')] },
    { "edge": ("E", "v"), "weight": 890, "expected": [('a', 'F'), ('G', 'i'), ('e', 'H'), ('e', 'A'), ('F', 'p'), ('b', 'n'), ('b', 'o'), ('C', 'u'), ('C', 'd'), ('n', 'c'), ('o', 's'), ('c', 'q'), ('c', 'k'), ('q', 'j'), ('d', 'I'), ('r', 'D'), ('I', 'z'), ('H', 'i'), ('A', 'w'), ('A', 'y'), ('f', 'h'), ('h', 'm'), ('h', 'K'), ('g', 'K'), ('p', 'J'), ('m', 'J'), ('m', 'u'), ('s', 'D'), ('l', 'D'), ('l', 'B'), ('B', 'J'), ('u', 'w'), ('t', 'x'), ('t', 'E'), ('t', 'y'), ('E', 'v')] },
    { "edge": ("C", "u"), "weight": 363, "expected": [('a', 'F'), ('G', 'i'), ('e', 'H'), ('e', 'A'), ('F', 'p'), ('b', 'n'), ('b', 'o'), ('C', 'u'), ('C', 'd'), ('n', 'c'), ('o', 's'), ('c', 'q'), ('c', 'k'), ('q', 'j'), ('d', 'I'), ('r', 'D'), ('I', 'z'), ('H', 'i'), ('A', 'w'), ('A', 'y'), ('f', 'h'), ('h', 'm'), ('h', 'K'), ('g', 'K'), ('p', 'J'), ('m', 'J'), ('m', 'u'), ('s', 'D'), ('l', 'D'), ('l', 'B'), ('B', 'J'), ('u', 'w'), ('t', 'x'), ('t', 'E'), ('t', 'y'), ('w', 'v')] },
    { "edge": ("t", "E"), "weight": 182, "expected": [('a', 'F'), ('G', 'i'), ('e', 'H'), ('e', 'A'), ('F', 'p'), ('b', 'n'), ('b', 'o'), ('C', 'u'), ('C', 'd'), ('n', 'c'), ('o', 's'), ('c', 'q'), ('c', 'k'), ('q', 'j'), ('d', 'I'), ('r', 'D'), ('I', 'z'), ('H', 'i'), ('A', 'w'), ('A', 'y'), ('f', 'h'), ('h', 'm'), ('h', 'K'), ('g', 'K'), ('p', 'J'), ('m', 'J'), ('m', 'u'), ('s', 'D'), ('l', 'D'), ('l', 'B'), ('B', 'J'), ('u', 'w'), ('t', 'x'), ('t', 'E'), ('t', 'y'), ('w', 'v')] }
]
# Graph consisting of 37 nodes
data[38]["graph"] = Graph(is_directed=False)
data[38]["graph"].add_edge("A", "H", 359)
data[38]["graph"].add_edge("A", "L", 1065)
data[38]["graph"].add_edge("B", "F", 1225)
data[38]["graph"].add_edge("C", "r", 385)
data[38]["graph"].add_edge("C", "z", 17)
data[38]["graph"].add_edge("D", "h", 285)
data[38]["graph"].add_edge("D", "y", 112)
data[38]["graph"].add_edge("E", "n", 857)
data[38]["graph"].add_edge("E", "u", 491)
data[38]["graph"].add_edge("G", "F", 67)
data[38]["graph"].add_edge("G", "H", 846)
data[38]["graph"].add_edge("H", "F", 972)
data[38]["graph"].add_edge("I", "y", 334)
data[38]["graph"].add_edge("J", "y", 1165)
data[38]["graph"].add_edge("J", "z", 1031)
data[38]["graph"].add_edge("K", "B", 1277)
data[38]["graph"].add_edge("K", "q", 1567)
data[38]["graph"].add_edge("a", "m", 110)
data[38]["graph"].add_edge("a", "w", 546)
data[38]["graph"].add_edge("a", "x", 1045)
data[38]["graph"].add_edge("b", "D", 353)
data[38]["graph"].add_edge("b", "E", 1284)
data[38]["graph"].add_edge("b", "s", 1482)
data[38]["graph"].add_edge("c", "f", 657)
data[38]["graph"].add_edge("c", "k", 150)
data[38]["graph"].add_edge("c", "u", 1663)
data[38]["graph"].add_edge("d", "K", 655)
data[38]["graph"].add_edge("d", "l", 596)
data[38]["graph"].add_edge("e", "G", 805)
data[38]["graph"].add_edge("f", "d", 938)
data[38]["graph"].add_edge("f", "h", 335)
data[38]["graph"].add_edge("g", "p", 239)
data[38]["graph"].add_edge("i", "C", 616)
data[38]["graph"].add_edge("i", "v", 1653)
data[38]["graph"].add_edge("j", "n", 731)
data[38]["graph"].add_edge("j", "t", 1220)
data[38]["graph"].add_edge("k", "i", 821)
data[38]["graph"].add_edge("k", "t", 678)
data[38]["graph"].add_edge("l", "e", 1531)
data[38]["graph"].add_edge("l", "j", 1128)
data[38]["graph"].add_edge("m", "e", 1499)
data[38]["graph"].add_edge("m", "s", 123)
data[38]["graph"].add_edge("n", "J", 1660)
data[38]["graph"].add_edge("o", "A", 249)
data[38]["graph"].add_edge("o", "q", 768)
data[38]["graph"].add_edge("p", "B", 1417)
data[38]["graph"].add_edge("r", "I", 1662)
data[38]["graph"].add_edge("r", "z", 1396)
data[38]["graph"].add_edge("s", "p", 708)
data[38]["graph"].add_edge("t", "q", 50)
data[38]["graph"].add_edge("u", "g", 1548)
data[38]["graph"].add_edge("v", "o", 319)
data[38]["graph"].add_edge("w", "g", 1068)
data[38]["graph"].add_edge("w", "v", 1143)
data[38]["graph"].add_edge("x", "I", 1329)
data[38]["graph"].add_edge("x", "h", 990)
data[38]["mst"] = Graph(is_directed=False)
data[38]["mst"].add_edge("A", "H", weight=359)
data[38]["mst"].add_edge("A", "L", weight=1065)
data[38]["mst"].add_edge("B", "F", weight=1225)
data[38]["mst"].add_edge("C", "r", weight=385)
data[38]["mst"].add_edge("C", "z", weight=17)
data[38]["mst"].add_edge("D", "h", weight=285)
data[38]["mst"].add_edge("D", "y", weight=112)
data[38]["mst"].add_edge("E", "n", weight=857)
data[38]["mst"].add_edge("E", "u", weight=491)
data[38]["mst"].add_edge("G", "F", weight=67)
data[38]["mst"].add_edge("G", "H", weight=846)
data[38]["mst"].add_edge("I", "y", weight=334)
data[38]["mst"].add_edge("J", "z", weight=1031)
data[38]["mst"].add_edge("a", "m", weight=110)
data[38]["mst"].add_edge("a", "w", weight=546)
data[38]["mst"].add_edge("a", "x", weight=1045)
data[38]["mst"].add_edge("b", "D", weight=353)
data[38]["mst"].add_edge("c", "f", weight=657)
data[38]["mst"].add_edge("c", "k", weight=150)
data[38]["mst"].add_edge("d", "K", weight=655)
data[38]["mst"].add_edge("d", "l", weight=596)
data[38]["mst"].add_edge("e", "G", weight=805)
data[38]["mst"].add_edge("f", "d", weight=938)
data[38]["mst"].add_edge("f", "h", weight=335)
data[38]["mst"].add_edge("g", "p", weight=239)
data[38]["mst"].add_edge("i", "C", weight=616)
data[38]["mst"].add_edge("j", "n", weight=731)
data[38]["mst"].add_edge("k", "i", weight=821)
data[38]["mst"].add_edge("k", "t", weight=678)
data[38]["mst"].add_edge("l", "j", weight=1128)
data[38]["mst"].add_edge("m", "s", weight=123)
data[38]["mst"].add_edge("o", "A", weight=249)
data[38]["mst"].add_edge("o", "q", weight=768)
data[38]["mst"].add_edge("s", "p", weight=708)
data[38]["mst"].add_edge("t", "q", weight=50)
data[38]["mst"].add_edge("v", "o", weight=319)
data[38]["mst"].add_edge("x", "h", weight=990)
data[38]["solutions"] = [
    { "edge": ("b", "s"), "weight": 1483, "expected": [('a', 'm'), ('a', 'w'), ('a', 'x'), ('m', 's'), ('x', 'h'), ('b', 'D'), ('s', 'p'), ('D', 'y'), ('D', 'h'), ('E', 'u'), ('E', 'n'), ('c', 'k'), ('c', 'f'), ('k', 't'), ('k', 'i'), ('f', 'h'), ('f', 'd'), ('d', 'l'), ('d', 'K'), ('l', 'j'), ('e', 'G'), ('G', 'F'), ('G', 'H'), ('g', 'p'), ('i', 'C'), ('C', 'z'), ('C', 'r'), ('v', 'o'), ('j', 'n'), ('t', 'q'), ('J', 'z'), ('o', 'A'), ('o', 'q'), ('A', 'H'), ('A', 'L'), ('B', 'F'), ('I', 'y')] },
    { "edge": ("n", "J"), "weight": 545, "expected": [('a', 'm'), ('a', 'w'), ('a', 'x'), ('m', 's'), ('x', 'h'), ('b', 'D'), ('s', 'p'), ('D', 'y'), ('D', 'h'), ('E', 'u'), ('E', 'n'), ('c', 'k'), ('c', 'f'), ('k', 't'), ('k', 'i'), ('f', 'h'), ('f', 'd'), ('d', 'l'), ('d', 'K'), ('e', 'G'), ('G', 'F'), ('G', 'H'), ('g', 'p'), ('i', 'C'), ('C', 'z'), ('C', 'r'), ('v', 'o'), ('j', 'n'), ('t', 'q'), ('n', 'J'), ('J', 'z'), ('o', 'A'), ('o', 'q'), ('A', 'H'), ('A', 'L'), ('B', 'F'), ('I', 'y')] },
    { "edge": ("t", "q"), "weight": 49, "expected": [('a', 'm'), ('a', 'w'), ('a', 'x'), ('m', 's'), ('x', 'h'), ('b', 'D'), ('s', 'p'), ('D', 'y'), ('D', 'h'), ('E', 'u'), ('E', 'n'), ('c', 'k'), ('c', 'f'), ('k', 't'), ('k', 'i'), ('f', 'h'), ('f', 'd'), ('d', 'l'), ('d', 'K'), ('l', 'j'), ('e', 'G'), ('G', 'F'), ('G', 'H'), ('g', 'p'), ('i', 'C'), ('C', 'z'), ('C', 'r'), ('v', 'o'), ('j', 'n'), ('t', 'q'), ('J', 'z'), ('o', 'A'), ('o', 'q'), ('A', 'H'), ('A', 'L'), ('B', 'F'), ('I', 'y')] },
    { "edge": ("E", "u"), "weight": 492, "expected": [('a', 'm'), ('a', 'w'), ('a', 'x'), ('m', 's'), ('x', 'h'), ('b', 'D'), ('s', 'p'), ('D', 'y'), ('D', 'h'), ('E', 'u'), ('E', 'n'), ('c', 'k'), ('c', 'f'), ('k', 't'), ('k', 'i'), ('f', 'h'), ('f', 'd'), ('d', 'l'), ('d', 'K'), ('l', 'j'), ('e', 'G'), ('G', 'F'), ('G', 'H'), ('g', 'p'), ('i', 'C'), ('C', 'z'), ('C', 'r'), ('v', 'o'), ('j', 'n'), ('t', 'q'), ('J', 'z'), ('o', 'A'), ('o', 'q'), ('A', 'H'), ('A', 'L'), ('B', 'F'), ('I', 'y')] }
]
# Graph consisting of 38 nodes
data[39]["graph"] = Graph(is_directed=False)
data[39]["graph"].add_edge("A", "K", 908)
data[39]["graph"].add_edge("B", "r", 617)
data[39]["graph"].add_edge("B", "u", 373)
data[39]["graph"].add_edge("C", "s", 480)
data[39]["graph"].add_edge("C", "v", 692)
data[39]["graph"].add_edge("D", "v", 1334)
data[39]["graph"].add_edge("E", "A", 1475)
data[39]["graph"].add_edge("H", "j", 922)
data[39]["graph"].add_edge("H", "u", 1116)
data[39]["graph"].add_edge("I", "d", 686)
data[39]["graph"].add_edge("I", "j", 224)
data[39]["graph"].add_edge("J", "f", 698)
data[39]["graph"].add_edge("J", "g", 1121)
data[39]["graph"].add_edge("L", "G", 1531)
data[39]["graph"].add_edge("L", "y", 664)
data[39]["graph"].add_edge("M", "G", 1452)
data[39]["graph"].add_edge("a", "b", 979)
data[39]["graph"].add_edge("a", "x", 1588)
data[39]["graph"].add_edge("a", "z", 881)
data[39]["graph"].add_edge("b", "p", 1312)
data[39]["graph"].add_edge("b", "q", 1026)
data[39]["graph"].add_edge("c", "I", 1587)
data[39]["graph"].add_edge("c", "d", 1046)
data[39]["graph"].add_edge("e", "C", 737)
data[39]["graph"].add_edge("e", "D", 858)
data[39]["graph"].add_edge("e", "J", 1161)
data[39]["graph"].add_edge("f", "g", 1615)
data[39]["graph"].add_edge("f", "n", 502)
data[39]["graph"].add_edge("g", "H", 1019)
data[39]["graph"].add_edge("h", "i", 626)
data[39]["graph"].add_edge("h", "l", 909)
data[39]["graph"].add_edge("h", "w", 1180)
data[39]["graph"].add_edge("i", "L", 1189)
data[39]["graph"].add_edge("i", "k", 74)
data[39]["graph"].add_edge("j", "m", 586)
data[39]["graph"].add_edge("k", "E", 483)
data[39]["graph"].add_edge("k", "t", 421)
data[39]["graph"].add_edge("l", "E", 426)
data[39]["graph"].add_edge("l", "s", 966)
data[39]["graph"].add_edge("m", "F", 1484)
data[39]["graph"].add_edge("m", "o", 745)
data[39]["graph"].add_edge("o", "A", 356)
data[39]["graph"].add_edge("o", "B", 340)
data[39]["graph"].add_edge("p", "d", 38)
data[39]["graph"].add_edge("p", "n", 1187)
data[39]["graph"].add_edge("q", "c", 1294)
data[39]["graph"].add_edge("q", "n", 320)
data[39]["graph"].add_edge("r", "K", 519)
data[39]["graph"].add_edge("s", "M", 984)
data[39]["graph"].add_edge("t", "u", 750)
data[39]["graph"].add_edge("t", "y", 605)
data[39]["graph"].add_edge("v", "G", 198)
data[39]["graph"].add_edge("w", "M", 757)
data[39]["graph"].add_edge("w", "r", 1500)
data[39]["graph"].add_edge("x", "D", 2)
data[39]["graph"].add_edge("x", "F", 170)
data[39]["graph"].add_edge("z", "F", 1095)
data[39]["graph"].add_edge("z", "y", 319)
data[39]["mst"] = Graph(is_directed=False)
data[39]["mst"].add_edge("B", "r", weight=617)
data[39]["mst"].add_edge("B", "u", weight=373)
data[39]["mst"].add_edge("C", "s", weight=480)
data[39]["mst"].add_edge("C", "v", weight=692)
data[39]["mst"].add_edge("H", "j", weight=922)
data[39]["mst"].add_edge("I", "d", weight=686)
data[39]["mst"].add_edge("I", "j", weight=224)
data[39]["mst"].add_edge("J", "f", weight=698)
data[39]["mst"].add_edge("L", "y", weight=664)
data[39]["mst"].add_edge("a", "b", weight=979)
data[39]["mst"].add_edge("a", "z", weight=881)
data[39]["mst"].add_edge("b", "q", weight=1026)
data[39]["mst"].add_edge("c", "d", weight=1046)
data[39]["mst"].add_edge("e", "C", weight=737)
data[39]["mst"].add_edge("e", "D", weight=858)
data[39]["mst"].add_edge("f", "n", weight=502)
data[39]["mst"].add_edge("g", "H", weight=1019)
data[39]["mst"].add_edge("h", "i", weight=626)
data[39]["mst"].add_edge("i", "k", weight=74)
data[39]["mst"].add_edge("j", "m", weight=586)
data[39]["mst"].add_edge("k", "E", weight=483)
data[39]["mst"].add_edge("k", "t", weight=421)
data[39]["mst"].add_edge("l", "E", weight=426)
data[39]["mst"].add_edge("l", "s", weight=966)
data[39]["mst"].add_edge("m", "o", weight=745)
data[39]["mst"].add_edge("o", "A", weight=356)
data[39]["mst"].add_edge("o", "B", weight=340)
data[39]["mst"].add_edge("p", "d", weight=38)
data[39]["mst"].add_edge("q", "n", weight=320)
data[39]["mst"].add_edge("r", "K", weight=519)
data[39]["mst"].add_edge("s", "M", weight=984)
data[39]["mst"].add_edge("t", "u", weight=750)
data[39]["mst"].add_edge("t", "y", weight=605)
data[39]["mst"].add_edge("v", "G", weight=198)
data[39]["mst"].add_edge("w", "M", weight=757)
data[39]["mst"].add_edge("x", "D", weight=2)
data[39]["mst"].add_edge("x", "F", weight=170)
data[39]["mst"].add_edge("z", "y", weight=319)
data[39]["solutions"] = [
    { "edge": ("h", "l"), "weight": 910, "expected": [('a', 'z'), ('a', 'b'), ('b', 'q'), ('z', 'y'), ('x', 'D'), ('x', 'F'), ('q', 'n'), ('p', 'd'), ('c', 'd'), ('I', 'j'), ('I', 'd'), ('e', 'C'), ('e', 'D'), ('J', 'f'), ('C', 's'), ('C', 'v'), ('f', 'n'), ('g', 'H'), ('H', 'j'), ('h', 'i'), ('i', 'k'), ('l', 'E'), ('l', 's'), ('w', 'M'), ('k', 't'), ('k', 'E'), ('L', 'y'), ('j', 'm'), ('m', 'o'), ('t', 'y'), ('t', 'u'), ('s', 'M'), ('o', 'B'), ('o', 'A'), ('B', 'u'), ('B', 'r'), ('r', 'K'), ('v', 'G')] },
    { "edge": ("b", "p"), "weight": 756, "expected": [('a', 'z'), ('b', 'p'), ('b', 'q'), ('z', 'y'), ('x', 'D'), ('x', 'F'), ('q', 'n'), ('p', 'd'), ('c', 'd'), ('I', 'j'), ('I', 'd'), ('e', 'C'), ('e', 'D'), ('J', 'f'), ('C', 's'), ('C', 'v'), ('f', 'n'), ('g', 'H'), ('H', 'j'), ('h', 'i'), ('i', 'k'), ('l', 'E'), ('l', 's'), ('w', 'M'), ('k', 't'), ('k', 'E'), ('L', 'y'), ('j', 'm'), ('m', 'o'), ('t', 'y'), ('t', 'u'), ('s', 'M'), ('o', 'B'), ('o', 'A'), ('B', 'u'), ('B', 'r'), ('r', 'K'), ('v', 'G')] },
    { "edge": ("e", "C"), "weight": 736, "expected": [('a', 'z'), ('a', 'b'), ('b', 'q'), ('z', 'y'), ('x', 'D'), ('x', 'F'), ('q', 'n'), ('p', 'd'), ('c', 'd'), ('I', 'j'), ('I', 'd'), ('e', 'C'), ('e', 'D'), ('J', 'f'), ('C', 's'), ('C', 'v'), ('f', 'n'), ('g', 'H'), ('H', 'j'), ('h', 'i'), ('i', 'k'), ('l', 'E'), ('l', 's'), ('w', 'M'), ('k', 't'), ('k', 'E'), ('L', 'y'), ('j', 'm'), ('m', 'o'), ('t', 'y'), ('t', 'u'), ('s', 'M'), ('o', 'B'), ('o', 'A'), ('B', 'u'), ('B', 'r'), ('r', 'K'), ('v', 'G')] },
    { "edge": ("a", "b"), "weight": 980, "expected": [('a', 'z'), ('a', 'b'), ('b', 'q'), ('z', 'y'), ('x', 'D'), ('x', 'F'), ('q', 'n'), ('p', 'd'), ('c', 'd'), ('I', 'j'), ('I', 'd'), ('e', 'C'), ('e', 'D'), ('J', 'f'), ('C', 's'), ('C', 'v'), ('f', 'n'), ('g', 'H'), ('H', 'j'), ('h', 'i'), ('i', 'k'), ('l', 'E'), ('l', 's'), ('w', 'M'), ('k', 't'), ('k', 'E'), ('L', 'y'), ('j', 'm'), ('m', 'o'), ('t', 'y'), ('t', 'u'), ('s', 'M'), ('o', 'B'), ('o', 'A'), ('B', 'u'), ('B', 'r'), ('r', 'K'), ('v', 'G')] }
]
# Graph consisting of 39 nodes
data[40]["graph"] = Graph(is_directed=False)
data[40]["graph"].add_edge("A", "r", 1294)
data[40]["graph"].add_edge("A", "u", 1010)
data[40]["graph"].add_edge("C", "J", 1654)
data[40]["graph"].add_edge("C", "y", 1339)
data[40]["graph"].add_edge("E", "D", 1397)
data[40]["graph"].add_edge("F", "D", 1497)
data[40]["graph"].add_edge("F", "t", 1236)
data[40]["graph"].add_edge("G", "p", 727)
data[40]["graph"].add_edge("G", "t", 714)
data[40]["graph"].add_edge("H", "q", 832)
data[40]["graph"].add_edge("I", "y", 776)
data[40]["graph"].add_edge("K", "h", 483)
data[40]["graph"].add_edge("K", "x", 1187)
data[40]["graph"].add_edge("L", "p", 320)
data[40]["graph"].add_edge("M", "I", 1085)
data[40]["graph"].add_edge("M", "q", 1407)
data[40]["graph"].add_edge("N", "D", 779)
data[40]["graph"].add_edge("N", "E", 663)
data[40]["graph"].add_edge("a", "K", 156)
data[40]["graph"].add_edge("a", "e", 1509)
data[40]["graph"].add_edge("a", "g", 177)
data[40]["graph"].add_edge("b", "A", 8)
data[40]["graph"].add_edge("b", "j", 355)
data[40]["graph"].add_edge("b", "z", 16)
data[40]["graph"].add_edge("c", "o", 998)
data[40]["graph"].add_edge("c", "w", 4)
data[40]["graph"].add_edge("d", "C", 1680)
data[40]["graph"].add_edge("d", "m", 807)
data[40]["graph"].add_edge("e", "d", 1188)
data[40]["graph"].add_edge("e", "l", 100)
data[40]["graph"].add_edge("f", "v", 477)
data[40]["graph"].add_edge("g", "J", 1468)
data[40]["graph"].add_edge("g", "c", 612)
data[40]["graph"].add_edge("h", "G", 1107)
data[40]["graph"].add_edge("h", "r", 1425)
data[40]["graph"].add_edge("i", "M", 1595)
data[40]["graph"].add_edge("i", "s", 207)
data[40]["graph"].add_edge("i", "u", 648)
data[40]["graph"].add_edge("j", "I", 1)
data[40]["graph"].add_edge("j", "x", 1393)
data[40]["graph"].add_edge("k", "B", 889)
data[40]["graph"].add_edge("k", "L", 1298)
data[40]["graph"].add_edge("k", "n", 1182)
data[40]["graph"].add_edge("l", "f", 319)
data[40]["graph"].add_edge("m", "L", 1435)
data[40]["graph"].add_edge("m", "y", 52)
data[40]["graph"].add_edge("n", "F", 289)
data[40]["graph"].add_edge("n", "N", 811)
data[40]["graph"].add_edge("o", "E", 241)
data[40]["graph"].add_edge("o", "H", 1559)
data[40]["graph"].add_edge("q", "t", 261)
data[40]["graph"].add_edge("r", "s", 360)
data[40]["graph"].add_edge("s", "B", 1572)
data[40]["graph"].add_edge("v", "B", 954)
data[40]["graph"].add_edge("v", "u", 632)
data[40]["graph"].add_edge("w", "J", 1123)
data[40]["graph"].add_edge("w", "l", 934)
data[40]["graph"].add_edge("x", "H", 862)
data[40]["graph"].add_edge("z", "f", 777)
data[40]["graph"].add_edge("z", "p", 1605)
data[40]["mst"] = Graph(is_directed=False)
data[40]["mst"].add_edge("C", "y", weight=1339)
data[40]["mst"].add_edge("G", "p", weight=727)
data[40]["mst"].add_edge("G", "t", weight=714)
data[40]["mst"].add_edge("H", "q", weight=832)
data[40]["mst"].add_edge("I", "y", weight=776)
data[40]["mst"].add_edge("K", "h", weight=483)
data[40]["mst"].add_edge("L", "p", weight=320)
data[40]["mst"].add_edge("M", "I", weight=1085)
data[40]["mst"].add_edge("N", "D", weight=779)
data[40]["mst"].add_edge("N", "E", weight=663)
data[40]["mst"].add_edge("a", "K", weight=156)
data[40]["mst"].add_edge("a", "g", weight=177)
data[40]["mst"].add_edge("b", "A", weight=8)
data[40]["mst"].add_edge("b", "j", weight=355)
data[40]["mst"].add_edge("b", "z", weight=16)
data[40]["mst"].add_edge("c", "o", weight=998)
data[40]["mst"].add_edge("c", "w", weight=4)
data[40]["mst"].add_edge("d", "m", weight=807)
data[40]["mst"].add_edge("e", "l", weight=100)
data[40]["mst"].add_edge("f", "v", weight=477)
data[40]["mst"].add_edge("g", "c", weight=612)
data[40]["mst"].add_edge("h", "G", weight=1107)
data[40]["mst"].add_edge("i", "s", weight=207)
data[40]["mst"].add_edge("i", "u", weight=648)
data[40]["mst"].add_edge("j", "I", weight=1)
data[40]["mst"].add_edge("k", "B", weight=889)
data[40]["mst"].add_edge("l", "f", weight=319)
data[40]["mst"].add_edge("m", "y", weight=52)
data[40]["mst"].add_edge("n", "F", weight=289)
data[40]["mst"].add_edge("n", "N", weight=811)
data[40]["mst"].add_edge("o", "E", weight=241)
data[40]["mst"].add_edge("q", "t", weight=261)
data[40]["mst"].add_edge("r", "s", weight=360)
data[40]["mst"].add_edge("v", "B", weight=954)
data[40]["mst"].add_edge("v", "u", weight=632)
data[40]["mst"].add_edge("w", "J", weight=1123)
data[40]["mst"].add_edge("w", "l", weight=934)
data[40]["mst"].add_edge("x", "H", weight=862)
data[40]["mst"].add_edge("z", "f", weight=777)
data[40]["solutions"] = [
    { "edge": ("E", "D"), "weight": 1398, "expected": [('a', 'K'), ('a', 'g'), ('e', 'l'), ('g', 'c'), ('K', 'h'), ('b', 'A'), ('b', 'z'), ('b', 'j'), ('j', 'I'), ('z', 'f'), ('c', 'w'), ('c', 'o'), ('w', 'l'), ('w', 'J'), ('o', 'E'), ('d', 'm'), ('C', 'y'), ('m', 'y'), ('l', 'f'), ('f', 'v'), ('v', 'u'), ('v', 'B'), ('h', 'G'), ('G', 't'), ('G', 'p'), ('r', 's'), ('i', 's'), ('i', 'u'), ('M', 'I'), ('I', 'y'), ('x', 'H'), ('k', 'B'), ('L', 'p'), ('n', 'F'), ('n', 'N'), ('N', 'E'), ('N', 'D'), ('H', 'q'), ('q', 't')] },
    { "edge": ("g", "J"), "weight": 1338, "expected": [('a', 'K'), ('a', 'g'), ('e', 'l'), ('g', 'c'), ('K', 'h'), ('b', 'A'), ('b', 'z'), ('b', 'j'), ('j', 'I'), ('z', 'f'), ('c', 'w'), ('c', 'o'), ('w', 'l'), ('w', 'J'), ('o', 'E'), ('d', 'm'), ('C', 'y'), ('m', 'y'), ('l', 'f'), ('f', 'v'), ('v', 'u'), ('v', 'B'), ('h', 'G'), ('G', 't'), ('G', 'p'), ('r', 's'), ('i', 's'), ('i', 'u'), ('M', 'I'), ('I', 'y'), ('x', 'H'), ('k', 'B'), ('L', 'p'), ('n', 'F'), ('n', 'N'), ('N', 'E'), ('N', 'D'), ('H', 'q'), ('q', 't')] },
    { "edge": ("v", "B"), "weight": 953, "expected": [('a', 'K'), ('a', 'g'), ('e', 'l'), ('g', 'c'), ('K', 'h'), ('b', 'A'), ('b', 'z'), ('b', 'j'), ('j', 'I'), ('z', 'f'), ('c', 'w'), ('c', 'o'), ('w', 'l'), ('w', 'J'), ('o', 'E'), ('d', 'm'), ('C', 'y'), ('m', 'y'), ('l', 'f'), ('f', 'v'), ('v', 'u'), ('v', 'B'), ('h', 'G'), ('G', 't'), ('G', 'p'), ('r', 's'), ('i', 's'), ('i', 'u'), ('M', 'I'), ('I', 'y'), ('x', 'H'), ('k', 'B'), ('L', 'p'), ('n', 'F'), ('n', 'N'), ('N', 'E'), ('N', 'D'), ('H', 'q'), ('q', 't')] },
    { "edge": ("w", "J"), "weight": 1124, "expected": [('a', 'K'), ('a', 'g'), ('e', 'l'), ('g', 'c'), ('K', 'h'), ('b', 'A'), ('b', 'z'), ('b', 'j'), ('j', 'I'), ('z', 'f'), ('c', 'w'), ('c', 'o'), ('w', 'l'), ('w', 'J'), ('o', 'E'), ('d', 'm'), ('C', 'y'), ('m', 'y'), ('l', 'f'), ('f', 'v'), ('v', 'u'), ('v', 'B'), ('h', 'G'), ('G', 't'), ('G', 'p'), ('r', 's'), ('i', 's'), ('i', 'u'), ('M', 'I'), ('I', 'y'), ('x', 'H'), ('k', 'B'), ('L', 'p'), ('n', 'F'), ('n', 'N'), ('N', 'E'), ('N', 'D'), ('H', 'q'), ('q', 't')] }
]
# Graph consisting of 40 nodes
data[41]["graph"] = Graph(is_directed=False)
data[41]["graph"].add_edge("A", "e", 1643)
data[41]["graph"].add_edge("B", "E", 683)
data[41]["graph"].add_edge("C", "y", 1442)
data[41]["graph"].add_edge("D", "r", 1111)
data[41]["graph"].add_edge("E", "L", 608)
data[41]["graph"].add_edge("F", "w", 1019)
data[41]["graph"].add_edge("G", "L", 529)
data[41]["graph"].add_edge("G", "M", 390)
data[41]["graph"].add_edge("H", "I", 186)
data[41]["graph"].add_edge("J", "H", 1037)
data[41]["graph"].add_edge("K", "l", 1308)
data[41]["graph"].add_edge("M", "E", 300)
data[41]["graph"].add_edge("N", "B", 1577)
data[41]["graph"].add_edge("N", "r", 806)
data[41]["graph"].add_edge("O", "m", 1156)
data[41]["graph"].add_edge("O", "y", 1014)
data[41]["graph"].add_edge("a", "b", 1484)
data[41]["graph"].add_edge("a", "i", 278)
data[41]["graph"].add_edge("a", "p", 1175)
data[41]["graph"].add_edge("b", "N", 856)
data[41]["graph"].add_edge("b", "x", 425)
data[41]["graph"].add_edge("c", "A", 1334)
data[41]["graph"].add_edge("c", "J", 360)
data[41]["graph"].add_edge("c", "o", 1543)
data[41]["graph"].add_edge("d", "H", 1525)
data[41]["graph"].add_edge("d", "O", 1641)
data[41]["graph"].add_edge("d", "h", 769)
data[41]["graph"].add_edge("e", "s", 1271)
data[41]["graph"].add_edge("e", "z", 26)
data[41]["graph"].add_edge("f", "j", 1122)
data[41]["graph"].add_edge("f", "m", 1589)
data[41]["graph"].add_edge("f", "q", 1674)
data[41]["graph"].add_edge("g", "k", 781)
data[41]["graph"].add_edge("g", "v", 563)
data[41]["graph"].add_edge("h", "F", 135)
data[41]["graph"].add_edge("h", "K", 104)
data[41]["graph"].add_edge("i", "D", 399)
data[41]["graph"].add_edge("i", "l", 564)
data[41]["graph"].add_edge("j", "K", 129)
data[41]["graph"].add_edge("j", "r", 1401)
data[41]["graph"].add_edge("k", "F", 680)
data[41]["graph"].add_edge("k", "G", 1243)
data[41]["graph"].add_edge("m", "t", 1657)
data[41]["graph"].add_edge("n", "B", 185)
data[41]["graph"].add_edge("n", "I", 1345)
data[41]["graph"].add_edge("o", "C", 712)
data[41]["graph"].add_edge("o", "g", 1434)
data[41]["graph"].add_edge("p", "A", 1319)
data[41]["graph"].add_edge("p", "w", 604)
data[41]["graph"].add_edge("q", "C", 168)
data[41]["graph"].add_edge("q", "l", 824)
data[41]["graph"].add_edge("s", "M", 932)
data[41]["graph"].add_edge("s", "n", 1125)
data[41]["graph"].add_edge("t", "u", 355)
data[41]["graph"].add_edge("t", "y", 279)
data[41]["graph"].add_edge("v", "I", 82)
data[41]["graph"].add_edge("v", "u", 1450)
data[41]["graph"].add_edge("x", "D", 916)
data[41]["graph"].add_edge("x", "J", 349)
data[41]["graph"].add_edge("z", "u", 897)
data[41]["graph"].add_edge("z", "w", 1553)
data[41]["mst"] = Graph(is_directed=False)
data[41]["mst"].add_edge("B", "E", weight=683)
data[41]["mst"].add_edge("F", "w", weight=1019)
data[41]["mst"].add_edge("G", "L", weight=529)
data[41]["mst"].add_edge("G", "M", weight=390)
data[41]["mst"].add_edge("H", "I", weight=186)
data[41]["mst"].add_edge("J", "H", weight=1037)
data[41]["mst"].add_edge("M", "E", weight=300)
data[41]["mst"].add_edge("N", "r", weight=806)
data[41]["mst"].add_edge("O", "m", weight=1156)
data[41]["mst"].add_edge("O", "y", weight=1014)
data[41]["mst"].add_edge("a", "i", weight=278)
data[41]["mst"].add_edge("b", "N", weight=856)
data[41]["mst"].add_edge("b", "x", weight=425)
data[41]["mst"].add_edge("c", "J", weight=360)
data[41]["mst"].add_edge("d", "h", weight=769)
data[41]["mst"].add_edge("e", "s", weight=1271)
data[41]["mst"].add_edge("e", "z", weight=26)
data[41]["mst"].add_edge("f", "j", weight=1122)
data[41]["mst"].add_edge("g", "k", weight=781)
data[41]["mst"].add_edge("g", "v", weight=563)
data[41]["mst"].add_edge("h", "F", weight=135)
data[41]["mst"].add_edge("h", "K", weight=104)
data[41]["mst"].add_edge("i", "D", weight=399)
data[41]["mst"].add_edge("i", "l", weight=564)
data[41]["mst"].add_edge("j", "K", weight=129)
data[41]["mst"].add_edge("k", "F", weight=680)
data[41]["mst"].add_edge("k", "G", weight=1243)
data[41]["mst"].add_edge("n", "B", weight=185)
data[41]["mst"].add_edge("o", "C", weight=712)
data[41]["mst"].add_edge("p", "A", weight=1319)
data[41]["mst"].add_edge("p", "w", weight=604)
data[41]["mst"].add_edge("q", "C", weight=168)
data[41]["mst"].add_edge("q", "l", weight=824)
data[41]["mst"].add_edge("s", "M", weight=932)
data[41]["mst"].add_edge("t", "u", weight=355)
data[41]["mst"].add_edge("t", "y", weight=279)
data[41]["mst"].add_edge("v", "I", weight=82)
data[41]["mst"].add_edge("x", "D", weight=916)
data[41]["mst"].add_edge("x", "J", weight=349)
data[41]["mst"].add_edge("z", "u", weight=897)
data[41]["solutions"] = [
    { "edge": ("a", "p"), "weight": 1176, "expected": [('a', 'i'), ('i', 'D'), ('i', 'l'), ('b', 'x'), ('b', 'N'), ('p', 'w'), ('p', 'A'), ('N', 'r'), ('x', 'J'), ('x', 'D'), ('c', 'J'), ('J', 'H'), ('o', 'C'), ('d', 'h'), ('O', 'y'), ('O', 'm'), ('H', 'I'), ('h', 'K'), ('h', 'F'), ('e', 'z'), ('e', 's'), ('z', 'u'), ('s', 'M'), ('f', 'j'), ('q', 'C'), ('q', 'l'), ('j', 'K'), ('g', 'v'), ('g', 'k'), ('k', 'F'), ('k', 'G'), ('v', 'I'), ('F', 'w'), ('G', 'M'), ('G', 'L'), ('t', 'y'), ('t', 'u'), ('n', 'B'), ('B', 'E'), ('M', 'E')] },
    { "edge": ("n", "I"), "weight": 184, "expected": [('a', 'i'), ('i', 'D'), ('i', 'l'), ('b', 'x'), ('b', 'N'), ('p', 'w'), ('p', 'A'), ('N', 'r'), ('x', 'J'), ('x', 'D'), ('c', 'J'), ('J', 'H'), ('o', 'C'), ('d', 'h'), ('O', 'y'), ('O', 'm'), ('H', 'I'), ('h', 'K'), ('h', 'F'), ('e', 'z'), ('e', 's'), ('z', 'u'), ('s', 'M'), ('f', 'j'), ('q', 'C'), ('q', 'l'), ('j', 'K'), ('g', 'v'), ('g', 'k'), ('k', 'F'), ('v', 'I'), ('F', 'w'), ('G', 'M'), ('G', 'L'), ('t', 'y'), ('t', 'u'), ('n', 'I'), ('n', 'B'), ('B', 'E'), ('M', 'E')] },
    { "edge": ("q", "l"), "weight": 823, "expected": [('a', 'i'), ('i', 'D'), ('i', 'l'), ('b', 'x'), ('b', 'N'), ('p', 'w'), ('p', 'A'), ('N', 'r'), ('x', 'J'), ('x', 'D'), ('c', 'J'), ('J', 'H'), ('o', 'C'), ('d', 'h'), ('O', 'y'), ('O', 'm'), ('H', 'I'), ('h', 'K'), ('h', 'F'), ('e', 'z'), ('e', 's'), ('z', 'u'), ('s', 'M'), ('f', 'j'), ('q', 'C'), ('q', 'l'), ('j', 'K'), ('g', 'v'), ('g', 'k'), ('k', 'F'), ('k', 'G'), ('v', 'I'), ('F', 'w'), ('G', 'M'), ('G', 'L'), ('t', 'y'), ('t', 'u'), ('n', 'B'), ('B', 'E'), ('M', 'E')] },
    { "edge": ("i", "l"), "weight": 565, "expected": [('a', 'i'), ('i', 'D'), ('i', 'l'), ('b', 'x'), ('b', 'N'), ('p', 'w'), ('p', 'A'), ('N', 'r'), ('x', 'J'), ('x', 'D'), ('c', 'J'), ('J', 'H'), ('o', 'C'), ('d', 'h'), ('O', 'y'), ('O', 'm'), ('H', 'I'), ('h', 'K'), ('h', 'F'), ('e', 'z'), ('e', 's'), ('z', 'u'), ('s', 'M'), ('f', 'j'), ('q', 'C'), ('q', 'l'), ('j', 'K'), ('g', 'v'), ('g', 'k'), ('k', 'F'), ('k', 'G'), ('v', 'I'), ('F', 'w'), ('G', 'M'), ('G', 'L'), ('t', 'y'), ('t', 'u'), ('n', 'B'), ('B', 'E'), ('M', 'E')] }
]